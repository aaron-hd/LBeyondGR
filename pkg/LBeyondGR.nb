(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    426821,       9284]
NotebookOptionsPosition[    414393,       9088]
NotebookOutlinePosition[    414759,       9104]
CellTagsIndexPosition[    414716,       9101]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"SetOptions", "[", 
  RowBox[{
   RowBox[{"InputNotebook", "[", "]"}], ",", 
   RowBox[{"AutoGeneratedPackage", "\[Rule]", "Automatic"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.760419560735785*^9, 
  3.760419562174135*^9}},ExpressionUUID->"77075486-5282-43d8-8f4c-\
2640cde0b011"],

Cell[CellGroupData[{

Cell["begin LBeyondGR package ...", "Title",
 CellChangeTimes->{{3.7600677789668407`*^9, 3.7600678129491653`*^9}, {
  3.760068613638627*^9, 3.760068614341791*^9}, {3.760068660155191*^9, 
  3.7600686635605927`*^9}, {3.8722954290386972`*^9, 
  3.872295433779263*^9}},ExpressionUUID->"e1de7b50-f3e1-4431-bdde-\
ec835925983a"],

Cell["Load dependencies and initial declarations.", "Text",
 CellChangeTimes->{{3.7600678240643463`*^9, 
  3.7600678502788153`*^9}},ExpressionUUID->"1825afe7-ff8a-4c59-8c56-\
35df6d3a33c5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LBeyondGR`$Version", " ", "=", " ", "0.1"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"LBeyondGR`$Published", " ", "=", " ", "False"}], ";"}]}], "Code",
 CellChangeTimes->{{3.64473215920724*^9, 3.644732163269418*^9}, {
  3.645413837053811*^9, 3.645413867369465*^9}, {3.645849915582468*^9, 
  3.64584994130966*^9}, {3.64887910312961*^9, 3.6488791135974073`*^9}, {
  3.6500047034927063`*^9, 3.650004706980648*^9}, {3.656236771670972*^9, 
  3.656236791347458*^9}, {3.76006787377022*^9, 3.760067896756692*^9}, {
  3.872295602533154*^9, 3.872295602534498*^9}, {3.875374469370543*^9, 
  3.875374470062415*^9}},ExpressionUUID->"2dc640ed-d7ae-41f6-abed-\
eef75faaee9f"],

Cell["Print message to the user that the package is loaded.", "Text",
 CellChangeTimes->{{3.760068063861763*^9, 
  3.760068076926009*^9}},ExpressionUUID->"163775db-cc2d-4157-b960-\
0ed7348f1b00"],

Cell[BoxData[
 RowBox[{"Print", "@", 
  "\"\<=======================================================================\
=\nLBeyondGR package is being loaded.\n =============================\n\
version: last updated 26-Oct-2023\n\
=======================================================================\>\""}]\
], "Code",
 CellChangeTimes->{{3.644731335247908*^9, 3.6447313419342623`*^9}, {
   3.645413967540298*^9, 3.6454139737497873`*^9}, {3.645425357299204*^9, 
   3.6454253612347317`*^9}, {3.64542541546229*^9, 3.6454254374921207`*^9}, {
   3.645961862851595*^9, 3.645961877246524*^9}, 3.648559760850485*^9, {
   3.6488792823547688`*^9, 3.648879285794656*^9}, {3.760067927296546*^9, 
   3.760067965037586*^9}, {3.7600680835134573`*^9, 3.760068100713019*^9}, 
   3.76007668782581*^9, {3.779439846846109*^9, 3.77943984720564*^9}, {
   3.839058622215787*^9, 3.839058652933394*^9}, {3.847455831996492*^9, 
   3.8474558462470503`*^9}, {3.848077051244919*^9, 3.848077051282056*^9}, {
   3.860539136395825*^9, 3.860539142733178*^9}, 3.8722954562788763`*^9, {
   3.872295511850561*^9, 3.8722955147735023`*^9}, {3.9073022176972933`*^9, 
   3.907302222114541*^9}},ExpressionUUID->"53eaacf0-ecae-4728-aa5d-\
acc9a7616236"],

Cell["Include MaTeX for plots and set a base", "Text",
 CellChangeTimes->{{3.865464646878824*^9, 
  3.865464661985807*^9}},ExpressionUUID->"772fea83-d35b-4a28-a4e7-\
1e8b0c8d7141"],

Cell[BoxData[{
 RowBox[{"<<", "MaTeX`"}], "\n", 
 RowBox[{"SetOptions", "[", 
  RowBox[{"MaTeX", ",", " ", 
   RowBox[{"\"\<Preamble\>\"", " ", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\\\\usepackage{lmodern,exscale}\>\"", ",", " ", 
      "\"\<\\\\usepackage{amsmath,amssymb}\>\"", ",", " ", 
      "\"\<\\\\usepackage{graphicx}\>\""}], "}"}]}]}], "]"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"MaTeX", ",", 
    RowBox[{"FontSize", "\[Rule]", "16"}]}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{
  3.865464642093707*^9, {3.865464691111348*^9, 3.865464720748808*^9}, {
   3.869745803728414*^9, 3.869745812081869*^9}, {3.869745843597825*^9, 
   3.869745867430616*^9}, 3.869745923966989*^9, {3.8722963210072203`*^9, 
   3.872296325151355*^9}},ExpressionUUID->"3b18929a-1000-4ce2-81bd-\
664f89336639"],

Cell["\<\
Begin the package.
TODO: Here one could also load xAct or xCoba to embedd a derivation of the \
Christoffel symbols and more. For now we keep the package minimalistic.\
\>", "Text",
 CellChangeTimes->{{3.760068121982819*^9, 
  3.760068221532839*^9}},ExpressionUUID->"cfdf6fc0-078b-4281-b7bb-\
a791b15af319"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<LBeyondGR`\>\"", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.644731335247908*^9, 3.6447313419342623`*^9}, {
   3.645413967540298*^9, 3.6454139737497873`*^9}, {3.645849939934794*^9, 
   3.645849956563386*^9}, {3.6458505209835033`*^9, 3.645850528333416*^9}, {
   3.645850716319449*^9, 3.645850723309123*^9}, {3.645850959674803*^9, 
   3.645850964331173*^9}, {3.645937189155244*^9, 3.645937190717827*^9}, 
   3.648879113611742*^9, {3.6488792668127823`*^9, 3.6488793132500143`*^9}, 
   3.656236727671817*^9, {3.656323561967832*^9, 3.656323563539332*^9}, {
   3.7600767345361147`*^9, 3.760076752536377*^9}, 
   3.872295602535966*^9},ExpressionUUID->"abdab360-a506-46a2-a8f6-\
63fb657a1a96"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "@@", 
   RowBox[{"Names", "[", "\"\<LBeyondGR`*\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "@@", 
   RowBox[{"Names", "[", "\"\<LBeyondGR`*\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Unprotect", "@@", 
   RowBox[{"Names", "[", "\"\<LBeyondGR`Private`*\>\"", "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"ClearAll", "@@", 
   RowBox[{"Names", "[", "\"\<LBeyondGR`Private`*\>\"", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.650006130720793*^9, 3.650006137295719*^9}, {
  3.656236724960229*^9, 3.6562367268796587`*^9}, {3.760076872244982*^9, 
  3.760076875455655*^9}, {3.872295602539065*^9, 
  3.872295602542303*^9}},ExpressionUUID->"b161de56-d291-4fe3-a82b-\
5815176073d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Public part of the LBeyondGR package", "Title",
 CellChangeTimes->{{3.76006862165816*^9, 3.760068641661705*^9}, 
   3.872295544445279*^9},ExpressionUUID->"c6a22289-b7c9-4689-995e-\
ede231415f97"],

Cell[CellGroupData[{

Cell["preset symbols of the package", "Section",
 CellChangeTimes->{{3.7600802738889*^9, 
  3.760080281537697*^9}},ExpressionUUID->"c1e3d575-c49f-4869-be69-\
c4693156b5b3"],

Cell[BoxData[{
 RowBox[{"$metric", ";", " ", "$christoffel", ";"}], "\n", 
 RowBox[{"$t", ";", " ", "$r", ";", " ", "$\[Theta]", ";", " ", "$\[Phi]", 
  ";", " ", "$v", ";", " ", "$\[Chi]", ";"}], "\n", 
 RowBox[{"$mass", ";", " ", "$spin", ";", " ", "$G0", ";"}], "\n", 
 RowBox[{
  RowBox[{"x", ";", " ", "y", ";", " ", "k", ";", " ", "\[Lambda]", ";"}], 
  " "}]}], "Code",
 CellChangeTimes->{{3.760080286924884*^9, 3.7600803011972847`*^9}, {
   3.760419243508525*^9, 3.7604192482700567`*^9}, {3.779279888981204*^9, 
   3.779279926139769*^9}, {3.779280599607965*^9, 3.779280654692923*^9}, {
   3.77928077264662*^9, 3.7792808466773577`*^9}, 3.77928099131923*^9, {
   3.7792810317022448`*^9, 3.779281211267555*^9}, {3.779282110849389*^9, 
   3.779282113719719*^9}, {3.779282329442155*^9, 3.7792823298839197`*^9}, {
   3.811240490357786*^9, 3.81124049930198*^9}, {3.811244516889174*^9, 
   3.81124452398501*^9}, {3.811245973335513*^9, 3.8112459768138733`*^9}, {
   3.8112462715053673`*^9, 3.811246274409223*^9}, {3.907338009509259*^9, 
   3.907338010298511*^9}},ExpressionUUID->"64ab91e6-42ae-4efd-8ad8-\
76724d66eb33"]
}, Open  ]],

Cell[CellGroupData[{

Cell["functions to be seen as public", "Section",
 CellChangeTimes->{{3.7600779370359583`*^9, 3.760077945813456*^9}, {
  3.779370645724156*^9, 
  3.779370661155665*^9}},ExpressionUUID->"a0814f68-03ca-4cd8-965a-\
42482b371eb1"],

Cell[CellGroupData[{

Cell["initialization", "Subsection",
 CellChangeTimes->{{3.907304953304583*^9, 
  3.907304955839944*^9}},ExpressionUUID->"cdb421d8-fcb4-496e-b599-\
b822ec6a832e"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetMetric", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<SetMetric[metricSymbol_Symbol]:: sets just the symbol of the metric \
which is to be used.\\n\n\
==============================================================================\
==============\\n\nSetMetric[metricSymbol, metricComponents, \
options:OptionsPattern[]]:: sets the metricSymbol and explicit \
metricComponents given as a List of dimension (4,4).\\n\nOPTIONS:\\n\n\
______________________________________________________________________________\
_\\n\nLowerQ->True (Specifies whether the user enters a metric with lower or \
upper indices. Standard Value is True, i.e., that the user enters with lower \
indices.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.644731335247908*^9, 3.6447313419342623`*^9}, {
   3.645413967540298*^9, 3.6454139737497873`*^9}, {3.645427085225877*^9, 
   3.645427171666885*^9}, {3.6454277583381853`*^9, 3.645428013512774*^9}, {
   3.645428046874248*^9, 3.6454281039296093`*^9}, {3.645428181233142*^9, 
   3.6454281831522703`*^9}, {3.645437219268062*^9, 3.6454373495199633`*^9}, {
   3.645445505112389*^9, 3.645445580582028*^9}, {3.6454492239429483`*^9, 
   3.645449225466455*^9}, {3.645449330759803*^9, 3.645449343431946*^9}, {
   3.645511396665414*^9, 3.645511479635212*^9}, {3.6455115263912373`*^9, 
   3.645511529717677*^9}, {3.645686112453723*^9, 3.645686146260416*^9}, {
   3.6458501852745533`*^9, 3.645850195711934*^9}, {3.645860110260922*^9, 
   3.645860164207665*^9}, {3.646461719000599*^9, 3.64646174888408*^9}, {
   3.646470685652377*^9, 3.646470686694106*^9}, {3.647329400264453*^9, 
   3.647329403032419*^9}, {3.6473297232796793`*^9, 3.647329740702916*^9}, {
   3.647346579506857*^9, 3.647346601341938*^9}, {3.6473466341289253`*^9, 
   3.6473467677572107`*^9}, {3.647346799740559*^9, 3.6473468389890223`*^9}, {
   3.647346932840445*^9, 3.64734705886961*^9}, {3.6473470904043083`*^9, 
   3.647347183153625*^9}, {3.6473472232225437`*^9, 3.647347239360388*^9}, {
   3.647347308948543*^9, 3.647347352781201*^9}, {3.6473473885243053`*^9, 
   3.6473473940515337`*^9}, {3.647347434363022*^9, 3.6473475553039494`*^9}, {
   3.647347601096058*^9, 3.647347869104927*^9}, {3.6473480886495943`*^9, 
   3.64734816810362*^9}, {3.6473482472074423`*^9, 3.647348257267666*^9}, {
   3.6473483067768297`*^9, 3.647348494365985*^9}, {3.647350311772941*^9, 
   3.6473503612457447`*^9}, {3.647602740896502*^9, 3.647602760722904*^9}, {
   3.647603266224543*^9, 3.6476032770780487`*^9}, {3.647673213339265*^9, 
   3.647673221828848*^9}, 3.647846555017847*^9, {3.647860498511792*^9, 
   3.647860503962981*^9}, {3.647861866986738*^9, 3.64786187965551*^9}, {
   3.648193134777913*^9, 3.648193143817316*^9}, {3.648291600684483*^9, 
   3.648291608236081*^9}, {3.648292290957872*^9, 3.648292349303978*^9}, {
   3.648292420758473*^9, 3.648292485812751*^9}, {3.648292525843595*^9, 
   3.64829282063518*^9}, {3.648366672993896*^9, 3.648366674456417*^9}, {
   3.648366742314117*^9, 3.648366813249461*^9}, {3.648366872910808*^9, 
   3.648367108825264*^9}, {3.648367349124825*^9, 3.648367444927108*^9}, {
   3.648367482500355*^9, 3.648367505493908*^9}, {3.648387740492426*^9, 
   3.64838788669695*^9}, {3.6483890211472607`*^9, 3.6483890507792664`*^9}, {
   3.648454595209074*^9, 3.648454612520275*^9}, {3.648879113630684*^9, 
   3.648879113654911*^9}, 3.648879265897849*^9, {3.648879425280835*^9, 
   3.648879462510956*^9}, {3.6488794946702967`*^9, 3.648879494674572*^9}, {
   3.6488800149118547`*^9, 3.648880028415845*^9}, {3.6488802830970507`*^9, 
   3.6488802837524137`*^9}, {3.6488803801464853`*^9, 3.648880381098076*^9}, 
   3.648880556193438*^9, {3.648883322294725*^9, 3.64888334478906*^9}, {
   3.6488900302578583`*^9, 3.648890099151113*^9}, {3.648890137917892*^9, 
   3.648890186236273*^9}, {3.648890418774455*^9, 3.648890419901692*^9}, {
   3.648890622896734*^9, 3.6488906265444117`*^9}, {3.6488906980945883`*^9, 
   3.6488906992944508`*^9}, {3.648890820714819*^9, 3.648890821370865*^9}, {
   3.6488910573484383`*^9, 3.648891102783084*^9}, {3.64889117345752*^9, 
   3.648891210400659*^9}, {3.648891243887454*^9, 3.648891326013159*^9}, {
   3.648891388091867*^9, 3.648891405388597*^9}, 3.648891587126869*^9, {
   3.648891627023336*^9, 3.6488916674571733`*^9}, 3.64889393777908*^9, {
   3.648897546629862*^9, 3.648897549269772*^9}, {3.649163062272032*^9, 
   3.6491630804466352`*^9}, {3.6495703073161182`*^9, 3.64957032627567*^9}, 
   3.64974205943544*^9, 3.649742095939756*^9, {3.650021660494108*^9, 
   3.650021689793172*^9}, {3.650021814458976*^9, 3.650021874238109*^9}, 
   3.65002201314578*^9, {3.6500220585990953`*^9, 3.650022086245823*^9}, {
   3.6500222209307003`*^9, 3.6500222249214783`*^9}, {3.6500225477698097`*^9, 
   3.6500225546659927`*^9}, {3.650022656902927*^9, 3.6500226647907248`*^9}, {
   3.650022721845286*^9, 3.6500228786864233`*^9}, {3.650022917457178*^9, 
   3.6500230703260803`*^9}, {3.656403585879672*^9, 3.6564036444215727`*^9}, {
   3.656403751171433*^9, 3.656403757779257*^9}, {3.760077979960908*^9, 
   3.760078238492313*^9}, {3.760078499048361*^9, 3.760078501758933*^9}, {
   3.760078764365315*^9, 3.7600787702761173`*^9}, {3.760078818046336*^9, 
   3.760078821798991*^9}, {3.7600788649931593`*^9, 3.760078879217111*^9}, {
   3.7600790418087263`*^9, 3.760079050962823*^9}, {3.7792820416462593`*^9, 
   3.779282044810314*^9}, {3.779282446428721*^9, 3.7792824530951967`*^9}, {
   3.7792825251877337`*^9, 
   3.7792825259457817`*^9}},ExpressionUUID->"6ccda2f5-7b1c-4574-adbb-\
4d9a55f2a636"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetMetric", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<GetMetric[]:: gets just the symbol of the metric which is currently \
declared.\\n\n\
==============================================================================\
==============\\n\nGetMetric[i,j]:: gets an explicit component (i,j) of the \
metric (or its inverse), where i and j have to be explicit indices, i.e., \
integers (-4,-3,-2,-1,1,2,3,4).\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.644731335247908*^9, 3.6447313419342623`*^9}, {
   3.645413967540298*^9, 3.6454139737497873`*^9}, {3.645427085225877*^9, 
   3.645427171666885*^9}, {3.6454277583381853`*^9, 3.645428013512774*^9}, {
   3.645428046874248*^9, 3.6454281039296093`*^9}, {3.645428181233142*^9, 
   3.6454281831522703`*^9}, {3.645437219268062*^9, 3.6454373495199633`*^9}, {
   3.645445505112389*^9, 3.645445580582028*^9}, {3.6454492239429483`*^9, 
   3.645449225466455*^9}, {3.645449330759803*^9, 3.645449343431946*^9}, {
   3.645511396665414*^9, 3.645511479635212*^9}, {3.6455115263912373`*^9, 
   3.645511529717677*^9}, {3.645686112453723*^9, 3.645686146260416*^9}, {
   3.6458501852745533`*^9, 3.645850195711934*^9}, {3.645860110260922*^9, 
   3.645860164207665*^9}, {3.646461719000599*^9, 3.64646174888408*^9}, {
   3.646470685652377*^9, 3.646470686694106*^9}, {3.647329400264453*^9, 
   3.647329403032419*^9}, {3.6473297232796793`*^9, 3.647329740702916*^9}, {
   3.647346579506857*^9, 3.647346601341938*^9}, {3.6473466341289253`*^9, 
   3.6473467677572107`*^9}, {3.647346799740559*^9, 3.6473468389890223`*^9}, {
   3.647346932840445*^9, 3.64734705886961*^9}, {3.6473470904043083`*^9, 
   3.647347183153625*^9}, {3.6473472232225437`*^9, 3.647347239360388*^9}, {
   3.647347308948543*^9, 3.647347352781201*^9}, {3.6473473885243053`*^9, 
   3.6473473940515337`*^9}, {3.647347434363022*^9, 3.6473475553039494`*^9}, {
   3.647347601096058*^9, 3.647347869104927*^9}, {3.6473480886495943`*^9, 
   3.64734816810362*^9}, {3.6473482472074423`*^9, 3.647348257267666*^9}, {
   3.6473483067768297`*^9, 3.647348494365985*^9}, {3.647350311772941*^9, 
   3.6473503612457447`*^9}, {3.647602740896502*^9, 3.647602760722904*^9}, {
   3.647603266224543*^9, 3.6476032770780487`*^9}, {3.647673213339265*^9, 
   3.647673221828848*^9}, 3.647846555017847*^9, {3.647860498511792*^9, 
   3.647860503962981*^9}, {3.647861866986738*^9, 3.64786187965551*^9}, {
   3.648193134777913*^9, 3.648193143817316*^9}, {3.648291600684483*^9, 
   3.648291608236081*^9}, {3.648292290957872*^9, 3.648292349303978*^9}, {
   3.648292420758473*^9, 3.648292485812751*^9}, {3.648292525843595*^9, 
   3.64829282063518*^9}, {3.648366672993896*^9, 3.648366674456417*^9}, {
   3.648366742314117*^9, 3.648366813249461*^9}, {3.648366872910808*^9, 
   3.648367108825264*^9}, {3.648367349124825*^9, 3.648367444927108*^9}, {
   3.648367482500355*^9, 3.648367505493908*^9}, {3.648387740492426*^9, 
   3.64838788669695*^9}, {3.6483890211472607`*^9, 3.6483890507792664`*^9}, {
   3.648454595209074*^9, 3.648454612520275*^9}, {3.648879113630684*^9, 
   3.648879113654911*^9}, 3.648879265897849*^9, {3.648879425280835*^9, 
   3.648879462510956*^9}, {3.6488794946702967`*^9, 3.648879494674572*^9}, {
   3.6488800149118547`*^9, 3.648880028415845*^9}, {3.6488802830970507`*^9, 
   3.6488802837524137`*^9}, {3.6488803801464853`*^9, 3.648880381098076*^9}, 
   3.648880556193438*^9, {3.648883322294725*^9, 3.64888334478906*^9}, {
   3.6488900302578583`*^9, 3.648890099151113*^9}, {3.648890137917892*^9, 
   3.648890186236273*^9}, {3.648890418774455*^9, 3.648890419901692*^9}, {
   3.648890622896734*^9, 3.6488906265444117`*^9}, {3.6488906980945883`*^9, 
   3.6488906992944508`*^9}, {3.648890820714819*^9, 3.648890821370865*^9}, {
   3.6488910573484383`*^9, 3.648891102783084*^9}, {3.64889117345752*^9, 
   3.648891210400659*^9}, {3.648891243887454*^9, 3.648891326013159*^9}, {
   3.648891388091867*^9, 3.648891405388597*^9}, 3.648891587126869*^9, {
   3.648891627023336*^9, 3.6488916674571733`*^9}, 3.64889393777908*^9, {
   3.648897546629862*^9, 3.648897549269772*^9}, {3.649163062272032*^9, 
   3.6491630804466352`*^9}, {3.6495703073161182`*^9, 3.64957032627567*^9}, 
   3.64974205943544*^9, 3.649742095939756*^9, {3.650021660494108*^9, 
   3.650021689793172*^9}, {3.650021814458976*^9, 3.650021874238109*^9}, 
   3.65002201314578*^9, {3.6500220585990953`*^9, 3.650022086245823*^9}, {
   3.6500222209307003`*^9, 3.6500222249214783`*^9}, {3.6500225477698097`*^9, 
   3.6500225546659927`*^9}, {3.650022656902927*^9, 3.6500226647907248`*^9}, {
   3.650022721845286*^9, 3.6500228786864233`*^9}, {3.650022917457178*^9, 
   3.6500230703260803`*^9}, {3.656403585879672*^9, 3.6564036444215727`*^9}, {
   3.656403751171433*^9, 3.656403757779257*^9}, {3.760077979960908*^9, 
   3.760078238492313*^9}, {3.760078499048361*^9, 3.760078501758933*^9}, {
   3.7600786878709*^9, 3.760078713341898*^9}, {3.7600788322972927`*^9, 
   3.760078961569639*^9}},ExpressionUUID->"9beac848-0955-433f-b059-\
427204a71661"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetBoyerLindquistCoords", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<SetCoordinates[t_Symbol, r_Symbol, \[Theta]_Symbol, \[Phi]_Symbol]:: \
sets the symbols to be used as BL coordinates.\\n\n\
==============================================================================\
==============\ncurrently the camera is only set up for BL or Kerr \
coordinates!\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetKerrCoords", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<SetCoordinates[v_Symbol, r_Symbol, \[Theta]_Symbol, \
\[Chi]_Symbolin]:: sets the list of symbols to be used as Kerr \
coordinates.\\n\n\
==============================================================================\
==============\ncurrently the camera is only set up for BL or Kerr \
coordinates!\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.779280314648961*^9, 3.779280483163535*^9}, 
   3.7792815711098347`*^9, {3.779282530816828*^9, 3.7792825450832577`*^9}, {
   3.779282588201185*^9, 3.779282657280836*^9}, {3.811240106436859*^9, 
   3.8112401076453943`*^9}, {3.8112401555220747`*^9, 3.811240205800102*^9}, {
   3.811240366019249*^9, 3.8112403672934933`*^9}, 3.8112460592292624`*^9, {
   3.811246256193215*^9, 
   3.811246256945834*^9}},ExpressionUUID->"3884822e-3152-48e8-8bac-\
10248f28093b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetBoyerLindquistCoords", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<GetBoyerLindquistCoords[]:: gets the list of symbols of the BL \
coordinates currently declared.\\n\n\
==============================================================================\
==============\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GetKerrCoords", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<GetKerrCoords[]:: gets the list of symbols of the Kerr coordinates \
currently declared.\\n\n\
==============================================================================\
==============\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.644731335247908*^9, 3.6447313419342623`*^9}, {
   3.645413967540298*^9, 3.6454139737497873`*^9}, {3.645427085225877*^9, 
   3.645427171666885*^9}, {3.6454277583381853`*^9, 3.645428013512774*^9}, {
   3.645428046874248*^9, 3.6454281039296093`*^9}, {3.645428181233142*^9, 
   3.6454281831522703`*^9}, {3.645437219268062*^9, 3.6454373495199633`*^9}, {
   3.645445505112389*^9, 3.645445580582028*^9}, {3.6454492239429483`*^9, 
   3.645449225466455*^9}, {3.645449330759803*^9, 3.645449343431946*^9}, {
   3.645511396665414*^9, 3.645511479635212*^9}, {3.6455115263912373`*^9, 
   3.645511529717677*^9}, {3.645686112453723*^9, 3.645686146260416*^9}, {
   3.6458501852745533`*^9, 3.645850195711934*^9}, {3.645860110260922*^9, 
   3.645860164207665*^9}, {3.646461719000599*^9, 3.64646174888408*^9}, {
   3.646470685652377*^9, 3.646470686694106*^9}, {3.647329400264453*^9, 
   3.647329403032419*^9}, {3.6473297232796793`*^9, 3.647329740702916*^9}, {
   3.647346579506857*^9, 3.647346601341938*^9}, {3.6473466341289253`*^9, 
   3.6473467677572107`*^9}, {3.647346799740559*^9, 3.6473468389890223`*^9}, {
   3.647346932840445*^9, 3.64734705886961*^9}, {3.6473470904043083`*^9, 
   3.647347183153625*^9}, {3.6473472232225437`*^9, 3.647347239360388*^9}, {
   3.647347308948543*^9, 3.647347352781201*^9}, {3.6473473885243053`*^9, 
   3.6473473940515337`*^9}, {3.647347434363022*^9, 3.6473475553039494`*^9}, {
   3.647347601096058*^9, 3.647347869104927*^9}, {3.6473480886495943`*^9, 
   3.64734816810362*^9}, {3.6473482472074423`*^9, 3.647348257267666*^9}, {
   3.6473483067768297`*^9, 3.647348494365985*^9}, {3.647350311772941*^9, 
   3.6473503612457447`*^9}, {3.647602740896502*^9, 3.647602760722904*^9}, {
   3.647603266224543*^9, 3.6476032770780487`*^9}, {3.647673213339265*^9, 
   3.647673221828848*^9}, 3.647846555017847*^9, {3.647860498511792*^9, 
   3.647860503962981*^9}, {3.647861866986738*^9, 3.64786187965551*^9}, {
   3.648193134777913*^9, 3.648193143817316*^9}, {3.648291600684483*^9, 
   3.648291608236081*^9}, {3.648292290957872*^9, 3.648292349303978*^9}, {
   3.648292420758473*^9, 3.648292485812751*^9}, {3.648292525843595*^9, 
   3.64829282063518*^9}, {3.648366672993896*^9, 3.648366674456417*^9}, {
   3.648366742314117*^9, 3.648366813249461*^9}, {3.648366872910808*^9, 
   3.648367108825264*^9}, {3.648367349124825*^9, 3.648367444927108*^9}, {
   3.648367482500355*^9, 3.648367505493908*^9}, {3.648387740492426*^9, 
   3.64838788669695*^9}, {3.6483890211472607`*^9, 3.6483890507792664`*^9}, {
   3.648454595209074*^9, 3.648454612520275*^9}, {3.648879113630684*^9, 
   3.648879113654911*^9}, 3.648879265897849*^9, {3.648879425280835*^9, 
   3.648879462510956*^9}, {3.6488794946702967`*^9, 3.648879494674572*^9}, {
   3.6488800149118547`*^9, 3.648880028415845*^9}, {3.6488802830970507`*^9, 
   3.6488802837524137`*^9}, {3.6488803801464853`*^9, 3.648880381098076*^9}, 
   3.648880556193438*^9, {3.648883322294725*^9, 3.64888334478906*^9}, {
   3.6488900302578583`*^9, 3.648890099151113*^9}, {3.648890137917892*^9, 
   3.648890186236273*^9}, {3.648890418774455*^9, 3.648890419901692*^9}, {
   3.648890622896734*^9, 3.6488906265444117`*^9}, {3.6488906980945883`*^9, 
   3.6488906992944508`*^9}, {3.648890820714819*^9, 3.648890821370865*^9}, {
   3.6488910573484383`*^9, 3.648891102783084*^9}, {3.64889117345752*^9, 
   3.648891210400659*^9}, {3.648891243887454*^9, 3.648891326013159*^9}, {
   3.648891388091867*^9, 3.648891405388597*^9}, 3.648891587126869*^9, {
   3.648891627023336*^9, 3.6488916674571733`*^9}, 3.64889393777908*^9, {
   3.648897546629862*^9, 3.648897549269772*^9}, {3.649163062272032*^9, 
   3.6491630804466352`*^9}, {3.6495703073161182`*^9, 3.64957032627567*^9}, 
   3.64974205943544*^9, 3.649742095939756*^9, {3.650021660494108*^9, 
   3.650021689793172*^9}, {3.650021814458976*^9, 3.650021874238109*^9}, 
   3.65002201314578*^9, {3.6500220585990953`*^9, 3.650022086245823*^9}, {
   3.6500222209307003`*^9, 3.6500222249214783`*^9}, {3.6500225477698097`*^9, 
   3.6500225546659927`*^9}, {3.650022656902927*^9, 3.6500226647907248`*^9}, {
   3.650022721845286*^9, 3.6500228786864233`*^9}, {3.650022917457178*^9, 
   3.6500230703260803`*^9}, {3.656403585879672*^9, 3.6564036444215727`*^9}, {
   3.656403751171433*^9, 3.656403757779257*^9}, {3.760077979960908*^9, 
   3.760078238492313*^9}, {3.760078499048361*^9, 3.760078501758933*^9}, {
   3.7600786878709*^9, 3.760078713341898*^9}, {3.7600788322972927`*^9, 
   3.760078961569639*^9}, {3.7792804937227287`*^9, 3.779280537253819*^9}, {
   3.811240214983891*^9, 
   3.811240236688899*^9}},ExpressionUUID->"8775a527-62c6-46ea-af82-\
e81b6fc79dbd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetMass", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<SetMass[mass_Symbol]:: sets the symbol that the user uses as the BH \
mass.\\n\n\
==============================================================================\
==============\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetNewtonCoupling", "::", "usage"}], " ", "=", " ", "\n", 
    "\"\<SetMass[G0_Symbol]:: sets the symbol that the user uses as the the \
Newton coupling G0.\\n\n\
==============================================================================\
==============\>\""}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetSpin", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<SetSpin[spin_Symbol]:: sets the symbol that the user uses as the BH \
spin.\\n\n\
==============================================================================\
==============\>\""}], ";"}]}], "Code",
 CellChangeTimes->{{3.644731335247908*^9, 3.6447313419342623`*^9}, {
   3.645413967540298*^9, 3.6454139737497873`*^9}, {3.645427085225877*^9, 
   3.645427171666885*^9}, {3.6454277583381853`*^9, 3.645428013512774*^9}, {
   3.645428046874248*^9, 3.6454281039296093`*^9}, {3.645428181233142*^9, 
   3.6454281831522703`*^9}, {3.645437219268062*^9, 3.6454373495199633`*^9}, {
   3.645445505112389*^9, 3.645445580582028*^9}, {3.6454492239429483`*^9, 
   3.645449225466455*^9}, {3.645449330759803*^9, 3.645449343431946*^9}, {
   3.645511396665414*^9, 3.645511479635212*^9}, {3.6455115263912373`*^9, 
   3.645511529717677*^9}, {3.645686112453723*^9, 3.645686146260416*^9}, {
   3.6458501852745533`*^9, 3.645850195711934*^9}, {3.645860110260922*^9, 
   3.645860164207665*^9}, {3.646461719000599*^9, 3.64646174888408*^9}, {
   3.646470685652377*^9, 3.646470686694106*^9}, {3.647329400264453*^9, 
   3.647329403032419*^9}, {3.6473297232796793`*^9, 3.647329740702916*^9}, {
   3.647346579506857*^9, 3.647346601341938*^9}, {3.6473466341289253`*^9, 
   3.6473467677572107`*^9}, {3.647346799740559*^9, 3.6473468389890223`*^9}, {
   3.647346932840445*^9, 3.64734705886961*^9}, {3.6473470904043083`*^9, 
   3.647347183153625*^9}, {3.6473472232225437`*^9, 3.647347239360388*^9}, {
   3.647347308948543*^9, 3.647347352781201*^9}, {3.6473473885243053`*^9, 
   3.6473473940515337`*^9}, {3.647347434363022*^9, 3.6473475553039494`*^9}, {
   3.647347601096058*^9, 3.647347869104927*^9}, {3.6473480886495943`*^9, 
   3.64734816810362*^9}, {3.6473482472074423`*^9, 3.647348257267666*^9}, {
   3.6473483067768297`*^9, 3.647348494365985*^9}, {3.647350311772941*^9, 
   3.6473503612457447`*^9}, {3.647602740896502*^9, 3.647602760722904*^9}, {
   3.647603266224543*^9, 3.6476032770780487`*^9}, {3.647673213339265*^9, 
   3.647673221828848*^9}, 3.647846555017847*^9, {3.647860498511792*^9, 
   3.647860503962981*^9}, {3.647861866986738*^9, 3.64786187965551*^9}, {
   3.648193134777913*^9, 3.648193143817316*^9}, {3.648291600684483*^9, 
   3.648291608236081*^9}, {3.648292290957872*^9, 3.648292349303978*^9}, {
   3.648292420758473*^9, 3.648292485812751*^9}, {3.648292525843595*^9, 
   3.64829282063518*^9}, {3.648366672993896*^9, 3.648366674456417*^9}, {
   3.648366742314117*^9, 3.648366813249461*^9}, {3.648366872910808*^9, 
   3.648367108825264*^9}, {3.648367349124825*^9, 3.648367444927108*^9}, {
   3.648367482500355*^9, 3.648367505493908*^9}, {3.648387740492426*^9, 
   3.64838788669695*^9}, {3.6483890211472607`*^9, 3.6483890507792664`*^9}, {
   3.648454595209074*^9, 3.648454612520275*^9}, {3.648879113630684*^9, 
   3.648879113654911*^9}, 3.648879265897849*^9, {3.648879425280835*^9, 
   3.648879462510956*^9}, {3.6488794946702967`*^9, 3.648879494674572*^9}, {
   3.6488800149118547`*^9, 3.648880028415845*^9}, {3.6488802830970507`*^9, 
   3.6488802837524137`*^9}, {3.6488803801464853`*^9, 3.648880381098076*^9}, 
   3.648880556193438*^9, {3.648883322294725*^9, 3.64888334478906*^9}, {
   3.6488900302578583`*^9, 3.648890099151113*^9}, {3.648890137917892*^9, 
   3.648890186236273*^9}, {3.648890418774455*^9, 3.648890419901692*^9}, {
   3.648890622896734*^9, 3.6488906265444117`*^9}, {3.6488906980945883`*^9, 
   3.6488906992944508`*^9}, {3.648890820714819*^9, 3.648890821370865*^9}, {
   3.6488910573484383`*^9, 3.648891102783084*^9}, {3.64889117345752*^9, 
   3.648891210400659*^9}, {3.648891243887454*^9, 3.648891326013159*^9}, {
   3.648891388091867*^9, 3.648891405388597*^9}, 3.648891587126869*^9, {
   3.648891627023336*^9, 3.6488916674571733`*^9}, 3.64889393777908*^9, {
   3.648897546629862*^9, 3.648897549269772*^9}, {3.649163062272032*^9, 
   3.6491630804466352`*^9}, {3.6495703073161182`*^9, 3.64957032627567*^9}, 
   3.64974205943544*^9, 3.649742095939756*^9, {3.650021660494108*^9, 
   3.650021689793172*^9}, {3.650021814458976*^9, 3.650021874238109*^9}, 
   3.65002201314578*^9, {3.6500220585990953`*^9, 3.650022086245823*^9}, {
   3.6500222209307003`*^9, 3.6500222249214783`*^9}, {3.6500225477698097`*^9, 
   3.6500225546659927`*^9}, {3.650022656902927*^9, 3.6500226647907248`*^9}, {
   3.650022721845286*^9, 3.6500228786864233`*^9}, {3.650022917457178*^9, 
   3.6500230703260803`*^9}, {3.656403585879672*^9, 3.6564036444215727`*^9}, {
   3.656403751171433*^9, 3.656403757779257*^9}, {3.760077979960908*^9, 
   3.760078238492313*^9}, {3.760078499048361*^9, 3.760078501758933*^9}, {
   3.7600786878709*^9, 3.760078713341898*^9}, {3.7600788322972927`*^9, 
   3.760078961569639*^9}, {3.7792804937227287`*^9, 3.779280537253819*^9}, {
   3.811240214983891*^9, 3.811240236688899*^9}, {3.811245710307824*^9, 
   3.8112458018284197`*^9}},ExpressionUUID->"021c90e8-f96e-4492-beba-\
7fe4d047a753"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetChristoffel", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<SetChristoffel[christoffelSymbol_Symbol]:: sets just the symbol of \
the christoffel symbols which is to be used.\\n\n\
==============================================================================\
==============\\n\nSetChristoffel[christoffelSymbol, christoffelComponents, \
options:OptionsPattern[]]:: sets the christoffelSymbol and explicit \
christoffelComponents given as a List of dimension (4,4,4).\\n\nIt only \
allows for input with one upper followed by two lower indices as the \
Christoffel is not a tensor.\\n\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.644731335247908*^9, 3.6447313419342623`*^9}, {
   3.645413967540298*^9, 3.6454139737497873`*^9}, {3.645427085225877*^9, 
   3.645427171666885*^9}, {3.6454277583381853`*^9, 3.645428013512774*^9}, {
   3.645428046874248*^9, 3.6454281039296093`*^9}, {3.645428181233142*^9, 
   3.6454281831522703`*^9}, {3.645437219268062*^9, 3.6454373495199633`*^9}, {
   3.645445505112389*^9, 3.645445580582028*^9}, {3.6454492239429483`*^9, 
   3.645449225466455*^9}, {3.645449330759803*^9, 3.645449343431946*^9}, {
   3.645511396665414*^9, 3.645511479635212*^9}, {3.6455115263912373`*^9, 
   3.645511529717677*^9}, {3.645686112453723*^9, 3.645686146260416*^9}, {
   3.6458501852745533`*^9, 3.645850195711934*^9}, {3.645860110260922*^9, 
   3.645860164207665*^9}, {3.646461719000599*^9, 3.64646174888408*^9}, {
   3.646470685652377*^9, 3.646470686694106*^9}, {3.647329400264453*^9, 
   3.647329403032419*^9}, {3.6473297232796793`*^9, 3.647329740702916*^9}, {
   3.647346579506857*^9, 3.647346601341938*^9}, {3.6473466341289253`*^9, 
   3.6473467677572107`*^9}, {3.647346799740559*^9, 3.6473468389890223`*^9}, {
   3.647346932840445*^9, 3.64734705886961*^9}, {3.6473470904043083`*^9, 
   3.647347183153625*^9}, {3.6473472232225437`*^9, 3.647347239360388*^9}, {
   3.647347308948543*^9, 3.647347352781201*^9}, {3.6473473885243053`*^9, 
   3.6473473940515337`*^9}, {3.647347434363022*^9, 3.6473475553039494`*^9}, {
   3.647347601096058*^9, 3.647347869104927*^9}, {3.6473480886495943`*^9, 
   3.64734816810362*^9}, {3.6473482472074423`*^9, 3.647348257267666*^9}, {
   3.6473483067768297`*^9, 3.647348494365985*^9}, {3.647350311772941*^9, 
   3.6473503612457447`*^9}, {3.647602740896502*^9, 3.647602760722904*^9}, {
   3.647603266224543*^9, 3.6476032770780487`*^9}, {3.647673213339265*^9, 
   3.647673221828848*^9}, 3.647846555017847*^9, {3.647860498511792*^9, 
   3.647860503962981*^9}, {3.647861866986738*^9, 3.64786187965551*^9}, {
   3.648193134777913*^9, 3.648193143817316*^9}, {3.648291600684483*^9, 
   3.648291608236081*^9}, {3.648292290957872*^9, 3.648292349303978*^9}, {
   3.648292420758473*^9, 3.648292485812751*^9}, {3.648292525843595*^9, 
   3.64829282063518*^9}, {3.648366672993896*^9, 3.648366674456417*^9}, {
   3.648366742314117*^9, 3.648366813249461*^9}, {3.648366872910808*^9, 
   3.648367108825264*^9}, {3.648367349124825*^9, 3.648367444927108*^9}, {
   3.648367482500355*^9, 3.648367505493908*^9}, {3.648387740492426*^9, 
   3.64838788669695*^9}, {3.6483890211472607`*^9, 3.6483890507792664`*^9}, {
   3.648454595209074*^9, 3.648454612520275*^9}, {3.648879113630684*^9, 
   3.648879113654911*^9}, 3.648879265897849*^9, {3.648879425280835*^9, 
   3.648879462510956*^9}, {3.6488794946702967`*^9, 3.648879494674572*^9}, {
   3.6488800149118547`*^9, 3.648880028415845*^9}, {3.6488802830970507`*^9, 
   3.6488802837524137`*^9}, {3.6488803801464853`*^9, 3.648880381098076*^9}, 
   3.648880556193438*^9, {3.648883322294725*^9, 3.64888334478906*^9}, {
   3.6488900302578583`*^9, 3.648890099151113*^9}, {3.648890137917892*^9, 
   3.648890186236273*^9}, {3.648890418774455*^9, 3.648890419901692*^9}, {
   3.648890622896734*^9, 3.6488906265444117`*^9}, {3.6488906980945883`*^9, 
   3.6488906992944508`*^9}, {3.648890820714819*^9, 3.648890821370865*^9}, {
   3.6488910573484383`*^9, 3.648891102783084*^9}, {3.64889117345752*^9, 
   3.648891210400659*^9}, {3.648891243887454*^9, 3.648891326013159*^9}, {
   3.648891388091867*^9, 3.648891405388597*^9}, 3.648891587126869*^9, {
   3.648891627023336*^9, 3.6488916674571733`*^9}, 3.64889393777908*^9, {
   3.648897546629862*^9, 3.648897549269772*^9}, {3.649163062272032*^9, 
   3.6491630804466352`*^9}, {3.6495703073161182`*^9, 3.64957032627567*^9}, 
   3.64974205943544*^9, 3.649742095939756*^9, {3.650021660494108*^9, 
   3.650021689793172*^9}, {3.650021814458976*^9, 3.650021874238109*^9}, 
   3.65002201314578*^9, {3.6500220585990953`*^9, 3.650022086245823*^9}, {
   3.6500222209307003`*^9, 3.6500222249214783`*^9}, {3.6500225477698097`*^9, 
   3.6500225546659927`*^9}, {3.650022656902927*^9, 3.6500226647907248`*^9}, {
   3.650022721845286*^9, 3.6500228786864233`*^9}, {3.650022917457178*^9, 
   3.6500230703260803`*^9}, {3.656403585879672*^9, 3.6564036444215727`*^9}, {
   3.656403751171433*^9, 3.656403757779257*^9}, {3.760077979960908*^9, 
   3.760078238492313*^9}, {3.760078499048361*^9, 3.760078501758933*^9}, {
   3.760078764365315*^9, 3.7600787702761173`*^9}, {3.760078818046336*^9, 
   3.760078821798991*^9}, {3.7600788649931593`*^9, 3.760078879217111*^9}, {
   3.7600790418087263`*^9, 3.760079050962823*^9}, {3.7600808418351727`*^9, 
   3.760080985431978*^9}, 
   3.804578838428938*^9},ExpressionUUID->"252a32cb-5f63-4498-86fc-\
533366c532bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetChristoffel", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<GetChristoffel[]:: gets just the symbol of the christoffel symbol \
which is currently declared.\\n\n\
==============================================================================\
==============\\n\nGetChristoffel[i,j,k]:: gets an explicit component (i,j,k) \
of the christoffel symbol, where i has to be an upper and j, k have to be \
lower indices, i.e., integers (1,2,3,4) and (-4,-3,-2,-1) \
respectively.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.644731335247908*^9, 3.6447313419342623`*^9}, {
   3.645413967540298*^9, 3.6454139737497873`*^9}, {3.645427085225877*^9, 
   3.645427171666885*^9}, {3.6454277583381853`*^9, 3.645428013512774*^9}, {
   3.645428046874248*^9, 3.6454281039296093`*^9}, {3.645428181233142*^9, 
   3.6454281831522703`*^9}, {3.645437219268062*^9, 3.6454373495199633`*^9}, {
   3.645445505112389*^9, 3.645445580582028*^9}, {3.6454492239429483`*^9, 
   3.645449225466455*^9}, {3.645449330759803*^9, 3.645449343431946*^9}, {
   3.645511396665414*^9, 3.645511479635212*^9}, {3.6455115263912373`*^9, 
   3.645511529717677*^9}, {3.645686112453723*^9, 3.645686146260416*^9}, {
   3.6458501852745533`*^9, 3.645850195711934*^9}, {3.645860110260922*^9, 
   3.645860164207665*^9}, {3.646461719000599*^9, 3.64646174888408*^9}, {
   3.646470685652377*^9, 3.646470686694106*^9}, {3.647329400264453*^9, 
   3.647329403032419*^9}, {3.6473297232796793`*^9, 3.647329740702916*^9}, {
   3.647346579506857*^9, 3.647346601341938*^9}, {3.6473466341289253`*^9, 
   3.6473467677572107`*^9}, {3.647346799740559*^9, 3.6473468389890223`*^9}, {
   3.647346932840445*^9, 3.64734705886961*^9}, {3.6473470904043083`*^9, 
   3.647347183153625*^9}, {3.6473472232225437`*^9, 3.647347239360388*^9}, {
   3.647347308948543*^9, 3.647347352781201*^9}, {3.6473473885243053`*^9, 
   3.6473473940515337`*^9}, {3.647347434363022*^9, 3.6473475553039494`*^9}, {
   3.647347601096058*^9, 3.647347869104927*^9}, {3.6473480886495943`*^9, 
   3.64734816810362*^9}, {3.6473482472074423`*^9, 3.647348257267666*^9}, {
   3.6473483067768297`*^9, 3.647348494365985*^9}, {3.647350311772941*^9, 
   3.6473503612457447`*^9}, {3.647602740896502*^9, 3.647602760722904*^9}, {
   3.647603266224543*^9, 3.6476032770780487`*^9}, {3.647673213339265*^9, 
   3.647673221828848*^9}, 3.647846555017847*^9, {3.647860498511792*^9, 
   3.647860503962981*^9}, {3.647861866986738*^9, 3.64786187965551*^9}, {
   3.648193134777913*^9, 3.648193143817316*^9}, {3.648291600684483*^9, 
   3.648291608236081*^9}, {3.648292290957872*^9, 3.648292349303978*^9}, {
   3.648292420758473*^9, 3.648292485812751*^9}, {3.648292525843595*^9, 
   3.64829282063518*^9}, {3.648366672993896*^9, 3.648366674456417*^9}, {
   3.648366742314117*^9, 3.648366813249461*^9}, {3.648366872910808*^9, 
   3.648367108825264*^9}, {3.648367349124825*^9, 3.648367444927108*^9}, {
   3.648367482500355*^9, 3.648367505493908*^9}, {3.648387740492426*^9, 
   3.64838788669695*^9}, {3.6483890211472607`*^9, 3.6483890507792664`*^9}, {
   3.648454595209074*^9, 3.648454612520275*^9}, {3.648879113630684*^9, 
   3.648879113654911*^9}, 3.648879265897849*^9, {3.648879425280835*^9, 
   3.648879462510956*^9}, {3.6488794946702967`*^9, 3.648879494674572*^9}, {
   3.6488800149118547`*^9, 3.648880028415845*^9}, {3.6488802830970507`*^9, 
   3.6488802837524137`*^9}, {3.6488803801464853`*^9, 3.648880381098076*^9}, 
   3.648880556193438*^9, {3.648883322294725*^9, 3.64888334478906*^9}, {
   3.6488900302578583`*^9, 3.648890099151113*^9}, {3.648890137917892*^9, 
   3.648890186236273*^9}, {3.648890418774455*^9, 3.648890419901692*^9}, {
   3.648890622896734*^9, 3.6488906265444117`*^9}, {3.6488906980945883`*^9, 
   3.6488906992944508`*^9}, {3.648890820714819*^9, 3.648890821370865*^9}, {
   3.6488910573484383`*^9, 3.648891102783084*^9}, {3.64889117345752*^9, 
   3.648891210400659*^9}, {3.648891243887454*^9, 3.648891326013159*^9}, {
   3.648891388091867*^9, 3.648891405388597*^9}, 3.648891587126869*^9, {
   3.648891627023336*^9, 3.6488916674571733`*^9}, 3.64889393777908*^9, {
   3.648897546629862*^9, 3.648897549269772*^9}, {3.649163062272032*^9, 
   3.6491630804466352`*^9}, {3.6495703073161182`*^9, 3.64957032627567*^9}, 
   3.64974205943544*^9, 3.649742095939756*^9, {3.650021660494108*^9, 
   3.650021689793172*^9}, {3.650021814458976*^9, 3.650021874238109*^9}, 
   3.65002201314578*^9, {3.6500220585990953`*^9, 3.650022086245823*^9}, {
   3.6500222209307003`*^9, 3.6500222249214783`*^9}, {3.6500225477698097`*^9, 
   3.6500225546659927`*^9}, {3.650022656902927*^9, 3.6500226647907248`*^9}, {
   3.650022721845286*^9, 3.6500228786864233`*^9}, {3.650022917457178*^9, 
   3.6500230703260803`*^9}, {3.656403585879672*^9, 3.6564036444215727`*^9}, {
   3.656403751171433*^9, 3.656403757779257*^9}, {3.760077979960908*^9, 
   3.760078238492313*^9}, {3.760078499048361*^9, 3.760078501758933*^9}, {
   3.7600786878709*^9, 3.760078713341898*^9}, {3.7600788322972927`*^9, 
   3.760078961569639*^9}, {3.7600808488484907`*^9, 3.76008085267023*^9}, {
   3.7600809905297737`*^9, 
   3.760081056926427*^9}},ExpressionUUID->"61585167-eae1-4b2d-a815-\
37c7f2546f09"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetNullGeodesic1stOrderODE", "::", "usage"}], " ", "=", " ", 
   "\n", "\"\<GetNullGeodesic1stOrderODE[]:: simply defines the lightlike \
geodesic equation as a 1st order system of 8 ODE's in terms of christoffel \
symbols with x as coordinates, k as wave-vectors and \[Lambda] as affine \
parameter.\\n\nReference for implemented geodesic equation already cast into \
1st order ODE: 1801.10452, Eq. (5) & (6).\\n\n\
==============================================================================\
==============\\n\nGetNullGeodesic1stOrderODE[pos, waveVector, affineParam]:: \
allows to define own notation for x, k and \[Lambda]\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.7604192025983677`*^9, 3.760419216767975*^9}, {
  3.760419258165523*^9, 3.76041926701227*^9}, {3.760419307140087*^9, 
  3.760419372223402*^9}, {3.76041971907381*^9, 3.760419724853516*^9}, {
  3.7604197565746527`*^9, 3.760419760640511*^9}, {3.760419939005867*^9, 
  3.760419957742423*^9}},ExpressionUUID->"4cf2b4dc-4ba3-4073-bf7b-\
6f6259cc0379"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetBoyerLindquistInitialValues", "::", "usage"}], " ", "=", " ", 
  "\n", "\"\<GetBoyerLindquistInitialValues[{pos_Symbol, waveVector_Symbol, \
affineParam0_Symbol},{rObs_,\[Theta]Obs_,\[Phi]Obs_},{x_,y_},a_]:: defines \
appropriate initial conditions for an incident ray on a specific screen point\
\\n\n{pos_, waveVector_, affineParam0_} are the desired symbols for the \
coordinates, the waveVector an the initial value for the affine parameter.\\n\
\n{rObs,\[Theta]Obs,\[Phi]Obs} defines the precise location of the screen \
w.r.t. Boyer-Lindquist coordinates of the BH.\\n\n{x_,y_} defines the screen \
coordinates of the specific image point.\\n\na_ is the impact parameter.\\n\n\
The implemented formula's follow 1607.05767, Sec. II C.\>\""}]], "Code",
 CellChangeTimes->{{3.760420952883422*^9, 3.7604210238148737`*^9}, {
  3.760421056154049*^9, 3.760421108997258*^9}, {3.7604211435092907`*^9, 
  3.760421413085478*^9}},ExpressionUUID->"9c8ace11-ac90-4983-818d-\
02f6834b81da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConvertBoyerLindquistToCartesian", "::", "usage"}], " ", "=", " ", 
  "\n", "\"\<ConvertBoyerLindquistToCartesian[{r_,\[Theta]_,\[Phi]_}]:: \
converts a set of BL coordinates into a set of spatial cartesian coordinates.\
\>\""}]], "Code",
 CellChangeTimes->{{3.76042713530186*^9, 3.7604271939437943`*^9}, {
  3.811237873540669*^9, 3.811237874451747*^9}, {3.8112486658372393`*^9, 
  3.8112486663735037`*^9}, {3.811248835933251*^9, 3.811248836329775*^9}, {
  3.8112512413438787`*^9, 
  3.81125124184753*^9}},ExpressionUUID->"f3cb2115-4254-472e-94a9-\
9bb34c1c19fe"]
}, Open  ]],

Cell[CellGroupData[{

Cell["obtain a single light ray", "Subsection",
 CellChangeTimes->{{3.907304983905876*^9, 
  3.907305003886866*^9}},ExpressionUUID->"19ee947a-2b09-4d5c-9b44-\
1f42767c374b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetSingleLightRay", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<GetSingleLightRay[{rCam_,\[Theta]Cam_,\[Phi]Cam_},{xScreen_,yScreen_},\
paramRules_List]\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.779287405988739*^9, 3.779287423961029*^9}, 
   3.779288037384568*^9},ExpressionUUID->"9eaca5f1-2c6c-474c-805e-\
a4140a4b540c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CheckConstantsOfMotionAlongRay", "::", "usage"}], " ", "=", " ", 
   "\n", "\"\<CheckConstantsOfMotionAlongRay[ray_,paramRules_]\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.804587181242015*^9, 3.8045872026102257`*^9}, {
  3.8045873550055113`*^9, 
  3.804587357975466*^9}},ExpressionUUID->"6e987c31-542c-43f9-86e0-\
677161ee3fe8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PlotSingleTrajectory", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<PlotSingleTrajectory[sol_, paramRules_List, \
opts:OptionsPattern[]]\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.779287405988739*^9, 3.779287423961029*^9}, 
   3.779288037384568*^9, {3.7793693613492613`*^9, 3.7793693728568773`*^9}, {
   3.779429578478702*^9, 
   3.779429579447695*^9}},ExpressionUUID->"841f669b-7ff7-4a29-bae8-\
6d1f0011bab4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["obtain a lensing band", "Subsection",
 CellChangeTimes->{{3.907304994351067*^9, 
  3.907304998760303*^9}},ExpressionUUID->"ab3fd302-16f5-4770-a417-\
b4aad8420f01"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetLensingBand", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<GetLensingBand[\n\t\
{rCam_?RationalQ,\[Theta]Cam_?RationalQ,\[Phi]Cam_?RationalQ}, \n\t\
{{xCenterGuess_?RationalQ,yCenterGuess_?RationalQ}, \
{xOuterGuess_?RationalQ,yOuterGuess_?RationalQ}}, \n\tparamRules_,\n]:: \
determines any closed (potentially non-star-convex) lensing band \
boundary.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.865388081960683*^9, 3.865388095822649*^9}, {
  3.865388141649629*^9, 3.86538822187208*^9}, {3.865388459693716*^9, 
  3.865388461249707*^9}, {3.8653906526876698`*^9, 3.865390663597025*^9}, {
  3.86555375182353*^9, 3.865553756450382*^9}, {3.8655553754624767`*^9, 
  3.865555409124216*^9}},ExpressionUUID->"d9992614-7fc1-4855-8491-\
011b5a1aa6f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetPlotFrameLeft", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<GetPlotFrameLeft[\n\tplotRange_List/;Dimensions@plotRange==={2,2},\n\t\
opts:OptionsPattern[]\n]:: generates a plot frame with axes left and \
bottom.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.8729405303619823`*^9, 
  3.872940597768622*^9}},ExpressionUUID->"3ca69170-724e-482d-ae34-\
bbf416dbb1da"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetPlotFrameRight", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<GetPlotFrameRight[\n\tplotRange_List/;Dimensions@plotRange==={2,2},\n\
\topts:OptionsPattern[]\n]:: generates a plot frame with axes left and \
bottom.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.8729405303619823`*^9, 
  3.872940627800385*^9}},ExpressionUUID->"bc13955d-1f51-42e9-a499-\
fc48828a6cfc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetPlotFrameMiddle", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<GetPlotFrameMiddle[\n\tplotRange_List/;Dimensions@plotRange==={2,2},\n\
\topts:OptionsPattern[]\n]:: generates a plot frame with axes left and \
bottom.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.8729405303619823`*^9, 
  3.872940622036991*^9}},ExpressionUUID->"a882aaa7-a744-45c0-bc42-\
50033676f387"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetLBRegion", "::", "usage"}], " ", "=", "\n", 
   "\"\<GetLBRegion[\n\tlbInner_List(*/;Dimensions@lbInner\[Equal]{_,2}*), \n\
\tlbOuter_List(*/;Dimensions@lbInner\[Equal]{_,2}*),\n\topts:OptionsPattern[]\
\n]:: generates a lensing-band region (a ?Region object in Mathematica) from \
two discrete 2D lists of the inner and outer lensing-band boundaries.\>\""}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.87294162372045*^9, 3.872941736741767*^9}, 
   3.872942213532165*^9},ExpressionUUID->"7bf301dd-e45a-48d4-a21c-\
72e442db4178"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetRangeOfRegion", "::", "usage"}], " ", "=", "\n", 
   "\"\<GetRangeOfRegion[reg_?RegionQ]:: determines the coordinate range \
which is covered by the region 'reg'.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.872941761282551*^9, 3.8729418410626287`*^9}, 
   3.872942211257101*^9},ExpressionUUID->"94fcbbd7-5350-4c1f-86d1-\
8257643b2160"]
}, Open  ]],

Cell[CellGroupData[{

Cell["overlap and minimization", "Subsection",
 CellChangeTimes->{{3.907305356041602*^9, 
  3.907305360726178*^9}},ExpressionUUID->"63d46589-bdcd-4bb0-9d83-\
a1cda9e0d2e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ShiftedAndRescaledRegion", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<ShiftedAndRescaledRegion[\n\tregion_?RegionQ, \n\t\
{x_?NumberQ,y_?NumberQ,s_?NumberQ}\n]:: controid shift by (x,y) and rescaling \
by s of any given region.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.87294185981715*^9, 3.8729419464840612`*^9}, 
   3.872942208551074*^9},ExpressionUUID->"348ae29f-c566-4b9b-9c4b-\
f864a6915937"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"OverlayLensingBandsByHand", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<OverlayLensingBandsByHand[\n\tlbObs_,lbTheory_,\n\t\
opts:OptionsPattern[]\n]:: generates a Dynamic environment to shift and \
rescale two lensing bands (or any Mathematica Region) lb1 and lb2 by \
hand.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.872941963690414*^9, 3.872942059578877*^9}, 
   3.872942220070178*^9, {3.90733938552862*^9, 
   3.907339390839342*^9}},ExpressionUUID->"a6a99b74-be8f-4902-badf-\
3305d53a59f1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AreaOfDifference", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<AreaOfDifference[\n\tregToCover_?RegionQ, \n\tregToRescale_?RegionQ, \
\n\t{x_?NumberQ,y_?NumberQ,s_?NumberQ}\n]:: determines the area of the part \
of regToCover which is not covered by regToRescale after controid shift by \
(x,y) and rescaling by s.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.872942188894929*^9, 3.872942205224927*^9}, {
  3.872942241157928*^9, 3.872942279722176*^9}, {3.872942329910413*^9, 
  3.8729423877886047`*^9}},ExpressionUUID->"5c073cab-e0d0-4d2b-a912-\
f71b5fc62427"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetMinimizedOverlap", "::", "usage"}], " ", "=", " ", "\n", 
   "\"\<GetMinimizedOverlap[\n\tLBexp_?RegionQ,\n\tparams_List\n]:: \
determines the (n=1) lensing band (via internal functions and user-provided \
'params' which completely fix the spacetime) and minimizes the overlap with \
some observed/assumed lensed emission region 'LBexp'.\>\""}], ";"}]], "Code",
 CellChangeTimes->{{3.872942188894929*^9, 3.872942205224927*^9}, {
  3.872942241157928*^9, 3.872942279722176*^9}, {3.872942329910413*^9, 
  3.8729423877886047`*^9}, {3.9073053731159983`*^9, 
  3.907305540825026*^9}},ExpressionUUID->"a2a044b9-f3fe-4244-8f95-\
a8ef5fa96277"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Own Options and Option Values", "Section",
 CellChangeTimes->{{3.6502624173824043`*^9, 3.650262427627069*^9}, {
  3.779370671400255*^9, 3.7793706750049963`*^9}, {3.779370706807705*^9, 
  3.779370713303027*^9}},ExpressionUUID->"d37c321c-f0dd-41cf-8886-\
f6f9db64970e"],

Cell[BoxData[
 RowBox[{"PlotHorizon", ";", " ", "PrintTemporaryOption", ";", " ", 
  "HorizonCondition", ";"}]], "Code",
 CellChangeTimes->CompressedData["
1:eJwdzlsog3EcxvHXYsiIlJAyNSWUzUbKaX8WK4f0bi3mwiHChUbK+RiZISsk
TDlczTFTyjHNEkkRaxiKktT75nit/H+/i6fP3dM3qtLAVgsYhhHTgS6ncuch
gSMreSf7YEjhfeAjdTo9Pwhk2fAwfylHrv0i0dqyTyaAaqwXeYDl+cJC0KlQ
obG9QZFuGUdmG9rQWMeQxi+RajlGU5TpLeCw0IQOLooPZVTr3wC6d2X6klPN
lqlv0KWd32CpG46nTVD8orQVKThSpxNtga/r2kEdVXBRh4a6e0SnKbRXchMA
RntNJoE1I95pYEjGVh4Y0x/IgmO/Ys0ZtV8iLwHVjtymuVSOXKl/UM8HQdhO
JkdU7Uloi9T4XpLFESlzgMrsyaF32RypMm+j4+5T10QMT3Rxl6jEGvcEFgvU
aE7yYbyNWv3yiIok9b2mRp7M7C/0gZqjxWVtM0/0EaWroLHo8xZ8rom+A0f1
FVZdK0+WTs7RBXuC2dLFE+atAP0wOFePhumvzWcNNKnO5B0rPLHahQoweNcw
/ePgSbdvJ/oPd8Hy5Q==
  
  "],ExpressionUUID->"d6e855bf-84d7-4db6-9a51-14477754c928"],

Cell[BoxData[
 RowBox[{"WhichCoords", ";", " ", "Kerr", ";", " ", "BoyerLindquist", 
  ";"}]], "Code",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQBGIQfe2Kw47b+q8dV3kf3Q2ixfxuCtwB0jNsfQRBdFCQ
lCSvwWvHS9zyYDoj/j0DH5Buz+VhBNEJPmx+IPqKiQuY1moQlL9l+NpxVkEl
mNY63BHMbQSkZx8C0xYOtuUguoutE0y3LVTYawikV/xtAdO7LnR+MAbS/bOn
fQTR10LmrwsC0usO390AohUeOmwMMHntmBnGswlEP1kb0hYGpJnOZIJpiVv1
PMctgO5VucwHolVZp5iC6PRudhsQLWa3yRtEazQLBIHovs8KwSeAdLOKcSSI
9jjsXjzH+rXjBY9PYJrlNpPkDvvXji5VpmC63KD9RaTTa0cDhj1g2vCgmcQN
59eOKf1bwfSkW8evTdZ44ximfR5Mq6zQvguiI5g8wLSb2V6djUA69eEdMP2A
edmd2NQ3jv8+5DwA0QB1RbhD
  
  "],ExpressionUUID->"6ef60240-4c75-45b6-977a-78308a8a7baf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "UseShadowBoundaryForEntryPoint", ";", " ", "ShowProgressPlot", ";", " ", 
   "MultipleOfEntryPoint", ";"}], " "}], "\n", 
 RowBox[{"MaxNumberOfSteps", ";", " ", "OutOfBoundsValue", ";", " ", 
  "WhichLensingBand", ";", " ", "inner", ";", " ", "outer", ";", " ", 
  "WhichLensingBandNumber", ";"}], "\n", 
 RowBox[{"InitialBisectionPrecision", ";", " ", "InitialStepSize", ";", " ", 
  "MinStepSize", ";", " ", "MaxBisectionPrecision", ";"}]}], "Code",
 CellChangeTimes->{{3.865544707450149*^9, 3.8655447084300823`*^9}, {
   3.8655468140823183`*^9, 3.8655468155459967`*^9}, {3.8655471772241783`*^9, 
   3.865547178864524*^9}, {3.8655484015957737`*^9, 3.865548413008423*^9}, {
   3.865550603506566*^9, 3.865550626409081*^9}, {3.865554945356284*^9, 
   3.8655549559039087`*^9}, {3.867295404361354*^9, 3.86729540559188*^9}, 
   3.875379488407091*^9, {3.875381432406781*^9, 
   3.875381435452997*^9}},ExpressionUUID->"a4badff6-af69-4f27-a4cd-\
12d0ed007cd3"],

Cell[BoxData[{
 RowBox[{"NumberOfPolygonPoints", ";"}], "\n", 
 RowBox[{"ScaleRange", ";", " ", "InitsXYS", ";", " ", "LB1Color", ";", " ", 
  "LB2Color", ";"}]}], "Code",
 CellChangeTimes->{{3.8729415011705647`*^9, 
  3.87294154599971*^9}},ExpressionUUID->"08f85c20-8600-4ca3-bc9e-\
a96134facaca"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Private part of the LBeyondGR package", "Title",
 CellChangeTimes->{{3.760068497790769*^9, 3.7600685051249857`*^9}, {
   3.760068648005158*^9, 3.760068648494479*^9}, 
   3.8722955501847057`*^9},ExpressionUUID->"ff6b5ed0-57ac-41c0-a030-\
7d212efc8260"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Begin", "[", "\"\<`Private`\>\"", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.760074041242437*^9, 3.760074050882641*^9}, 
   3.7600779044075317`*^9, {3.8112419472507267`*^9, 
   3.811241963682168*^9}},ExpressionUUID->"a74a3243-0f6e-4f9e-8b36-\
51137ca15616"],

Cell[CellGroupData[{

Cell["Helper functions", "Section",
 CellChangeTimes->{{3.760068294549737*^9, 
  3.760068297780572*^9}},ExpressionUUID->"3e020569-6fe7-48c9-a261-\
cc8daa115535"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "a", " ", "function", " ", "to", " ", "check", " ", "whether", " ", 
    "something", " ", "is", " ", "an", " ", "explicit", " ", "index"}], 
   "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"ExplicitUpperIndexQ", "::", "usage"}], " ", "=", " ", 
     "\"\<ExplicitUpIndexQ[ind___] checks whether ind is an explicit upper \
index, i.e., if it is +1,+2,+3 or +4\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExplicitUpperIndexQ", "[", "___", "]"}], " ", ":=", " ", 
     "False"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExplicitUpperIndexQ", "[", 
      RowBox[{"index_Integer", "/;", 
       RowBox[{"1", "\[LessEqual]", "index", "\[LessEqual]", "4"}]}], "]"}], 
     " ", ":=", " ", "True"}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExplicitLowerIndexQ", "::", "usage"}], " ", "=", " ", 
     "\"\<ExplicitDownIndexQ[ind___] checks whether ind is an explicit lower \
index, i.e., if it is -1,-2,-3 or -4\>\""}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExplicitLowerIndexQ", "[", "___", "]"}], " ", ":=", " ", 
     "False"}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"ExplicitLowerIndexQ", "[", 
      RowBox[{"index_Integer", "/;", 
       RowBox[{
        RowBox[{"-", "4"}], "\[LessEqual]", "index", "\[LessEqual]", 
        RowBox[{"-", "1"}]}]}], "]"}], " ", ":=", " ", "True"}], 
    ";"}]}]}]], "Code",
 CellChangeTimes->{{3.759648254605851*^9, 3.75964825944168*^9}, {
   3.759648335202248*^9, 3.7596483584314404`*^9}, 3.759648402965303*^9, {
   3.7596494288481407`*^9, 3.75964949788645*^9}, {3.7596498641816874`*^9, 
   3.7596498950281477`*^9}, 3.759650571955755*^9, {3.760068367415017*^9, 
   3.760068476245428*^9}, {3.7600724687588987`*^9, 3.760072482754964*^9}, {
   3.760079381904277*^9, 3.7600793918920794`*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"6b243751-5f7b-4726-90e4-64e2f2e1b42a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RationalQ", "[", "___", "]"}], " ", ":=", " ", "False"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RationalQ", "[", 
    RowBox[{
     RowBox[{"a_", "?", "NumericQ"}], "/;", 
     RowBox[{
      RowBox[{"Precision", "[", "a", "]"}], "===", "\[Infinity]"}]}], "]"}], 
   " ", ":=", " ", "True"}], ";"}]}], "Code",
 CellChangeTimes->{{3.804571096822666*^9, 3.804571159591011*^9}, {
  3.8045712157447567`*^9, 
  3.8045712240603724`*^9}},ExpressionUUID->"49a836a5-04ef-4f4e-bd62-\
93b8d14ada35"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DynamicIterativeTaskTimeEstimatePrint", "[", 
    RowBox[{"iterator_", ",", " ", "iterativeTaskNumber_"}], "]"}], " ", ":=",
    " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"{", "startTime", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"startTime", " ", "=", " ", 
       RowBox[{"AbsoluteTime", "[", "]"}]}], ";", "\[IndentingNewLine]", "\t", 
      RowBox[{"Print", "[", "\n", "\t\t", 
       RowBox[{"\"\<approx. \>\"", ",", "\n", "\t\t", 
        RowBox[{"Dynamic", "[", 
         RowBox[{"DateDifference", "[", 
          RowBox[{
           RowBox[{"DateList", "[", "startTime", "]"}], ",", 
           RowBox[{"DateList", "[", 
            RowBox[{"startTime", "+", 
             RowBox[{"(", 
              RowBox[{
               FractionBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"AbsoluteTime", "[", "]"}], " ", "-", " ", 
                  "startTime"}], ")"}], "iterator"], "*", 
               RowBox[{"(", 
                RowBox[{"iterativeTaskNumber", " ", "-", " ", "iterator"}], 
                ")"}]}], ")"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Day\>\"", ",", "\"\<Hour\>\"", ",", "\"\<Minute\>\"", ",", 
             "\"\<Second\>\""}], "}"}]}], "]"}], "]"}], ",", "\n", "\t\t", 
        "\"\< left to finish calculation\>\""}], "\n", "\t", "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.804573139292927*^9, 3.8045731437631807`*^9}, {
  3.804573213999876*^9, 3.804573459729281*^9}, {3.804575485485887*^9, 
  3.8045755893664417`*^9}, {3.804575651027568*^9, 3.804575653004237*^9}, {
  3.804575693015256*^9, 3.8045757579373693`*^9}, {3.804576177022438*^9, 
  3.804576178646497*^9}, {3.804576322277811*^9, 
  3.804576327130371*^9}},ExpressionUUID->"39407ce1-3e11-4999-b0ea-\
dd76b8a643e6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SmoothHeaviside", "[", 
    RowBox[{"r_", ",", "x_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{
     RowBox[{"Tanh", "[", 
      RowBox[{"x", " ", "r"}], "]"}], "+", "1"}], "2"]}], ";"}]], "Code",
 CellChangeTimes->{
  3.820066956218058*^9, {3.820154175834305*^9, 
   3.820154176612423*^9}},ExpressionUUID->"e25d0f03-c641-415f-826c-\
886a93ecb375"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetMin$r", "[", "sol_", "]"}], ":=", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"\[Lambda]Min", " ", "=", " ", 
       RowBox[{
        RowBox[{"Head", "[", 
         RowBox[{"sol", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"\[Lambda]Max", " ", "=", " ", 
       RowBox[{
        RowBox[{"Head", "[", 
         RowBox[{"sol", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}]}], "\n", "\t", 
     "}"}], ",", "\n", "\t", 
    RowBox[{"Check", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Minimize", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], "/.", 
            "sol"}], ",", 
           RowBox[{"\[Lambda]Min", "<", "\[Lambda]", "<", "\[Lambda]Max"}]}], 
          "}"}], ",", "\[Lambda]"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "None"}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Code",
 CellChangeTimes->{{3.847459778366048*^9, 3.8474598077382393`*^9}, {
  3.8474598973285837`*^9, 3.847459914009256*^9}, {3.847459992683588*^9, 
  3.847459993376029*^9}, {3.847470253316708*^9, 3.84747025597722*^9}, {
  3.8474775245193777`*^9, 
  3.8474775387165623`*^9}},ExpressionUUID->"0c144312-5d5b-42c6-b407-\
89a86ae89f0d"]
}, Closed]],

Cell[CellGroupData[{

Cell["In- and Output of analytical metric and Christoffels", "Section",
 CellChangeTimes->{{3.760068311739423*^9, 
  3.760068333683827*^9}},ExpressionUUID->"c8e1da78-752e-4cb3-bbe2-\
dd2976b2adbe"],

Cell[CellGroupData[{

Cell["\<\
SetBoyerLindquistCoords[] and GetBoyerLindquistCoords[] (and same for \
spherical Kerr coordinates)\
\>", "Subsection",
 CellChangeTimes->{{3.760079674417808*^9, 3.760079687106201*^9}, {
  3.7792853391467867`*^9, 3.779285342839522*^9}, {3.8112399873238173`*^9, 
  3.8112400037946777`*^9}},ExpressionUUID->"bfe22adc-2b99-4867-b44c-\
d99eb5044030"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetMass", "[", "mass_Symbol", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"$mass", " ", "=", " ", "mass"}], ";"}]}], "\n", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetNewtonCoupling", "[", "G0_Symbol", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"$G0", " ", "=", " ", "G0"}], ";"}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetSpin", "[", "spin_Symbol", "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{"$spin", " ", "=", " ", "spin"}], ";"}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.779279768273569*^9, 3.779279777835878*^9}, {
   3.779279834910852*^9, 3.779279877295828*^9}, {3.779279939742702*^9, 
   3.779280004600944*^9}, {3.7792800929239607`*^9, 3.7792801321513567`*^9}, {
   3.7792806743009357`*^9, 3.779280730510482*^9}, {3.779281176303897*^9, 
   3.7792812134119596`*^9}, {3.779281269945743*^9, 3.7792812755086527`*^9}, 
   3.779281756199522*^9, {3.7792818129111357`*^9, 3.779281824298513*^9}, 
   3.779282402703526*^9, 3.7792824942242317`*^9, {3.7792826645686407`*^9, 
   3.7792826691507587`*^9}, {3.8112418450792837`*^9, 3.811241862735649*^9}, 
   3.811241915329021*^9, {3.811242002467813*^9, 3.81124200936372*^9}, {
   3.811245586218422*^9, 
   3.81124568141194*^9}},ExpressionUUID->"0f917a6d-978f-432a-abf9-\
17113ef48566"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetBoyerLindquistCoords", "[", 
     RowBox[{
     "t_Symbol", ",", " ", "r_Symbol", ",", " ", "\[Theta]_Symbol", ",", " ", 
      "\[Phi]_Symbol"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{
       RowBox[{"WhichCoords", " ", "=", " ", "BoyerLindquist"}], ";", "\n", 
       "\t", 
       RowBox[{"$t", " ", "=", " ", "t"}], ";", "\n", "\t", 
       RowBox[{"$r", " ", "=", " ", "r"}], ";", "\n", "\t", 
       RowBox[{"$\[Theta]", " ", "=", " ", "\[Theta]"}], ";", "\n", "\t", 
       RowBox[{"$\[Phi]", " ", "=", " ", "\[Phi]"}], ";"}]}], "\n", "]"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GetBoyerLindquistCoords", "[", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
    "$t", ",", " ", "$r", ",", " ", "$\[Theta]", ",", " ", "$\[Phi]"}], 
    "}"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.779279768273569*^9, 3.779279777835878*^9}, {
   3.779279834910852*^9, 3.779279877295828*^9}, {3.779279939742702*^9, 
   3.779280004600944*^9}, {3.7792800929239607`*^9, 3.7792801321513567`*^9}, {
   3.7792806743009357`*^9, 3.779280730510482*^9}, {3.779281176303897*^9, 
   3.7792812134119596`*^9}, {3.779281269945743*^9, 3.7792812755086527`*^9}, 
   3.779281756199522*^9, {3.7792818129111357`*^9, 3.779281824298513*^9}, 
   3.779282402703526*^9, 3.7792824942242317`*^9, {3.7792826645686407`*^9, 
   3.7792826691507587`*^9}, {3.8112418450792837`*^9, 3.811241862735649*^9}, 
   3.811241915329021*^9, {3.811242002467813*^9, 
   3.81124200936372*^9}},ExpressionUUID->"05b6410c-8370-4445-b82c-\
580cdc9c0180"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SetKerrCoords", "[", 
     RowBox[{
     "v_Symbol", ",", " ", "r_Symbol", ",", " ", "\[Theta]_Symbol", ",", " ", 
      "\[Chi]_Symbol"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", "  ", 
      RowBox[{
       RowBox[{"WhichCoords", " ", "=", " ", "Kerr"}], ";", "\n", "\t", 
       RowBox[{"$v", " ", "=", " ", "v"}], ";", "\n", "\t", 
       RowBox[{"$r", " ", "=", " ", "r"}], ";", "\n", "\t", 
       RowBox[{"$\[Theta]", " ", "=", " ", "\[Theta]"}], ";", "\n", "\t", 
       RowBox[{"$\[Chi]", " ", "=", " ", "\[Chi]"}], ";"}]}], "\n", "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GetKerrCoords", "[", "]"}], " ", ":=", " ", 
   RowBox[{"{", 
    RowBox[{
    "$v", ",", " ", "$r", ",", " ", "$\[Theta]", ",", " ", "$\[Chi]"}], 
    "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.811240020979745*^9, 3.811240074428385*^9}, {
   3.811241875698669*^9, 3.811241878832107*^9}, 3.811241913810371*^9, {
   3.8112420138598213`*^9, 
   3.811242020540053*^9}},ExpressionUUID->"3e7515a8-c1c5-4231-9e0e-\
6d0d156aceb5"]
}, Closed]],

Cell[CellGroupData[{

Cell["SetMetric[] and GetMetric[]", "Subsection",
 CellChangeTimes->{{3.760079674417808*^9, 
  3.760079687106201*^9}},ExpressionUUID->"7c82d830-f888-42f9-ac89-\
5e8a83ac1aeb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "sets", " ", "just", " ", "the", " ", "symbol", " ", "of", " ", "the", " ",
     "metric", " ", "to", " ", "be", " ", "used"}], " ", "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SetMetric", "[", "metricSymbol_Symbol", "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"$metric", " ", "=", " ", "metricSymbol"}], ";"}]}], "\n", 
      "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "use", " ", "lower", " ", "metric", " ", "components", " ", "as", " ", 
     "the", " ", "standard", " ", "input", " ", "form"}], " ", "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{"TODO", ":", " ", 
     RowBox[{
     "user", " ", "should", " ", "actively", " ", "decide", " ", "on", " ", 
      "lower", " ", "or", " ", "upper", " ", "declaration"}]}], " ", "*)"}], 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "SetMetric", "]"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"LowerQ", "\[Rule]", "True"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SetMetric", "::", "LowerQBoole"}], "=", 
     "\"\<The value of LowerQ should be True or False. User input overriden \
and standard value 'True' is used.\>\""}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "sets", " ", "symbol", " ", "and", " ", "explicit", " ", "components", 
     " ", "of", " ", "the", " ", "metric", " ", "to", " ", "be", " ", 
     "used"}], " ", "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SetMetric", "[", 
      RowBox[{"metricSymbol_Symbol", ",", " ", 
       RowBox[{"metricComponents_List", "/;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "metricComponents", "]"}], "\[Equal]", 
         RowBox[{"{", 
          RowBox[{"4", ",", "4"}], "}"}]}]}], ",", " ", 
       RowBox[{"options", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", " ", 
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t", 
        RowBox[{"inverseMetricComponents", " ", "=", " ", 
         RowBox[{"Inverse", "[", "metricComponents", "]"}]}], "\n", "\t", 
        "}"}], ",", "\n", "\t", "\n", "\t", 
       RowBox[{"(*", " ", 
        RowBox[{"set", " ", "the", " ", "metric", " ", "symbol"}], " ", 
        "*)"}], "\n", "\t", 
       RowBox[{
        RowBox[{"$metric", " ", "=", " ", "metricSymbol"}], ";", "\n", "\n", 
        "\t", 
        RowBox[{"Switch", "[", 
         RowBox[{
          RowBox[{"OptionValue", "[", "LowerQ", "]"}], ",", "\n", "\t\t", 
          "True", "\n", "\t\t", ",", "\n", "\t\t", 
          RowBox[{"(*", 
           RowBox[{"set", " ", "the", " ", "lower", " ", "metric"}], "*)"}], 
          "\n", "\t\t", 
          RowBox[{
           RowBox[{"Do", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"$metric", "[", 
               RowBox[{
                RowBox[{"-", "i"}], ",", 
                RowBox[{"-", "j"}]}], "]"}], "=", 
              RowBox[{"metricComponents", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", "\n", "\t\t\t", 
             
             RowBox[{"{", 
              RowBox[{"i", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "4"}], "}"}]}], "\n", "\t\t", "]"}], ";", 
           "\n", "\t\t", 
           RowBox[{"(*", 
            RowBox[{"set", " ", "the", " ", "upper", " ", "metric"}], "*)"}], 
           "\n", "\t\t", 
           RowBox[{"Do", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"$metric", "[", 
               RowBox[{"i", ",", "j"}], "]"}], "=", 
              RowBox[{"inverseMetricComponents", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", "\n", "\t\t\t", 
             
             RowBox[{"{", 
              RowBox[{"i", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "4"}], "}"}]}], "\n", "\t\t", "]"}], ";"}], 
          "\n", "\t\t", ",", "\n", "\t\t", "False", "\n", "\t\t", ",", "\n", 
          "\t\t", 
          RowBox[{"(*", 
           RowBox[{"set", " ", "the", " ", "upper", " ", "metric"}], "*)"}], 
          "\n", "\t\t", 
          RowBox[{
           RowBox[{"Do", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"$metric", "[", 
               RowBox[{"i", ",", "j"}], "]"}], "=", 
              RowBox[{"metricComponents", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", "\n", "\t\t\t", 
             
             RowBox[{"{", 
              RowBox[{"i", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "4"}], "}"}]}], "\n", "\t\t", "]"}], ";", 
           "\n", "\t\t", 
           RowBox[{"(*", 
            RowBox[{"set", " ", "the", " ", "lower", " ", "metric"}], "*)"}], 
           "\n", "\t\t", 
           RowBox[{"Do", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"$metric", "[", 
               RowBox[{
                RowBox[{"-", "i"}], ",", 
                RowBox[{"-", "j"}]}], "]"}], "=", 
              RowBox[{"inverseMetricComponents", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", "\n", "\t\t\t", 
             
             RowBox[{"{", 
              RowBox[{"i", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "4"}], "}"}]}], "\n", "\t\t", "]"}], ";"}], 
          "\n", "\t\t", ",", "\n", "\t\t", "___", ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Message", "[", 
            RowBox[{
             RowBox[{"f", "::", "LowerQBoole"}], ",", "b"}], "]"}], ";", "\n",
            "\t\t", 
           RowBox[{"(*", 
            RowBox[{"set", " ", "the", " ", "lower", " ", "metric"}], "*)"}], 
           "\n", "\t\t", 
           RowBox[{"Do", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"$metric", "[", 
               RowBox[{
                RowBox[{"-", "i"}], ",", 
                RowBox[{"-", "j"}]}], "]"}], "=", 
              RowBox[{"metricComponents", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", "\n", "\t\t\t", 
             
             RowBox[{"{", 
              RowBox[{"i", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "4"}], "}"}]}], "\n", "\t\t", "]"}], ";", 
           "\n", "\t\t", 
           RowBox[{"(*", 
            RowBox[{"set", " ", "the", " ", "upper", " ", "metric"}], "*)"}], 
           "\n", "\t\t", 
           RowBox[{"Do", "[", "\n", "\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"$metric", "[", 
               RowBox[{"i", ",", "j"}], "]"}], "=", 
              RowBox[{"inverseMetricComponents", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", "\n", "\t\t\t", 
             
             RowBox[{"{", 
              RowBox[{"i", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "4"}], "}"}]}], "\n", "\t\t", "]"}], ";"}]}], 
         "\n", "\t", "]"}], ";"}]}], "\n", "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.7600690223838043`*^9, 3.7600690710945597`*^9}, {
   3.76007187065856*^9, 3.760071925391111*^9}, {3.760071968703323*^9, 
   3.7600719772091*^9}, {3.76007201483885*^9, 3.760072104243979*^9}, {
   3.760072155910742*^9, 3.760072215374798*^9}, {3.7600723425338373`*^9, 
   3.760072381661373*^9}, {3.760072435564219*^9, 3.760072569218574*^9}, {
   3.7600726043412933`*^9, 3.760072611927273*^9}, {3.7600726462338448`*^9, 
   3.7600726664629583`*^9}, {3.760072728728697*^9, 3.7600731449515753`*^9}, {
   3.760073197986067*^9, 3.76007336193386*^9}, {3.760073443218858*^9, 
   3.76007351114426*^9}, {3.760073639712381*^9, 3.760073729363492*^9}, 
   3.7792817613814487`*^9, {3.779282023936783*^9, 3.779282028830703*^9}, {
   3.779282138032131*^9, 3.779282139703845*^9}, {3.779282172667161*^9, 
   3.779282215029464*^9}, {3.779282256612928*^9, 3.779282265084518*^9}, 
   3.7792823906385612`*^9, {3.779282433906096*^9, 3.779282491931753*^9}, {
   3.7792826758914423`*^9, 3.779282676621666*^9}, {3.8111708729558363`*^9, 
   3.811170875259647*^9}, {3.811327482875147*^9, 
   3.8113274830325108`*^9}},ExpressionUUID->"82417c37-f12d-4b31-a916-\
3f70b3ccfdb4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"gets", " ", "the", " ", 
    RowBox[{"(", 
     RowBox[{"previously", " ", "set"}], ")"}], " ", "metric"}], " ", "*)"}], 
  "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GetMetric", "[", "]"}], " ", ":=", " ", "$metric"}], ";"}], 
   "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "gets", " ", "a", " ", "specific", " ", "component", " ", "of", " ", 
     "the", " ", 
     RowBox[{"(", 
      RowBox[{"previously", " ", "set"}], ")"}], " ", "metric"}], " ", "*)"}],
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GetMetric", "[", 
      RowBox[{
       RowBox[{"i_", "/;", 
        RowBox[{"Or", "[", 
         RowBox[{
          RowBox[{"ExplicitUpperIndexQ", "@", "i"}], ",", 
          RowBox[{"ExplicitLowerIndexQ", "@", "i"}]}], "]"}]}], ",", 
       RowBox[{"j_", "/;", 
        RowBox[{"Or", "[", 
         RowBox[{
          RowBox[{"ExplicitUpperIndexQ", "@", "j"}], ",", 
          RowBox[{"ExplicitLowerIndexQ", "@", "j"}]}], "]"}]}]}], "]"}], " ", 
     ":=", " ", 
     RowBox[{"$metric", "[", 
      RowBox[{"i", ",", "j"}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.760073520274274*^9, 3.760073623997293*^9}, {
  3.760073749133471*^9, 3.760073758399481*^9}, {3.760079129540543*^9, 
  3.760079168932686*^9}},ExpressionUUID->"36c64e3c-ef00-434d-a8dc-\
79a38b160006"]
}, Closed]],

Cell[CellGroupData[{

Cell["SetChristoffels[] and GetChristoffels[]", "Subsection",
 CellChangeTimes->{{3.7600796959360323`*^9, 
  3.760079707709949*^9}},ExpressionUUID->"244fa1a1-2ef5-4610-be39-\
c5a865d0b932"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "sets", " ", "just", " ", "the", " ", "christoffel", " ", "symbol", " ", 
    RowBox[{"w", "/", "o"}], " ", "explicit", " ", "values"}], " ", "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SetChristoffel", "[", "christoffelSymbol_", "]"}], " ", ":=", 
     " ", 
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\t", 
       RowBox[{
        RowBox[{"$christoffel", " ", "=", " ", "christoffelSymbol"}], ";"}]}],
       "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "sets", " ", "the", " ", "christoffel", " ", "symbol", " ", 
      "christoffelSymbol", " ", "in", " ", "xAct", " ", "notation", " ", 
      "and", " ", "assigns", " ", "the", " ", "values", " ", "from", " ", "a",
       " ", 
      RowBox[{"(", 
       RowBox[{"4", ",", "4", ",", "4"}], ")"}]}], "-", 
     RowBox[{
     "dimensional", " ", "list", " ", "christoffelList", " ", "of", " ", 
      "expressions"}]}], "*)"}], "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "it", " ", "only", " ", "allows", " ", "for", " ", "input", " ", "with", 
     " ", "one", " ", "upper", " ", "followed", " ", "by", " ", "two", " ", 
     "lower", " ", "indices", " ", "as", " ", "the", " ", "Christoffel", " ", 
     "is", " ", "not", " ", "a", " ", "tensor"}], " ", "*)"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"SetChristoffel", "[", 
      RowBox[{"christoffelSymbol_", ",", " ", 
       RowBox[{"christoffelComponents_List", "/;", 
        RowBox[{
         RowBox[{"Dimensions", "[", "christoffelComponents", "]"}], 
         "\[Equal]", 
         RowBox[{"{", 
          RowBox[{"4", ",", "4", ",", "4"}], "}"}]}]}]}], "]"}], " ", ":=", 
     " ", 
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\n", "\t", 
       RowBox[{
        RowBox[{"$christoffel", " ", "=", " ", "christoffelSymbol"}], ";", 
        "\n", "\n", "\t", 
        RowBox[{"Do", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"$christoffel", " ", "=", " ", "christoffelSymbol"}], ";", 
           "\n", "\t\t", 
           RowBox[{
            RowBox[{"christoffelSymbol", "[", 
             RowBox[{"i", ",", 
              RowBox[{"-", "j"}], ",", 
              RowBox[{"-", "k"}]}], "]"}], " ", "=", " ", 
            RowBox[{"christoffelComponents", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}]}]}], ",", "\n", 
          "\t\t", 
          RowBox[{"{", 
           RowBox[{"i", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", "4"}], "}"}]}], "\n", "\t", "]"}], ";"}]}], "\n",
       "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.759648954951639*^9, 3.759649001196498*^9}, {
   3.759649055931678*^9, 3.759649082244481*^9}, {3.7596491608643303`*^9, 
   3.7596491774551773`*^9}, {3.7596493017564907`*^9, 3.759649380374263*^9}, {
   3.759649532098851*^9, 3.759649537254908*^9}, {3.759649606802886*^9, 
   3.759649617420043*^9}, {3.759649685360005*^9, 3.759649811466649*^9}, {
   3.759649849318046*^9, 3.759649851455797*^9}, {3.759649901361409*^9, 
   3.759649909038323*^9}, {3.759649953215805*^9, 3.759650061458602*^9}, 
   3.759650569354425*^9, {3.7597362152306137`*^9, 3.759736245022252*^9}, {
   3.760079834146722*^9, 3.760079868504706*^9}, {3.760080055291875*^9, 
   3.76008007035397*^9}, {3.760080114346263*^9, 3.760080151110725*^9}, {
   3.760080182802685*^9, 3.760080235068214*^9}, {3.760080326558588*^9, 
   3.7600805761756372`*^9}, {3.76008062285373*^9, 3.760080631139308*^9}, {
   3.760080920065236*^9, 3.760080929310594*^9}, {3.760081207476506*^9, 
   3.760081211269236*^9}},
 Background->GrayLevel[
  0.85],ExpressionUUID->"2520c103-06a8-44b1-9ecc-d6bfcd2fd319"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"gets", " ", "the", " ", 
    RowBox[{"(", 
     RowBox[{"previously", " ", "set"}], ")"}], " ", "metric"}], " ", "*)"}], 
  "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GetChristoffel", "[", "]"}], " ", ":=", " ", "$christoffel"}], 
    ";"}], "\n", "\n", 
   RowBox[{"(*", " ", 
    RowBox[{
    "gets", " ", "a", " ", "specific", " ", "component", " ", "of", " ", 
     "the", " ", 
     RowBox[{"(", 
      RowBox[{"previously", " ", "set"}], ")"}], " ", "metric"}], " ", "*)"}],
    "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GetChristoffel", "[", 
      RowBox[{
       RowBox[{"i_", "?", "ExplicitUpperIndexQ"}], ",", " ", 
       RowBox[{"j_", "?", "ExplicitLowerIndexQ"}], ",", " ", 
       RowBox[{"k_", "?", "ExplicitLowerIndexQ"}]}], "]"}], " ", ":=", " ", 
     RowBox[{"$christoffel", "[", 
      RowBox[{"i", ",", "j", ",", "k"}], "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{{3.760080571737733*^9, 3.760080612889028*^9}, {
  3.760080662810542*^9, 3.760080706211175*^9}, {3.760081372785852*^9, 
  3.7600813766435757`*^9}, {3.760418738122007*^9, 
  3.7604187405111427`*^9}},ExpressionUUID->"43ce8f58-3c62-43da-a133-\
87964d2602ec"],

Cell["\<\
Later on one could privately load xCoba to calculate the Christoffel symbols \
from the metric.\
\>", "Text",
 CellChangeTimes->{{3.7600795375750427`*^9, 
  3.7600795795186777`*^9}},ExpressionUUID->"fa6632e3-4adf-446e-9a10-\
a71bf562b544"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CalculateChristoffelsFromMetric", "[", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.76007959309459*^9, 
  3.7600796099998903`*^9}},ExpressionUUID->"66a1fab4-0589-433e-8224-\
afe6023f55cf"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["defining evolution ODE\[CloseCurlyQuote]s and initial values", "Section",
 CellChangeTimes->{{3.760418872194848*^9, 
  3.760418893494804*^9}},ExpressionUUID->"6f5dbe02-edc8-4e60-ae76-\
565ac0f1212d"],

Cell[CellGroupData[{

Cell["define the ODE", "Subsection",
 CellChangeTimes->{{3.760418898290104*^9, 
  3.7604189007740593`*^9}},ExpressionUUID->"2ce167d8-2950-4019-8022-\
306183c18170"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "simply", " ", "defines", " ", "the", " ", "geodesic", " ", "equation", 
    " ", "as", " ", "a", " ", "1", "st", " ", "order", " ", "system", " ", 
    "of", " ", "8", " ", 
    RowBox[{"ODE", "'"}], "s", " ", "in", " ", "terms", " ", "of", " ", 
    "christoffel", " ", "symbols"}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"GetNullGeodesic1stOrderODE", "[", 
      RowBox[{"pos_", ",", " ", "waveVector_", ",", " ", "affineParam_"}], 
      "]"}], " ", "where", " ", "pos", " ", "is", " ", "the", " ", "symbol", 
     " ", "for", " ", "the", " ", "position"}], ",", " ", 
    RowBox[{
    "waveVector", " ", "the", " ", "symbol", " ", "for", " ", "the", " ", 
     "wave", " ", "vector"}], ",", " ", 
    RowBox[{
    "and", " ", "affineParam", " ", "the", " ", "affine", " ", "parameter", 
     " ", "of", " ", "the", " ", "null", " ", "geodesic"}]}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Reference", " ", "for", " ", "implemented", " ", "geodesic", " ", 
     RowBox[{"Eq", ".", " ", "cast"}], " ", "into", " ", "1", "st", " ", 
     "order", " ", 
     RowBox[{"ODE", ":", " ", "1801.10452"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Eq", ".", " ", 
       RowBox[{"(", "5", ")"}]}], " ", "&"}], " ", 
     RowBox[{
      RowBox[{"(", "6", ")"}], "."}]}]}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GetNullGeodesic1stOrderODE", "[", "]"}], " ", ":=", " ", 
     RowBox[{"GetNullGeodesic1stOrderODE", "[", 
      RowBox[{"x", ",", " ", "k", ",", " ", "\[Lambda]"}], "]"}]}], ";"}], 
   "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GetNullGeodesic1stOrderODE", "[", 
      RowBox[{
      "pos_Symbol", ",", " ", "waveVector_Symbol", ",", " ", 
       "affineParam_Symbol"}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"pos", "[", "1", "]"}], "[", "affineParam", "]"}], ",", 
             "affineParam"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"waveVector", "[", "1", "]"}], "[", "affineParam", 
            "]"}]}], ",", " ", "\n", "\t\t", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"pos", "[", "2", "]"}], "[", "affineParam", "]"}], ",", 
             "affineParam"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"waveVector", "[", "2", "]"}], "[", "affineParam", 
            "]"}]}], ",", " ", "\n", "\t\t", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"pos", "[", "3", "]"}], "[", "affineParam", "]"}], ",", 
             "affineParam"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"waveVector", "[", "3", "]"}], "[", "affineParam", 
            "]"}]}], ",", " ", "\n", "\t\t", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"pos", "[", "4", "]"}], "[", "affineParam", "]"}], ",", 
             "affineParam"}], "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"waveVector", "[", "4", "]"}], "[", "affineParam", 
            "]"}]}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"waveVector", "[", "1", "]"}], "[", "affineParam", 
              "]"}], ",", "affineParam"}], "]"}], "\[Equal]", 
           RowBox[{"-", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"GetChristoffel", "[", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "m"}], ",", 
                 RowBox[{"-", "n"}]}], "]"}], "*", 
               RowBox[{
                RowBox[{"waveVector", "[", "m", "]"}], "[", "affineParam", 
                "]"}], "*", 
               RowBox[{
                RowBox[{"waveVector", "[", "n", "]"}], "[", "affineParam", 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"m", ",", "4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "4"}], "}"}]}], "]"}]}]}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"waveVector", "[", "2", "]"}], "[", "affineParam", 
              "]"}], ",", "affineParam"}], "]"}], "\[Equal]", 
           RowBox[{"-", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"GetChristoffel", "[", 
                RowBox[{"2", ",", 
                 RowBox[{"-", "m"}], ",", 
                 RowBox[{"-", "n"}]}], "]"}], "*", 
               RowBox[{
                RowBox[{"waveVector", "[", "m", "]"}], "[", "affineParam", 
                "]"}], "*", 
               RowBox[{
                RowBox[{"waveVector", "[", "n", "]"}], "[", "affineParam", 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"m", ",", "4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "4"}], "}"}]}], "]"}]}]}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"waveVector", "[", "3", "]"}], "[", "affineParam", 
              "]"}], ",", "affineParam"}], "]"}], "\[Equal]", 
           RowBox[{"-", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"GetChristoffel", "[", 
                RowBox[{"3", ",", 
                 RowBox[{"-", "m"}], ",", 
                 RowBox[{"-", "n"}]}], "]"}], "*", 
               RowBox[{
                RowBox[{"waveVector", "[", "m", "]"}], "[", "affineParam", 
                "]"}], "*", 
               RowBox[{
                RowBox[{"waveVector", "[", "n", "]"}], "[", "affineParam", 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"m", ",", "4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "4"}], "}"}]}], "]"}]}]}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"D", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"waveVector", "[", "4", "]"}], "[", "affineParam", 
              "]"}], ",", "affineParam"}], "]"}], "\[Equal]", 
           RowBox[{"-", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"GetChristoffel", "[", 
                RowBox[{"4", ",", 
                 RowBox[{"-", "m"}], ",", 
                 RowBox[{"-", "n"}]}], "]"}], "*", 
               RowBox[{
                RowBox[{"waveVector", "[", "m", "]"}], "[", "affineParam", 
                "]"}], "*", 
               RowBox[{
                RowBox[{"waveVector", "[", "n", "]"}], "[", "affineParam", 
                "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"m", ",", "4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"n", ",", "4"}], "}"}]}], "]"}]}]}]}], "\n", "\t", 
         "}"}], "]"}]}], "\n", "]"}]}], ";"}]}]}]], "Code",
 CellChangeTimes->{
  3.76041890883561*^9, {3.760419068078196*^9, 3.760419093781599*^9}, 
   3.760419175453005*^9, {3.7604196409044857`*^9, 
   3.760419644584538*^9}},ExpressionUUID->"c4e880a6-8a54-499b-bfdf-\
4d43e71ab746"]
}, Closed]],

Cell[CellGroupData[{

Cell["define Boyer-Lindquist coordinate rules", "Subsection",
 CellChangeTimes->{{3.760419867152108*^9, 3.760419876202402*^9}, {
  3.811317021031001*^9, 
  3.81131702289503*^9}},ExpressionUUID->"c6efdc96-2747-4f69-8a26-\
1bc1f5c98036"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ConvertBoyerLindquistToCartesian", "[", 
    RowBox[{"{", 
     RowBox[{"r_", ",", "theta_", ",", "phi_"}], "}"}], "]"}], ":=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"r", "^", "2"}], " ", "+", " ", 
        RowBox[{"$spin", "^", "2"}]}], "]"}], "*", 
      RowBox[{"Sin", "[", "theta", "]"}], "*", 
      RowBox[{"Cos", "[", "phi", "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"r", "^", "2"}], " ", "+", " ", 
        RowBox[{"$spin", "^", "2"}]}], "]"}], "*", 
      RowBox[{"Sin", "[", "theta", "]"}], "*", 
      RowBox[{"Sin", "[", "phi", "]"}]}], ",", 
     RowBox[{"r", "*", 
      RowBox[{"Cos", "[", "theta", "]"}]}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{
  3.760427120156196*^9, {3.811248639771359*^9, 3.8112486644478893`*^9}, 
   3.811248836769802*^9, {3.811251240378368*^9, 
   3.811251295789363*^9}},ExpressionUUID->"527f1fc5-7536-4708-988e-\
0f836b3189fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "this", " ", "is", " ", "to", " ", "transform", " ", "the", " ", 
     "observers", " ", "screen", " ", "coordinates", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"i", ".", "e", "."}], ",", " ", 
       RowBox[{
       "the", " ", "initial", " ", "conditions", " ", "for", " ", "the", " ", 
        "light", " ", "rays"}]}], ")"}], " ", "into", " ", "standard", " ", 
     "Boyer"}], "-", 
    RowBox[{"Lindquist", " ", 
     RowBox[{"(", "BL", ")"}], " ", "coordinates", " ", "of", " ", "the", " ",
      "BH"}]}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"we", " ", "follow", " ", "1607.05767"}], ",", " ", 
    RowBox[{
     RowBox[{"Sec", ".", " ", "II"}], " ", "C"}]}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "the", " ", "observer", " ", "screen", " ", "extends", " ", "in", " ", 
      "the", " ", "observers", " ", "x", " ", "and", " ", "y", " ", 
      "coordinates", " ", "with", " ", "the", " ", "origin", " ", "at", " ", 
      RowBox[{"(", 
       RowBox[{"0", ",", "rObs", ",", "\[Theta]Obs", ",", "\[Phi]Obs"}], 
       ")"}], " ", "in", " ", "BL"}], "-", "coords"}], ",", " ", 
    RowBox[{
     RowBox[{"while", " ", "the", " ", "observers", " ", "z"}], "-", 
     RowBox[{
     "axis", " ", "is", " ", "aligned", " ", "with", " ", "the", " ", 
      "radial", " ", "direction", " ", "in", " ", "BL"}], "-", "coords"}]}], 
   "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "a", " ", "is", " ", "the", " ", "rotation", " ", "parameter", " ", "of", 
     " ", "the", " ", "Kerr"}], "-", 
    RowBox[{"BH", " ", 
     RowBox[{"(", 
      RowBox[{"0", " ", "for", " ", "Schwarzschild"}], ")"}]}]}], " ", "*)"}],
   "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
     RowBox[{"could", " ", "be", " ", "hard"}], "-", 
     RowBox[{
     "coded", " ", "to", " ", "decrease", " ", "computation", " ", 
      "time"}]}]}], "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"get", " ", "the", " ", "spatial", " ", "coordinates"}], "*)"}], 
  "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GetBoyerLindquistToSceenCoordsRule", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"r_", ",", "\[Theta]_", ",", "\[Phi]_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"rObs_", ",", "\[Theta]Obs_", ",", "\[Phi]Obs_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}], ",", "a_"}], "]"}], " ", ":=", " ", 
     
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Sigma]", ",", "\[ScriptCapitalD]", ",", "X", ",", "Y", ",", "Z"}], 
        "}"}], ",", "\n", "\n", "\t", 
       RowBox[{
        RowBox[{"\[ScriptCapitalD]", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]Obs", "]"}], " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"rObs", "^", "2"}], " ", "+", " ", 
             RowBox[{"a", "^", "2"}]}], "]"}]}], " ", "-", " ", 
          RowBox[{"y", " ", 
           RowBox[{"Cos", "[", "\[Theta]Obs", "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{"X", " ", "=", " ", 
         RowBox[{
          RowBox[{"\[ScriptCapitalD]", " ", 
           RowBox[{"Cos", "[", "\[Phi]Obs", "]"}]}], " ", "-", " ", 
          RowBox[{"x", " ", 
           RowBox[{"Sin", "[", "\[Phi]Obs", "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{"Y", " ", "=", " ", 
         RowBox[{
          RowBox[{"\[ScriptCapitalD]", " ", 
           RowBox[{"Sin", "[", "\[Phi]Obs", "]"}]}], " ", "+", " ", 
          RowBox[{"x", " ", 
           RowBox[{"Cos", "[", "\[Phi]Obs", "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{"Z", " ", "=", " ", 
         RowBox[{
          RowBox[{"rObs", " ", 
           RowBox[{"Cos", "[", "\[Theta]Obs", "]"}]}], " ", "+", " ", 
          RowBox[{"y", " ", 
           RowBox[{"Sin", "[", "\[Theta]Obs", "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{"\[Sigma]", " ", "=", " ", 
         FractionBox[
          RowBox[{
           RowBox[{"X", "^", "2"}], " ", "+", " ", 
           RowBox[{"Y", "^", "2"}], " ", "+", " ", 
           RowBox[{"Z", "^", "2"}], " ", "-", " ", 
           RowBox[{"a", "^", "2"}]}], "2"]}], ";", "\n", "\t", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"r", " ", "\[Rule]", "  ", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"\[Sigma]", " ", "+", " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"\[Sigma]", "^", "2"}], " ", "+", " ", 
                RowBox[{
                 RowBox[{"a", "^", "2"}], "*", 
                 RowBox[{"Z", "^", "2"}]}]}], "]"}]}], "]"}]}], ",", "\n", 
           "\t\t", 
           RowBox[{"\[Theta]", " ", "\[Rule]", " ", 
            RowBox[{"ArcCos", "[", 
             FractionBox["Z", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"\[Sigma]", " ", "+", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"\[Sigma]", "^", "2"}], " ", "+", " ", 
                  RowBox[{
                   RowBox[{"a", "^", "2"}], "*", 
                   RowBox[{"Z", "^", "2"}]}]}], "]"}]}], "]"}]], "]"}]}], ",",
            "\n", "\t\t", 
           RowBox[{"\[Phi]", " ", "\[Rule]", " ", 
            RowBox[{"ArcTan", "[", 
             RowBox[{"Y", "/", "X"}], "]"}]}]}], "\n", "\t", "}"}], "]"}]}]}],
       "\n", "\t", "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
    "get", " ", "the", " ", "derivatives", " ", "of", " ", "the", " ", 
     "spatial", " ", "coordinates"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GetBoyerLindquistDerivativesToSceenCoordsRule", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"r_", ",", "\[Theta]_", ",", "\[Phi]_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"rObs_", ",", "\[Theta]Obs_", ",", "\[Phi]Obs_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_"}], "}"}], ",", "a_"}], "]"}], " ", ":=", " ", 
     
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "\[Sigma]", ",", "\[ScriptCapitalD]", ",", "X", ",", "Y", ",", "Z", 
         ",", "\[CapitalSigma]", ",", "\[ScriptCapitalR]", ",", 
         "\[CapitalPhi]"}], "}"}], ",", "\n", "\t", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
        "definitions", " ", "to", " ", "obtain", " ", "initial", " ", 
         "position"}], "*)"}], "\n", "\t", 
       RowBox[{
        RowBox[{"\[ScriptCapitalD]", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Sin", "[", "\[Theta]Obs", "]"}], " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"rObs", "^", "2"}], " ", "+", " ", 
             RowBox[{"a", "^", "2"}]}], "]"}]}], " ", "-", " ", 
          RowBox[{"y", " ", 
           RowBox[{"Cos", "[", "\[Theta]Obs", "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{"X", " ", "=", " ", 
         RowBox[{
          RowBox[{"\[ScriptCapitalD]", " ", 
           RowBox[{"Cos", "[", "\[Phi]Obs", "]"}]}], " ", "-", " ", 
          RowBox[{"x", " ", 
           RowBox[{"Sin", "[", "\[Phi]Obs", "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{"Y", " ", "=", " ", 
         RowBox[{
          RowBox[{"\[ScriptCapitalD]", " ", 
           RowBox[{"Sin", "[", "\[Phi]Obs", "]"}]}], " ", "+", " ", 
          RowBox[{"x", " ", 
           RowBox[{"Cos", "[", "\[Phi]Obs", "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{"Z", " ", "=", " ", 
         RowBox[{
          RowBox[{"rObs", " ", 
           RowBox[{"Cos", "[", "\[Theta]Obs", "]"}]}], " ", "+", " ", 
          RowBox[{"y", " ", 
           RowBox[{"Sin", "[", "\[Theta]Obs", "]"}]}]}]}], ";", "\n", "\t", 
        RowBox[{"\[Sigma]", " ", "=", " ", 
         FractionBox[
          RowBox[{
           RowBox[{"X", "^", "2"}], " ", "+", " ", 
           RowBox[{"Y", "^", "2"}], " ", "+", " ", 
           RowBox[{"Z", "^", "2"}], " ", "-", " ", 
           RowBox[{"a", "^", "2"}]}], "2"]}], ";", "\n", "\t", 
        RowBox[{"(*", 
         RowBox[{
         "definitions", " ", "to", " ", "obtain", " ", "initial", " ", 
          "velocity"}], "*)"}], "\n", "\t", 
        RowBox[{"\[CapitalSigma]", " ", "=", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"r", "^", "2"}], " ", "+", " ", 
           RowBox[{
            RowBox[{"a", "^", "2"}], "*", 
            RowBox[{
             RowBox[{"Cos", "[", "\[Theta]", "]"}], "^", "2"}]}]}], ")"}]}], 
        ";", "\n", "\t", 
        RowBox[{"\[ScriptCapitalR]", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{"r", "^", "2"}], " ", "+", " ", 
             RowBox[{"a", "^", "2"}]}], "]"}], ")"}], "/.", 
          RowBox[{"{", 
           RowBox[{"r", ":>", 
            RowBox[{"Sqrt", "[", 
             RowBox[{"\[Sigma]", " ", "+", " ", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"\[Sigma]", "^", "2"}], " ", "+", " ", 
                RowBox[{
                 RowBox[{"a", "^", "2"}], "*", 
                 RowBox[{"Z", "^", "2"}]}]}], "]"}]}], "]"}]}], "}"}]}]}], 
        ";", "\n", "\t", 
        RowBox[{"\[CapitalPhi]", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"\[Phi]", "-", "\[Phi]Obs"}], ")"}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Phi]", "\[Rule]", 
            RowBox[{"ArcTan", "[", 
             RowBox[{"Y", "/", "X"}], "]"}]}], "}"}]}]}], ";", "\n", "\t", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"Der", "[", "r", "]"}], " ", "\[Rule]", "  ", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"r", "*", "\[ScriptCapitalR]", "*", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
                RowBox[{"Sin", "[", "\[Theta]Obs", "]"}], "*", 
                RowBox[{"Cos", "[", "\[CapitalPhi]", "]"}]}], " ", "+", " ", 
               RowBox[{
                RowBox[{"\[ScriptCapitalR]", "^", "2"}], "*", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "*", 
                RowBox[{"Cos", "[", "\[Theta]Obs", "]"}]}]}], 
              "\[CapitalSigma]"]}]}], ",", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Der", "[", "\[Theta]", "]"}], " ", "\[Rule]", " ", 
            RowBox[{"-", 
             FractionBox[
              RowBox[{
               RowBox[{"\[ScriptCapitalR]", "*", 
                RowBox[{"Cos", "[", "\[Theta]", "]"}], "*", 
                RowBox[{"Sin", "[", "\[Theta]Obs", "]"}], "*", 
                RowBox[{"Cos", "[", "\[CapitalPhi]", "]"}]}], " ", "-", " ", 
               RowBox[{"r", "*", 
                RowBox[{"Sin", "[", "\[Theta]", "]"}], "*", 
                RowBox[{"Cos", "[", "\[Theta]Obs", "]"}]}]}], 
              "\[CapitalSigma]"]}]}], ",", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Der", "[", "\[Phi]", "]"}], " ", "\[Rule]", " ", 
            FractionBox[
             RowBox[{
              RowBox[{"Sin", "[", "\[Theta]Obs", "]"}], "*", 
              RowBox[{"Sin", "[", "\[CapitalPhi]", "]"}], "*", 
              RowBox[{"Csc", "[", "\[Theta]", "]"}]}], 
             "\[ScriptCapitalR]"]}]}], "\n", "\t", "}"}], "]"}]}]}], "\n", 
      "\t", "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{"returns", " ", "the", " ", "initial", " ", "position"}], " ", 
    "*)"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "\[Delta]", " ", "is", " ", "a", " ", "constant", " ", "which", " ", 
       "in", " ", 
       RowBox[{"(", 
        RowBox[{"-", 
         RowBox[{",", 
          RowBox[{"+", 
           RowBox[{",", 
            RowBox[{"+", 
             RowBox[{",", "+"}]}]}]}]}]}], ")"}], " ", "signature", " ", "is",
        " ", "0", " ", "for", " ", "light"}], "-", 
      RowBox[{"like", " ", "particles", " ", 
       RowBox[{"(", "photons", ")"}]}]}], ",", " ", 
     RowBox[{
      RowBox[{"-", "1"}], " ", "for", " ", "others"}], ",", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"cf", ".", " ", "1607.05767", ".", " ", "Since"}], " ", "we", 
       " ", "only", " ", "work", " ", "with", " ", "photons", " ", "for", " ",
        "now", " ", "we", " ", "use", " ", "\[Delta]"}], "=", "0"}]}], "*)"}],
    "\n", 
   RowBox[{
    RowBox[{"GetBoyerLindquistInitialValues", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "pos_Symbol", ",", " ", "waveVector_Symbol", ",", " ", 
        "affineParam0_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rObs_", ",", "\[Theta]Obs_", ",", "\[Phi]Obs_"}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], ",", "a_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", " ", "\[Gamma]", ",", " ", 
        RowBox[{"covMetric", " ", "=", " ", 
         RowBox[{"GetMetric", "[", "]"}]}], ",", " ", "xForSum", ",", " ", 
        "kForSum", ",", " ", 
        RowBox[{"\[Delta]", "=", "0"}], ",", " ", 
        RowBox[{"t", "=", "$t"}], ",", " ", 
        RowBox[{"r", "=", "$r"}], ",", " ", 
        RowBox[{"\[Theta]", "=", "$\[Theta]"}], ",", " ", 
        RowBox[{"\[Phi]", "=", "$\[Phi]"}]}], "}"}], ",", "\n", "\n", "\t", 
      RowBox[{
       RowBox[{"xForSum", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"None", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]}], 
       ";", "\n", "\t", 
       RowBox[{"kForSum", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"Der", "[", "r", "]"}], ",", 
          RowBox[{"Der", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"Der", "[", "\[Phi]", "]"}]}], "}"}]}], ";", "\n", "\t", 
       "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "definitions", " ", "to", " ", "obtain", " ", "initial", " ", 
          "time"}], "-", 
         RowBox[{"component", " ", "derivative"}]}], "*)"}], "\n", "\t", 
       RowBox[{"\[Beta]", " ", "=", " ", 
        RowBox[{"-", " ", 
         FractionBox[
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"covMetric", "[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "i"}]}], "]"}], "*", 
             RowBox[{"kForSum", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "2", ",", "4"}], "}"}]}], "]"}], 
          RowBox[{"covMetric", "[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "]"}]]}]}], ";", "\n", "\t", 
       RowBox[{"\[Gamma]", " ", "=", " ", 
        FractionBox[
         RowBox[{"\[Delta]", " ", "-", " ", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"covMetric", "[", 
              RowBox[{
               RowBox[{"-", "i"}], ",", 
               RowBox[{"-", "j"}]}], "]"}], "*", 
             RowBox[{"kForSum", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"kForSum", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "2", ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "2", ",", "4"}], "}"}]}], "]"}]}], 
         RowBox[{"covMetric", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "]"}]]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", "\n", "\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"pos", "[", "1", "]"}], "[", "affineParam0", "]"}], 
              " ", "\[Equal]", " ", "t"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"pos", "[", "2", "]"}], "[", "affineParam0", "]"}], 
              " ", "\[Equal]", " ", "r"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"pos", "[", "3", "]"}], "[", "affineParam0", "]"}], 
              " ", "\[Equal]", " ", "\[Theta]"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"pos", "[", "4", "]"}], "[", "affineParam0", "]"}], 
              " ", "\[Equal]", " ", "\[Phi]"}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"waveVector", "[", "1", "]"}], "[", "affineParam0", 
               "]"}], " ", "\[Equal]", " ", 
              RowBox[{"Der", "[", "t", "]"}]}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"waveVector", "[", "2", "]"}], "[", "affineParam0", 
               "]"}], " ", "\[Equal]", " ", 
              RowBox[{"Der", "[", "r", "]"}]}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"waveVector", "[", "3", "]"}], "[", "affineParam0", 
               "]"}], " ", "\[Equal]", " ", 
              RowBox[{"Der", "[", "\[Theta]", "]"}]}], ",", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{"waveVector", "[", "4", "]"}], "[", "affineParam0", 
               "]"}], " ", "\[Equal]", " ", 
              RowBox[{"Der", "[", "\[Phi]", "]"}]}]}], "\n", "\t", "}"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Der", "[", "t", "]"}], "\[Rule]", " ", 
              RowBox[{"\[Beta]", " ", "+", " ", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"\[Beta]", "^", "2"}], " ", "+", " ", "\[Gamma]"}], 
                "]"}]}]}], ",", " ", 
             RowBox[{"t", "\[Rule]", "0"}]}], "}"}]}], "/.", 
          RowBox[{
          "LBeyondGR`Private`GetBoyerLindquistDerivativesToSceenCoordsRule", 
           "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"rObs", ",", "\[Theta]Obs", ",", "\[Phi]Obs"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], ",", "a"}], "]"}]}], "/.", 
         RowBox[{
         "LBeyondGR`Private`GetBoyerLindquistToSceenCoordsRule", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rObs", ",", "\[Theta]Obs", ",", "\[Phi]Obs"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", "a"}], "]"}]}], "]"}]}]}], 
     "\n", "]"}]}]}]}]], "Code",
 CellChangeTimes->{
  3.760420060589633*^9, {3.760420115702449*^9, 3.760420125292972*^9}, {
   3.760420181040132*^9, 3.7604201987245283`*^9}, {3.7604202352973022`*^9, 
   3.760420313809626*^9}, {3.7604203678646183`*^9, 3.7604203691380663`*^9}, {
   3.7604204507517776`*^9, 3.760420561071247*^9}, {3.76042059432302*^9, 
   3.760420752182231*^9}, 3.760420809480749*^9, {3.760420864382139*^9, 
   3.760420891005486*^9}, {3.760421597099193*^9, 3.760421654554014*^9}, 
   3.760421949886793*^9, {3.760422032976903*^9, 3.7604220370598288`*^9}, {
   3.760422095996846*^9, 3.760422097605731*^9}, {3.779280161981073*^9, 
   3.77928018832543*^9}, {3.7792806912960167`*^9, 3.779280731911043*^9}, {
   3.7792809155223494`*^9, 3.7792809693580008`*^9}, {3.779281345042284*^9, 
   3.779281368286545*^9}, 3.779286906768394*^9, 3.811243995551462*^9, {
   3.8112505794441957`*^9, 3.811250580813683*^9}, {3.811316702655076*^9, 
   3.8113167101848497`*^9}, {3.8113167426800528`*^9, 3.81131681434332*^9}, {
   3.811316861032237*^9, 3.8113168614700003`*^9}, {3.811316924488565*^9, 
   3.811316942761928*^9}, {3.872295602548688*^9, 
   3.872295602550663*^9}},ExpressionUUID->"ac8a9e24-e216-404f-bc49-\
8130e98f6ba7"]
}, Closed]],

Cell[CellGroupData[{

Cell["define Kerr coordinate rules", "Subsection",
 CellChangeTimes->{{3.811317010759397*^9, 
  3.811317015807095*^9}},ExpressionUUID->"82ca8588-a091-42b5-813e-\
6385ea0b3f6f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "this", " ", "is", " ", "to", " ", "transform", " ", "the", " ", 
     "standard", " ", "Boyer"}], "-", 
    RowBox[{"Lindquist", " ", 
     RowBox[{"(", "BL", ")"}], " ", "coordinates", " ", "of", " ", "the", " ",
      "BH", " ", "into", " ", "horizon"}], "-", 
    RowBox[{"penetrating", " ", "spherical", " ", "ingoing", " ", "Kerr", " ", 
     RowBox[{"(", 
      RowBox[{"Kerr", "-", "Schild"}], ")"}], " ", "coordinates"}]}], "*)"}], 
  "\n", 
  RowBox[{"(*", 
   RowBox[{"we", " ", "follow", " ", 
    RowBox[{"Eq", ".", " ", 
     RowBox[{"(", 
      RowBox[{"18", "-", "19"}], ")"}]}], " ", "in", " ", "1811.04711"}], 
   "*)"}], "\n", "\n", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
     RowBox[{"could", " ", "be", " ", "hard"}], "-", 
     RowBox[{
     "coded", " ", "to", " ", "decrease", " ", "computation", " ", 
      "time"}]}]}], "*)"}], "\n", "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"GetKerrToBoyerLindquistCoordsRule", "[", "]"}], " ", ":=", " ", 
     
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[CapitalDelta]", " ", "=", " ", 
         RowBox[{
          RowBox[{"$r", "^", "2"}], " ", "-", " ", 
          RowBox[{"2", " ", "$G0", " ", "$mass", " ", "$r"}], " ", "+", " ", 
          RowBox[{"$spin", "^", "2"}]}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
          "$r", " ", "and", " ", "$\[Theta]", " ", "remain", " ", 
           "untransformed"}], "*)"}], "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"form", " ", "from", " ", "literature"}], "*)"}], "\n", 
         "\t\t", 
         RowBox[{
          RowBox[{"$v", " ", "\[Rule]", " ", 
           RowBox[{"$t", " ", "+", " ", "$r", " ", "+", " ", 
            RowBox[{"$G0", " ", "$mass", " ", 
             RowBox[{
              InterpretationBox[
               StyleBox["Log",
                ShowAutoStyles->False,
                AutoSpacing->False],
               Log,
               Editable->False], "[", 
              FractionBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "$G0", " ", "$mass", " ", "$r"}], 
                "+", 
                SuperscriptBox["$r", "2"], "+", 
                SuperscriptBox["$spin", "2"]}], 
               RowBox[{"4", " ", 
                SuperscriptBox["$G0", "2"], " ", 
                SuperscriptBox["$mass", "2"]}]], "]"}]}], "+", 
            FractionBox[
             RowBox[{
              SuperscriptBox["$G0", "2"], " ", 
              SuperscriptBox["$mass", "2"], " ", 
              RowBox[{
               InterpretationBox[
                StyleBox["Log",
                 ShowAutoStyles->False,
                 AutoSpacing->False],
                Log,
                Editable->False], "[", 
               FractionBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "$G0"}], " ", "$mass"}], "+", "$r", "-", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["$G0", "2"], " ", 
                    SuperscriptBox["$mass", "2"]}], "-", 
                   SuperscriptBox["$spin", "2"]}]]}], 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "$G0"}], " ", "$mass"}], "+", "$r", "+", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    SuperscriptBox["$G0", "2"], " ", 
                    SuperscriptBox["$mass", "2"]}], "-", 
                   SuperscriptBox["$spin", "2"]}]]}]], "]"}]}], 
             SqrtBox[
              RowBox[{
               RowBox[{
                SuperscriptBox["$G0", "2"], " ", 
                SuperscriptBox["$mass", "2"]}], "-", 
               SuperscriptBox["$spin", "2"]}]]]}]}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Der", "[", "$v", "]"}], " ", "\[Rule]", " ", 
           RowBox[{
            RowBox[{"Der", "[", "$t", "]"}], " ", "+", " ", 
            RowBox[{
             FractionBox[
              RowBox[{
               SuperscriptBox["$r", "2"], "+", 
               SuperscriptBox["$spin", "2"]}], 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "$G0", " ", "$mass", " ", "$r"}], 
               "+", 
               SuperscriptBox["$r", "2"], "+", 
               SuperscriptBox["$spin", "2"]}]], 
             RowBox[{"Der", "[", "$r", "]"}]}]}]}], ",", "\n", "\t\t", 
          RowBox[{"$\[Chi]", " ", "\[Rule]", " ", 
           RowBox[{"$\[Phi]", " ", "+", " ", 
            RowBox[{
             FractionBox["$spin", 
              RowBox[{"2", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"$G0", "^", "2"}], 
                  RowBox[{"$mass", "^", "2"}]}], " ", "-", " ", 
                 RowBox[{"$spin", "^", "2"}]}], "]"}]}]], 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"$r", "-", 
                RowBox[{"(", 
                 RowBox[{"$mass", "+", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"$G0", "^", "2"}], 
                    RowBox[{"$mass", "^", "2"}]}], " ", "-", " ", 
                    RowBox[{"$spin", "^", "2"}]}], "]"}]}], ")"}]}], 
               RowBox[{"$r", "-", 
                RowBox[{"(", 
                 RowBox[{"$mass", "-", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"$G0", "^", "2"}], 
                    RowBox[{"$mass", "^", "2"}]}], " ", "-", " ", 
                    RowBox[{"$spin", "^", "2"}]}], "]"}]}], ")"}]}]], 
              "]"}]}]}]}], ",", "\n", "\t\t", 
          RowBox[{
           RowBox[{"Der", "[", "$\[Chi]", "]"}], " ", "\[Rule]", " ", 
           RowBox[{
            RowBox[{"Der", "[", "$\[Phi]", "]"}], " ", "+", " ", 
            RowBox[{
             FractionBox["$spin", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], " ", "$G0", " ", "$mass", " ", "$r"}], 
               "+", 
               SuperscriptBox["$r", "2"], "+", 
               SuperscriptBox["$spin", "2"]}]], 
             RowBox[{"Der", "[", "$r", "]"}]}]}]}]}], "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"self", "-", 
           RowBox[{"determined", " ", "form"}]}], "*)"}], "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"$v", " ", "\[Rule]", " ", 
            RowBox[{"$t", " ", "+", "$r", "+", 
             FractionBox[
              RowBox[{"2", " ", 
               SuperscriptBox["$G0", "2"], " ", 
               SuperscriptBox["$mass", "2"], " ", 
               RowBox[{"ArcTan", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "$G0"}], " ", "$mass"}], "+", "$r"}], 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["$G0", "2"]}], " ", 
                    SuperscriptBox["$mass", "2"]}], "+", 
                   SuperscriptBox["$spin", "2"]}]]], "]"}]}], 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["$G0", "2"]}], " ", 
                 SuperscriptBox["$mass", "2"]}], "+", 
                SuperscriptBox["$spin", "2"]}]]], "+", 
             RowBox[{"$G0", " ", "$mass", " ", 
              RowBox[{"Log", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "$G0", " ", "$mass", " ", "$r"}], 
                "+", 
                SuperscriptBox["$r", "2"], "+", 
                SuperscriptBox["$spin", "2"]}], "]"}]}]}]}], ",", "\n", 
           "\t\t", 
           RowBox[{
            RowBox[{"Der", "[", "$v", "]"}], " ", "\[Rule]", " ", 
            RowBox[{
             RowBox[{"Der", "[", "$t", "]"}], " ", "+", " ", 
             RowBox[{
              FractionBox[
               RowBox[{
                SuperscriptBox["$r", "2"], "+", 
                SuperscriptBox["$spin", "2"]}], 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "$G0", " ", "$mass", " ", "$r"}], 
                "+", 
                SuperscriptBox["$r", "2"], "+", 
                SuperscriptBox["$spin", "2"]}]], 
              RowBox[{"Der", "[", "$r", "]"}]}]}]}], ",", "\n", "\t\t", 
           RowBox[{"$\[Chi]", " ", "\[Rule]", " ", 
            RowBox[{"$\[Phi]", " ", "+", 
             FractionBox[
              RowBox[{"$spin", " ", 
               RowBox[{"ArcTan", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "$G0"}], " ", "$mass"}], "+", "$r"}], 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["$G0", "2"]}], " ", 
                    SuperscriptBox["$mass", "2"]}], "+", 
                   SuperscriptBox["$spin", "2"]}]]], "]"}]}], 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["$G0", "2"]}], " ", 
                 SuperscriptBox["$mass", "2"]}], "+", 
                SuperscriptBox["$spin", "2"]}]]]}]}], ",", "\n", "\t\t", 
           RowBox[{
            RowBox[{"Der", "[", "$\[Chi]", "]"}], " ", "\[Rule]", " ", 
            RowBox[{
             RowBox[{"Der", "[", "$\[Phi]", "]"}], " ", "+", " ", 
             RowBox[{
              FractionBox["$spin", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "$G0", " ", "$mass", " ", "$r"}], 
                "+", 
                SuperscriptBox["$r", "2"], "+", 
                SuperscriptBox["$spin", "2"]}]], 
              RowBox[{"Der", "[", "$r", "]"}]}]}]}]}], "*)"}], "\n", "\t", 
         "}"}], "]"}]}], "\n", "\t", "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GetBoyerLindquistToKerrCoordsRule", "[", "]"}], " ", ":=", " ", 
     
     RowBox[{"Module", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[CapitalDelta]", " ", "=", " ", 
         RowBox[{
          RowBox[{"$r", "^", "2"}], " ", "-", " ", 
          RowBox[{"2", " ", "$G0", " ", "$mass", " ", "$r"}], " ", "+", " ", 
          RowBox[{"$spin", "^", "2"}]}]}], "}"}], ",", "\n", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
          "$r", " ", "and", " ", "$\[Theta]", " ", "remain", " ", 
           "untransformed"}], "*)"}], "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"form", " ", "from", " ", "literature"}], "*)"}], "\n", 
         "\t\t", 
         RowBox[{
          RowBox[{"$t", " ", "\[Rule]", " ", 
           RowBox[{"$v", " ", "-", " ", 
            RowBox[{"(", 
             RowBox[{"$r", "+", 
              RowBox[{"$G0", " ", "$mass", " ", 
               RowBox[{
                InterpretationBox[
                 StyleBox["Log",
                  ShowAutoStyles->False,
                  AutoSpacing->False],
                 Log,
                 Editable->False], "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "$G0", " ", "$mass", " ", "$r"}], 
                  "+", 
                  SuperscriptBox["$r", "2"], "+", 
                  SuperscriptBox["$spin", "2"]}], 
                 RowBox[{"4", " ", 
                  SuperscriptBox["$G0", "2"], " ", 
                  SuperscriptBox["$mass", "2"]}]], "]"}]}], "+", 
              FractionBox[
               RowBox[{
                SuperscriptBox["$G0", "2"], " ", 
                SuperscriptBox["$mass", "2"], " ", 
                RowBox[{
                 InterpretationBox[
                  StyleBox["Log",
                   ShowAutoStyles->False,
                   AutoSpacing->False],
                  Log,
                  Editable->False], "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "$G0"}], " ", "$mass"}], "+", "$r", "-", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["$G0", "2"], " ", 
                    SuperscriptBox["$mass", "2"]}], "-", 
                    SuperscriptBox["$spin", "2"]}]]}], 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "$G0"}], " ", "$mass"}], "+", "$r", "+", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{
                    SuperscriptBox["$G0", "2"], " ", 
                    SuperscriptBox["$mass", "2"]}], "-", 
                    SuperscriptBox["$spin", "2"]}]]}]], "]"}]}], 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  SuperscriptBox["$G0", "2"], " ", 
                  SuperscriptBox["$mass", "2"]}], "-", 
                 SuperscriptBox["$spin", "2"]}]]]}], ")"}]}]}], ",", "\n", 
          "\t\t", 
          RowBox[{"$\[Phi]", " ", "\[Rule]", " ", 
           RowBox[{"$\[Chi]", " ", "-", " ", 
            RowBox[{
             FractionBox["$spin", 
              RowBox[{"2", 
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"$G0", "^", "2"}], 
                  RowBox[{"$mass", "^", "2"}]}], " ", "-", " ", 
                 RowBox[{"$spin", "^", "2"}]}], "]"}]}]], 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"$r", "-", 
                RowBox[{"(", 
                 RowBox[{"$mass", "+", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"$G0", "^", "2"}], 
                    RowBox[{"$mass", "^", "2"}]}], " ", "-", " ", 
                    RowBox[{"$spin", "^", "2"}]}], "]"}]}], ")"}]}], 
               RowBox[{"$r", "-", 
                RowBox[{"(", 
                 RowBox[{"$mass", "-", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"$G0", "^", "2"}], 
                    RowBox[{"$mass", "^", "2"}]}], " ", "-", " ", 
                    RowBox[{"$spin", "^", "2"}]}], "]"}]}], ")"}]}]], 
              "]"}]}]}]}]}], "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"self", "-", 
           RowBox[{"determined", " ", "form"}]}], "*)"}], "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"$t", " ", "\[Rule]", " ", 
            RowBox[{"$v", " ", "-", "$r", "-", 
             FractionBox[
              RowBox[{"2", " ", 
               SuperscriptBox["$G0", "2"], " ", 
               SuperscriptBox["$mass", "2"], " ", 
               RowBox[{"ArcTan", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "$G0"}], " ", "$mass"}], "+", "$r"}], 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["$G0", "2"]}], " ", 
                    SuperscriptBox["$mass", "2"]}], "+", 
                   SuperscriptBox["$spin", "2"]}]]], "]"}]}], 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["$G0", "2"]}], " ", 
                 SuperscriptBox["$mass", "2"]}], "+", 
                SuperscriptBox["$spin", "2"]}]]], "-", 
             RowBox[{"$G0", " ", "$mass", " ", 
              RowBox[{"Log", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], " ", "$G0", " ", "$mass", " ", "$r"}], 
                "+", 
                SuperscriptBox["$r", "2"], "+", 
                SuperscriptBox["$spin", "2"]}], "]"}]}]}]}], ",", "\n", 
           "\t\t", 
           RowBox[{"$\[Phi]", " ", "\[Rule]", " ", 
            RowBox[{"$\[Chi]", " ", "-", 
             FractionBox[
              RowBox[{"$spin", " ", 
               RowBox[{"ArcTan", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "$G0"}], " ", "$mass"}], "+", "$r"}], 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["$G0", "2"]}], " ", 
                    SuperscriptBox["$mass", "2"]}], "+", 
                   SuperscriptBox["$spin", "2"]}]]], "]"}]}], 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["$G0", "2"]}], " ", 
                 SuperscriptBox["$mass", "2"]}], "+", 
                SuperscriptBox["$spin", "2"]}]]]}]}]}], "*)"}], "\n", "\t", 
         "}"}], "]"}]}], "\n", "\t", "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "there", " ", "might", " ", "be", " ", "a", " ", "more", " ", "clever", 
      " ", "choice", " ", "than", " ", "t"}], "=", "0"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"GetKerrInitialValues", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "pos_Symbol", ",", " ", "waveVector_Symbol", ",", " ", 
        "affineParam0_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"rObs_", ",", "\[Theta]Obs_", ",", "\[Phi]Obs_"}], "}"}], ",", 
      
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], ",", "a_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Beta]", ",", " ", "\[Gamma]", ",", " ", 
        RowBox[{"covMetric", " ", "=", " ", 
         RowBox[{"GetMetric", "[", "]"}]}], ",", " ", "xForSum", ",", " ", 
        "kForSum", ",", " ", 
        RowBox[{"\[Delta]", "=", "0"}], ",", " ", 
        RowBox[{"t", "=", "$t"}], ",", " ", 
        RowBox[{"r", "=", "$r"}], ",", " ", 
        RowBox[{"\[Theta]", "=", "$\[Theta]"}], ",", " ", 
        RowBox[{"\[Phi]", "=", "$\[Phi]"}], ",", " ", 
        RowBox[{"v", "=", "$v"}], ",", " ", 
        RowBox[{"\[Chi]", "=", "$\[Chi]"}]}], "}"}], ",", "\n", "\n", "\t", 
      RowBox[{
       RowBox[{"xForSum", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"None", ",", "r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}]}], 
       ";", "\n", "\t", 
       RowBox[{"kForSum", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"Der", "[", "r", "]"}], ",", 
          RowBox[{"Der", "[", "\[Theta]", "]"}], ",", 
          RowBox[{"Der", "[", "\[Phi]", "]"}]}], "}"}]}], ";", "\n", "\t", 
       "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "definitions", " ", "to", " ", "obtain", " ", "initial", " ", 
          "time"}], "-", 
         RowBox[{"component", " ", "derivative"}]}], "*)"}], "\n", "\t", 
       RowBox[{"\[Beta]", " ", "=", " ", 
        RowBox[{"-", " ", 
         FractionBox[
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"covMetric", "[", 
              RowBox[{
               RowBox[{"-", "1"}], ",", 
               RowBox[{"-", "i"}]}], "]"}], "*", 
             RowBox[{"kForSum", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "2", ",", "4"}], "}"}]}], "]"}], 
          RowBox[{"covMetric", "[", 
           RowBox[{
            RowBox[{"-", "1"}], ",", 
            RowBox[{"-", "1"}]}], "]"}]]}]}], ";", "\n", "\t", 
       RowBox[{"\[Gamma]", " ", "=", " ", 
        FractionBox[
         RowBox[{"\[Delta]", " ", "-", " ", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"covMetric", "[", 
              RowBox[{
               RowBox[{"-", "i"}], ",", 
               RowBox[{"-", "j"}]}], "]"}], "*", 
             RowBox[{"kForSum", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "*", 
             RowBox[{"kForSum", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "2", ",", "4"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "2", ",", "4"}], "}"}]}], "]"}]}], 
         RowBox[{"covMetric", "[", 
          RowBox[{
           RowBox[{"-", "1"}], ",", 
           RowBox[{"-", "1"}]}], "]"}]]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"Return", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", "\n", "\t\t", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"pos", "[", "1", "]"}], "[", "affineParam0", "]"}], 
               " ", "\[Equal]", " ", "v"}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"pos", "[", "2", "]"}], "[", "affineParam0", "]"}], 
               " ", "\[Equal]", " ", "r"}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"pos", "[", "3", "]"}], "[", "affineParam0", "]"}], 
               " ", "\[Equal]", " ", "\[Theta]"}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"pos", "[", "4", "]"}], "[", "affineParam0", "]"}], 
               " ", "\[Equal]", " ", "\[Chi]"}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"waveVector", "[", "1", "]"}], "[", "affineParam0", 
                "]"}], " ", "\[Equal]", " ", 
               RowBox[{"\[Beta]", " ", "+", " ", 
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"\[Beta]", "^", "2"}], " ", "+", " ", "\[Gamma]"}], 
                 "]"}]}]}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"waveVector", "[", "2", "]"}], "[", "affineParam0", 
                "]"}], " ", "\[Equal]", " ", 
               RowBox[{"Der", "[", "r", "]"}]}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"waveVector", "[", "3", "]"}], "[", "affineParam0", 
                "]"}], " ", "\[Equal]", " ", 
               RowBox[{"Der", "[", "\[Theta]", "]"}]}], ",", "\n", "\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"waveVector", "[", "4", "]"}], "[", "affineParam0", 
                "]"}], " ", "\[Equal]", " ", 
               RowBox[{"Der", "[", "\[Chi]", "]"}]}]}], "\n", "\t", "}"}], "/.", 
            RowBox[{
            "LBeyondGR`Private`GetKerrToBoyerLindquistCoordsRule", "[", 
             "]"}]}], "/.", 
           RowBox[{"{", 
            RowBox[{"t", "\[Rule]", "0"}], "}"}]}], "/.", 
          RowBox[{
          "LBeyondGR`Private`GetBoyerLindquistDerivativesToSceenCoordsRule", 
           "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"rObs", ",", "\[Theta]Obs", ",", "\[Phi]Obs"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}], ",", "a"}], "]"}]}], "/.", 
         RowBox[{
         "LBeyondGR`Private`GetBoyerLindquistToSceenCoordsRule", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"r", ",", "\[Theta]", ",", "\[Phi]"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rObs", ",", "\[Theta]Obs", ",", "\[Phi]Obs"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "y"}], "}"}], ",", "a"}], "]"}]}], "]"}]}]}], 
     "\n", "]"}]}]}]}]], "Code",
 CellChangeTimes->{
  3.760420060589633*^9, {3.760420115702449*^9, 3.760420125292972*^9}, {
   3.760420181040132*^9, 3.7604201987245283`*^9}, {3.7604202352973022`*^9, 
   3.760420313809626*^9}, {3.7604203678646183`*^9, 3.7604203691380663`*^9}, {
   3.7604204507517776`*^9, 3.760420561071247*^9}, {3.76042059432302*^9, 
   3.760420752182231*^9}, 3.760420809480749*^9, {3.760420864382139*^9, 
   3.760420891005486*^9}, {3.760421597099193*^9, 3.760421654554014*^9}, 
   3.760421949886793*^9, {3.760422032976903*^9, 3.7604220370598288`*^9}, {
   3.760422095996846*^9, 3.760422097605731*^9}, {3.779280161981073*^9, 
   3.77928018832543*^9}, {3.7792806912960167`*^9, 3.779280731911043*^9}, {
   3.7792809155223494`*^9, 3.7792809693580008`*^9}, {3.779281345042284*^9, 
   3.779281368286545*^9}, 3.779286906768394*^9, {3.811243867163438*^9, 
   3.811243905691111*^9}, {3.8112439408276453`*^9, 3.811243983110197*^9}, {
   3.811244022893416*^9, 3.811244032366387*^9}, {3.8112440727912273`*^9, 
   3.811244076719442*^9}, {3.8112441098962793`*^9, 3.81124413771926*^9}, {
   3.8112441704238777`*^9, 3.811244232616623*^9}, {3.811244273940709*^9, 
   3.8112443013218117`*^9}, {3.811244577143551*^9, 3.8112445796396637`*^9}, {
   3.811244622655759*^9, 3.811244671537238*^9}, 3.811245172986884*^9, {
   3.81124520400557*^9, 3.811245239815096*^9}, {3.811245296085711*^9, 
   3.811245305726946*^9}, {3.8112453658305607`*^9, 3.811245427122321*^9}, {
   3.8112463041795893`*^9, 3.811246305739472*^9}, {3.811246432653578*^9, 
   3.811246520740513*^9}, {3.811248701198209*^9, 3.811248727680135*^9}, {
   3.811249377951004*^9, 3.811249418239758*^9}, {3.811249781730497*^9, 
   3.811249783351654*^9}, {3.811249967174179*^9, 3.811249968781177*^9}, {
   3.811253511046977*^9, 3.8112535515326967`*^9}, {3.811253586070023*^9, 
   3.811253588073522*^9}, {3.81125364833119*^9, 3.8112536946044817`*^9}, {
   3.811254429029883*^9, 3.811254435627125*^9}, {3.811254506741282*^9, 
   3.8112545445984697`*^9}, {3.811254628345429*^9, 3.8112546695477533`*^9}, {
   3.81125470738721*^9, 3.811254759321761*^9}, {3.811254826282053*^9, 
   3.8112548425225782`*^9}, {3.811254895166461*^9, 3.811254960632812*^9}, {
   3.811305214447448*^9, 3.811305257971135*^9}, {3.811316659400197*^9, 
   3.811316691876234*^9}, {3.811316964437409*^9, 3.811316973770969*^9}, {
   3.811317453509388*^9, 3.811317522524303*^9}, {3.8113175548849993`*^9, 
   3.8113175722916594`*^9}, {3.811317607181836*^9, 3.8113176110296783`*^9}, 
   3.8113213277080317`*^9, {3.811321496151876*^9, 3.811321498395211*^9}, 
   3.811321732614086*^9, {3.811322764499069*^9, 3.811322772165862*^9}, {
   3.8120100809273863`*^9, 3.81201026735877*^9}, {3.8120103750735483`*^9, 
   3.812010393496214*^9}, {3.8122630704937553`*^9, 3.812263079520999*^9}, {
   3.872295602557493*^9, 
   3.872295602562008*^9}},ExpressionUUID->"438f4348-4a98-4200-8903-\
da2323779d72"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s NDSolve routine to obtain trajectories and lensing bands"
}], "Section",
 CellChangeTimes->{{3.7792874843306723`*^9, 3.779287497368887*^9}, {
  3.872935372825592*^9, 
  3.872935379758932*^9}},ExpressionUUID->"8c068908-f456-4f2b-9e29-\
09342dbd7a6f"],

Cell[CellGroupData[{

Cell["GetSingleLightRay (*could be removed from public part*)", "Subsection",
 CellChangeTimes->{{3.7792860700341053`*^9, 3.779286076247108*^9}, 
   3.8722957520544443`*^9, {3.872295944522955*^9, 3.872295955548121*^9}, {
   3.907304740252619*^9, 
   3.9073047432962427`*^9}},ExpressionUUID->"e148aa6f-5514-4ec2-914b-\
dc3452671ca4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"TODO", ":", " ", 
     RowBox[{"check", " ", "whether", " ", "a"}]}], "=", 
    RowBox[{
    "0", " ", "in", " ", "GetBoyerLindquistInitialValues", " ", "is", " ", 
     "an", " ", "ok", " ", "coordinate", " ", "choice", " ", "for", " ", 
     "any", " ", "metric"}]}], "*)"}], "\n", 
  RowBox[{"(*", 
   RowBox[{"TODO", ":", " ", 
    RowBox[{
    "could", " ", "implement", " ", "check", " ", "that", " ", "metric", " ", 
     "contains", " ", "no", " ", "symbols", " ", "except", " ", "for", " ", 
     "coordinates", " ", "and", " ", "those", " ", "specified", " ", "in", 
     " ", "paramRules"}]}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "GetSingleLightRay", "]"}], " ", ":=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Options", "[", "NDSolve", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"HorizonCondition", "\[Rule]", "False"}], "}"}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "GetSingleLightRayBL", "]"}], " ", ":=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Options", "[", "NDSolve", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"HorizonCondition", "\[Rule]", "False"}], "}"}]}], "]"}]}], 
    ";"}], "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "GetSingleLightRayKerr", "]"}], " ", ":=", " ", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Options", "[", "NDSolve", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"HorizonCondition", "\[Rule]", "False"}], "}"}]}], "]"}]}], 
    ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"GetSingleLightRay", ",", " ", 
      RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"GetSingleLightRayBL", ",", " ", 
      RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"GetSingleLightRayKerr", ",", " ", 
      RowBox[{"WorkingPrecision", "\[Rule]", "20"}]}], "]"}], ";"}], "\n", 
   "\n", 
   RowBox[{
    RowBox[{
     RowBox[{"GetSingleLightRay", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"rCam_", ",", "\[Theta]Cam_", ",", "\[Phi]Cam_"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"xScreen_", ",", "yScreen_"}], "}"}], ",", "paramRules_List", 
       ",", " ", 
       RowBox[{"opts", ":", 
        RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\t", 
       RowBox[{
       "Print", "[", 
        "\"\<Input values of {rCam_,\[Theta]Cam_,\[Phi]Cam_} and/or \
{xScreen_,yScreen_} not recognized as infinite precision numbers. \nPlease \
use rational input only as this improves the employed numerical methods. \n\
You can use Rationalize[input_,precision_]] where precision is the desired \
precision, e.g., 10^-100, to rationalize your numerical input.\>\"", "\n", 
        "\t", "]"}]}], "\n", "]"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"GetSingleLightRay", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rCam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Theta]Cam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Phi]Cam_", "?", "RationalQ"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xScreen_", "?", "RationalQ"}], ",", 
        RowBox[{"yScreen_", "?", "RationalQ"}]}], "}"}], ",", 
      "paramRules_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{"Switch", "[", "\n", "\t\t", 
       RowBox[{"(*", "condition", "*)"}], "\n", "\t\t", 
       RowBox[{"WhichCoords", ",", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{"option", " ", "1"}], "*)"}], "\n", "\t\t", "BoyerLindquist",
         ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"GetSingleLightRayBL", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"xScreen", ",", "yScreen"}], "}"}], ",", "paramRules", 
           ",", " ", "opts"}], "]"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{"option", " ", "2"}], "*)"}], "\n", "\t\t", "Kerr", ",", 
        "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"GetSingleLightRayKerr", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"xScreen", ",", "yScreen"}], "}"}], ",", "paramRules", 
           ",", " ", "opts"}], "]"}], "]"}], ",", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{"default", " ", "other"}], "*)"}], "\n", "\t\t", "_", ",", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<Suitable coordinates not yet set. Please use either \
SetBoyerLindquistCoords[] or SetKerrCoords[] to set the coordinates. Other \
coordinates are not yet supported.\>\"", "]"}], ";", "\n", "\t\t", 
         RowBox[{"Return", "[", "Null", "]"}]}]}], "\t\t", "\n", "\t", 
       "]"}]}], "\n", "]"}]}]}]}]], "Code",
 CellChangeTimes->{{3.7792861070259457`*^9, 3.779286110611876*^9}, {
   3.779286310804563*^9, 3.779286314178377*^9}, {3.779286369760902*^9, 
   3.7792864046919928`*^9}, {3.7792864854800053`*^9, 3.779286529356661*^9}, {
   3.7792866438006153`*^9, 3.779286782285572*^9}, {3.779286974988172*^9, 
   3.779287049072961*^9}, {3.7792870966777697`*^9, 3.779287136205611*^9}, {
   3.7792872109708138`*^9, 3.7792873630325813`*^9}, {3.7792877027889547`*^9, 
   3.779287749964785*^9}, {3.779287813226694*^9, 3.77928785287257*^9}, {
   3.779287900625046*^9, 3.779287901188466*^9}, {3.779288105787228*^9, 
   3.779288119164147*^9}, {3.779288192300836*^9, 3.779288229211392*^9}, 
   3.7792882719653387`*^9, 3.7792888544801407`*^9, {3.77928893217876*^9, 
   3.779288934414097*^9}, {3.779288975252907*^9, 3.779289018607559*^9}, {
   3.779289055360734*^9, 3.779289057079339*^9}, {3.779289349190362*^9, 
   3.779289533472496*^9}, {3.779289574027647*^9, 3.7792896199687357`*^9}, {
   3.7792897881940403`*^9, 3.779289796182816*^9}, {3.779289867248068*^9, 
   3.779289868351954*^9}, {3.779289972192288*^9, 3.7792899760131397`*^9}, {
   3.779290018081846*^9, 3.779290027777256*^9}, {3.7792900777285767`*^9, 
   3.779290082471772*^9}, {3.7792902213482924`*^9, 3.77929027428638*^9}, 
   3.779290333578706*^9, {3.779290391350244*^9, 3.779290439702179*^9}, {
   3.7792905163824663`*^9, 3.77929053278405*^9}, {3.779290583114183*^9, 
   3.779290698688517*^9}, 3.7792907428047533`*^9, {3.779290775261815*^9, 
   3.779290811707424*^9}, {3.779427401506205*^9, 3.779427405680725*^9}, {
   3.779427498876009*^9, 3.7794275047147512`*^9}, {3.779439036099802*^9, 
   3.779439039991008*^9}, {3.7795145266314573`*^9, 3.77951452675163*^9}, {
   3.779515427342874*^9, 3.779515440023245*^9}, {3.79611785766726*^9, 
   3.796117857701445*^9}, {3.796144037900635*^9, 3.796144057001607*^9}, {
   3.7961441467282877`*^9, 3.796144163169611*^9}, {3.7961442463488207`*^9, 
   3.796144251306642*^9}, {3.7961443623132877`*^9, 3.79614437253141*^9}, {
   3.796146322953437*^9, 3.796146323127735*^9}, {3.796146396765353*^9, 
   3.7961464000223923`*^9}, {3.796147828864008*^9, 3.7961478289597197`*^9}, {
   3.796147897023831*^9, 3.796147897082684*^9}, {3.796148051285351*^9, 
   3.79614805331666*^9}, {3.796148310895978*^9, 3.7961483113458633`*^9}, {
   3.797700230535343*^9, 3.7977002311270123`*^9}, {3.7977008175839987`*^9, 
   3.797700817698118*^9}, {3.7977009257933702`*^9, 3.7977009309899387`*^9}, {
   3.797749355240024*^9, 3.797749355313033*^9}, {3.797754141986363*^9, 
   3.7977542075998096`*^9}, {3.797755199416485*^9, 3.797755225627524*^9}, {
   3.7978721279610033`*^9, 3.797872128254849*^9}, {3.7978724636571712`*^9, 
   3.797872472320848*^9}, {3.7978728229099283`*^9, 3.797872823236163*^9}, {
   3.797952054424643*^9, 3.797952088215592*^9}, {3.804567795875079*^9, 
   3.804567808117188*^9}, {3.80457006869761*^9, 3.804570106631714*^9}, {
   3.804570192963544*^9, 3.80457020254522*^9}, {3.8045702388456497`*^9, 
   3.804570269245551*^9}, {3.804570338771515*^9, 3.804570370183777*^9}, 
   3.8045704202453814`*^9, {3.804571238813974*^9, 3.804571483230579*^9}, {
   3.8045715510202312`*^9, 3.804571556049128*^9}, {3.808559558529582*^9, 
   3.808559558646867*^9}, {3.8085595957186193`*^9, 3.808559596270252*^9}, {
   3.808559729249123*^9, 3.8085597322784157`*^9}, {3.808559804892127*^9, 
   3.8085599175276937`*^9}, {3.808560508594569*^9, 3.808560732306959*^9}, {
   3.808566475687881*^9, 3.80856647686771*^9}, 3.80856652411518*^9, {
   3.8085674925505123`*^9, 3.8085674929637547`*^9}, {3.80856868497191*^9, 
   3.808568691006752*^9}, 3.808568722321179*^9, {3.808655204782296*^9, 
   3.808655205919058*^9}, {3.8111707513052483`*^9, 3.811170753838484*^9}, {
   3.8111707849162188`*^9, 3.8111708301582603`*^9}, {3.811171266199429*^9, 
   3.81117127058258*^9}, {3.811171652829363*^9, 3.8111716607902*^9}, {
   3.8112427077331877`*^9, 3.811242836112541*^9}, {3.8112429024885693`*^9, 
   3.811243197108479*^9}, {3.811243373001837*^9, 3.8112434396313353`*^9}, {
   3.811243489217575*^9, 3.81124352477687*^9}, {3.811243588748807*^9, 
   3.8112435977386837`*^9}, {3.811243664589202*^9, 3.811243671307602*^9}, {
   3.81963338855263*^9, 
   3.819633394880972*^9}},ExpressionUUID->"6ddbb78e-24a6-49c4-8f1f-\
1b7642c1cf6c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetSingleLightRayBL", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rCam_", "?", "RationalQ"}], ",", 
       RowBox[{"\[Theta]Cam_", "?", "RationalQ"}], ",", 
       RowBox[{"\[Phi]Cam_", "?", "RationalQ"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xScreen_", "?", "RationalQ"}], ",", 
       RowBox[{"yScreen_", "?", "RationalQ"}]}], "}"}], ",", 
     "paramRules_List", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"return", " ", "=", " ", "None"}], ",", "\n", "\t\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"workingPrecision", " ", "=", " ", 
          RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}]}], ","}], 
        "*)"}], "\n", "\t\t", 
       RowBox[{"inits", " ", "=", " ", 
        RowBox[{
         RowBox[{"GetBoyerLindquistInitialValues", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", " ", "k", ",", " ", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"xScreen", ",", "yScreen"}], "}"}], ",", "$spin"}], "]"}],
          "/.", 
         RowBox[{"Rationalize", "[", 
          RowBox[{"paramRules", ",", 
           RowBox[{"10", "^", 
            RowBox[{"-", "100"}]}]}], "]"}]}]}], ",", " ", "\n", "\t\t", 
       RowBox[{"odes", " ", "=", " ", 
        RowBox[{"Join", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"GetNullGeodesic1stOrderODE", "[", 
            RowBox[{"x", ",", "k", ",", "\[Lambda]"}], "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"$t", "\[Rule]", 
              RowBox[{
               RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
             RowBox[{"$r", "\[Rule]", 
              RowBox[{
               RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
             RowBox[{"$\[Theta]", "\[Rule]", 
              RowBox[{
               RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
             RowBox[{"$\[Phi]", "\[Rule]", 
              RowBox[{
               RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
            "}"}]}], "/.", 
          RowBox[{"Rationalize", "[", 
           RowBox[{"paramRules", ",", 
            RowBox[{"10", "^", 
             RowBox[{"-", "100"}]}]}], "]"}]}], "\n", "\t\t", "]"}]}], ",", 
       " ", "\n", "\t\t", 
       RowBox[{"\[Lambda]Max", "=", " ", 
        RowBox[{"3", "rCam"}]}]}], "\n", "\t", "}"}], ",", "\n", "\t", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"return", " ", "=", " ", 
       RowBox[{"(*", 
        RowBox[{"Check", "["}], "*)"}], "\n", "\t\t", 
       RowBox[{"Catch", "[", 
        RowBox[{"NDSolve", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"odes", ",", " ", "inits"}], "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"k", "[", "1", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"k", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"k", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"k", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]", ",", "0", ",", "\[Lambda]Max"}], "}"}], ",", 
          "\n", "\t\t\t", 
          RowBox[{"Method", " ", "\[Rule]", " ", 
           RowBox[{"{", "\n", "\t\t\t\t", 
            RowBox[{"\"\<EventLocator\>\"", ",", " ", "\n", "\t\t\t\t", 
             RowBox[{"\"\<Event\>\"", " ", "\[Rule]", " ", 
              RowBox[{"{", "\n", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ">", 
                 
                 RowBox[{"rCam", "*", 
                  RowBox[{"11", "/", "10"}]}]}], ",", "\n", "\t\t\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"TrueQ", "[", 
                   RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], 
                   "]"}], ",", "\n", "\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"GetMetric", "[", 
                    RowBox[{"2", ",", "2"}], "]"}]}], "/.", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"paramRules", ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "]"}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$t", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Phi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "}"}]}], ")"}], ">", 
                   RowBox[{"10", "^", "2"}]}], 
                  RowBox[{"(*", 
                   RowBox[{"(", 
                    FractionBox["workingPrecision", "10"], ")"}], "*)"}], ",",
                   "\n", "\t\t\t\t\t\t", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}], 
                    ")"}], "/.", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"paramRules", ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$t", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Phi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "}"}]}], ")"}]}], "\n", "\t\t\t\t\t", "]"}]}], "\n", 
               "\t\t\t\t", "}"}]}], ",", " ", "\n", "\t\t\t\t", 
             RowBox[{"\"\<EventAction\>\"", " ", "\[RuleDelayed]", " ", 
              RowBox[{"{", "\n", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "\"\<trajectory escapes: at \[Lambda]=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"\[Lambda]", ",", "5"}], "]"}], "]"}], "<>", 
                    "\"\< the radial coordinate has surpassed the radial \
camera distance\>\""}], "]"}], ";", " ", "\n", "\t\t\t\t\t", 
                  RowBox[{"Throw", "[", 
                   RowBox[{"Null", ",", "\"\<StopIntegration\>\""}], "]"}]}], 
                 ")"}], "\n", "\t\t\t\t\t", ",", "\n", "\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", "\n", "\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"TrueQ", "[", 
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], 
                    "]"}], "\n", "\t\t\t\t\t\t", ",", "\n", "\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<trajectory fell into Killing horizon: at \
\[Lambda]=\>\"", ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"\[Lambda]", ",", "5"}], "]"}], ",", 
                    "\"\< the 1/\!\(\*SuperscriptBox[\(g\), \(rr\)]\) has \
surpassed 10^\>\"", ",", "2", 
                    RowBox[{"(*", 
                    RowBox[{"N", "[", 
                    FractionBox["workingPrecision", "10"], "]"}], "*)"}], 
                    ",", "\"\< (chosen at rather random value). \n\t\t\t\t\t\t\
If the event and Killing horizon differ, the user may pass on a \
horizon-condition $r($\[Theta]) via the option HorizonCondition->___.\n\t\t\t\
\t\t\tAlso, note that very extreme spacetimes may have FALSELY been \
interpreted as a Killing horizon.\n\t\t\t\t\t\tSimilarly, if the MaxStepSize \
is too large horizons may have not been detected.\>\""}], "]"}], ";"}], " ", 
                   "\n", "\t\t\t\t\t\t", ",", "\n", "\t\t\t\t\t\t", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<trajectory fell into user defined horizon condition: \
at \[Lambda]=\>\"", ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"\[Lambda]", ",", "5"}], "]"}], ",", 
                    "\"\<. Note that if the MaxStepSize is too large horizons \
may have not been detected. If in doubt, please check decreased MaxStepSize \
and ensure convergence.\>\""}], "]"}]}], "\n", "\t\t\t\t\t", "]"}], ";", "\n",
                  "\t\t\t\t\t", 
                 RowBox[{"Throw", "[", 
                  RowBox[{"Null", ",", "\"\<StopIntegration\>\""}], "]"}]}]}],
                "\n", "\t\t\t\t", "}"}]}]}], "\n", "\t\t\t", "}"}]}], ",", 
          "\n", "\t\t\t", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"{", "opts", "}"}], ",", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"optName_", ",", "optVal_"}], "]"}], "/;", 
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Options", "[", "NDSolve", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "optName"}], 
                "]"}]}]}], "]"}], "]"}]}]}], 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"WorkingPrecision", "\[Rule]", "workingPrecision"}], ",", 
           " ", 
           RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "*)"}], "\n", "\t\t",
          "]"}], "]"}]}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{",", "\n", "\t\t", "None"}], "\n", "\t", "]"}], "*)"}], ";", 
      "\n", "\t", 
      RowBox[{"Return", "@", "return"}], ";"}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.811242781772443*^9, 3.811242787486335*^9}, {
   3.811246150005961*^9, 3.8112461640515747`*^9}, {3.8112463237097*^9, 
   3.81124632566973*^9}, {3.811246801244444*^9, 3.811246831973741*^9}, 
   3.8112468683849487`*^9, {3.811248961814536*^9, 3.81124897418289*^9}, {
   3.8113217773814096`*^9, 3.811321778404992*^9}, {3.811321870113841*^9, 
   3.811321874412033*^9}, 3.811322004410767*^9, {3.811322143781279*^9, 
   3.811322147071867*^9}, {3.812014439039405*^9, 3.812014448331991*^9}, {
   3.812014497110386*^9, 3.812014511031086*^9}, {3.812014604663294*^9, 
   3.8120146053694897`*^9}, {3.812016367044675*^9, 3.8120163671726637`*^9}, {
   3.812016456588681*^9, 3.812016457087833*^9}, 3.812016561936966*^9, {
   3.819445442147438*^9, 3.81944549062615*^9}, {3.819650025996196*^9, 
   3.8196500331465273`*^9}, {3.8196500941494102`*^9, 3.819650100986086*^9}, {
   3.819650349216599*^9, 3.819650350144067*^9}, {3.8196505264380703`*^9, 
   3.819650533473382*^9}, {3.8196506614799557`*^9, 3.81965067169071*^9}, 
   3.819651086118328*^9, {3.81965208034859*^9, 3.819652080414714*^9}, {
   3.819717679732692*^9, 3.8197177245020237`*^9}, {3.819717760614078*^9, 
   3.819717761991723*^9}, {3.8534145107477303`*^9, 3.853414522628338*^9}, {
   3.853414565402287*^9, 
   3.853414565930637*^9}},ExpressionUUID->"d4149ce8-7f84-411d-8be8-\
232693dd88a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetSingleLightRayKerr", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rCam_", "?", "RationalQ"}], ",", 
       RowBox[{"\[Theta]Cam_", "?", "RationalQ"}], ",", 
       RowBox[{"\[Phi]Cam_", "?", "RationalQ"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xScreen_", "?", "RationalQ"}], ",", 
       RowBox[{"yScreen_", "?", "RationalQ"}]}], "}"}], ",", 
     "paramRules_List", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"return", " ", "=", " ", "None"}], ",", "\n", "\t\t", 
       RowBox[{"inits", " ", "=", " ", 
        RowBox[{
         RowBox[{"GetKerrInitialValues", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x", ",", " ", "k", ",", " ", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{"xScreen", ",", "yScreen"}], "}"}], ",", "$spin"}], "]"}],
          "/.", 
         RowBox[{"Rationalize", "[", 
          RowBox[{"paramRules", ",", 
           RowBox[{"10", "^", 
            RowBox[{"-", "100"}]}]}], "]"}]}]}], ",", " ", "\n", "\t\t", 
       RowBox[{"odes", " ", "=", " ", 
        RowBox[{"Join", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"GetNullGeodesic1stOrderODE", "[", 
            RowBox[{"x", ",", "k", ",", "\[Lambda]"}], "]"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"$v", "\[Rule]", 
              RowBox[{
               RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
             RowBox[{"$r", "\[Rule]", 
              RowBox[{
               RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
             RowBox[{"$\[Theta]", "\[Rule]", 
              RowBox[{
               RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
             RowBox[{"$\[Chi]", "\[Rule]", 
              RowBox[{
               RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
            "}"}]}], "/.", 
          RowBox[{"Rationalize", "[", 
           RowBox[{"paramRules", ",", 
            RowBox[{"10", "^", 
             RowBox[{"-", "100"}]}]}], "]"}]}], "\n", "\t\t", "]"}]}], ",", 
       " ", "\n", "\t\t", 
       RowBox[{"\[Lambda]Max", "=", " ", 
        RowBox[{"3", "rCam"}]}]}], "\n", "\t", "}"}], ",", "\n", "\t", "\n", 
     "\t", 
     RowBox[{
      RowBox[{"return", " ", "=", " ", 
       RowBox[{"(*", 
        RowBox[{"Check", "["}], "*)"}], "\n", "\t\t", 
       RowBox[{"Catch", "[", 
        RowBox[{"NDSolve", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Join", "[", 
           RowBox[{"odes", ",", " ", "inits"}], "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"k", "[", "1", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"k", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"k", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
            RowBox[{
             RowBox[{"k", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], "}"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]", ",", "0", ",", "\[Lambda]Max"}], "}"}], ",", 
          "\n", "\t\t\t", 
          RowBox[{"Method", " ", "\[Rule]", " ", 
           RowBox[{"{", "\n", "\t\t\t\t", 
            RowBox[{"\"\<EventLocator\>\"", ",", " ", "\n", "\t\t\t\t", 
             RowBox[{"\"\<Event\>\"", " ", "\[Rule]", " ", 
              RowBox[{"{", "\n", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ">", 
                 
                 RowBox[{"rCam", "*", 
                  RowBox[{"11", "/", "10"}]}]}], ",", "\n", "\t\t\t\t\t", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"TrueQ", "[", 
                   RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], 
                   "]"}], ",", "\n", "\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{"Abs", "[", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"GetMetric", "[", 
                    RowBox[{"2", ",", "2"}], "]"}]}], "/.", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"paramRules", ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "]"}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$v", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Chi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "}"}]}], ")"}], ">", 
                   RowBox[{"10", "^", "2"}]}], 
                  RowBox[{"(*", 
                   RowBox[{"(", 
                    FractionBox["workingPrecision", "10"], ")"}], "*)"}], ",",
                   "\n", "\t\t\t\t\t\t", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}], 
                    ")"}], "/.", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"paramRules", ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$v", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Chi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "}"}]}], ")"}]}], "\n", "\t\t\t\t\t", "]"}]}], "\n", 
               "\t\t\t\t", "}"}]}], ",", " ", "\n", "\t\t\t\t", 
             RowBox[{"\"\<EventAction\>\"", " ", "\[RuleDelayed]", " ", 
              RowBox[{"{", "\n", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"Print", "[", 
                   RowBox[{
                   "\"\<trajectory escapes: at \[Lambda]=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"\[Lambda]", ",", "5"}], "]"}], "]"}], "<>", 
                    "\"\< the radial coordinate has surpassed the radial \
camera distance\>\""}], "]"}], ";", " ", "\n", "\t\t\t\t\t", 
                  RowBox[{"Throw", "[", 
                   RowBox[{"Null", ",", "\"\<StopIntegration\>\""}], "]"}]}], 
                 ")"}], "\n", "\t\t\t\t\t", ",", "\n", "\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"If", "[", "\n", "\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"TrueQ", "[", 
                    RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], 
                    "]"}], "\n", "\t\t\t\t\t\t", ",", "\n", "\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<trajectory fell into Killing horizon: at \
\[Lambda]=\>\"", ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"\[Lambda]", ",", "5"}], "]"}], ",", 
                    "\"\< the 1/\!\(\*SuperscriptBox[\(g\), \(rr\)]\) has \
surpassed 10^\>\"", ",", "2", 
                    RowBox[{"(*", 
                    RowBox[{"N", "[", 
                    FractionBox["workingPrecision", "10"], "]"}], "*)"}], 
                    ",", "\"\< (chosen at rather random value). \n\t\t\t\t\t\t\
If the event and Killing horizon differ, the user may pass on a \
horizon-condition $r($\[Theta]) via the option HorizonCondition->___.\n\t\t\t\
\t\t\tAlso, note that very extreme spacetimes may have FALSELY been \
interpreted as a Killing horizon.\n\t\t\t\t\t\tSimilarly, if the MaxStepSize \
is too large horizons may have not been detected.\>\""}], "]"}], ";"}], " ", 
                   "\n", "\t\t\t\t\t\t", ",", "\n", "\t\t\t\t\t\t", 
                   RowBox[{"Print", "[", 
                    RowBox[{
                    "\"\<trajectory fell into user defined horizon condition: \
at \[Lambda]=\>\"", ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"\[Lambda]", ",", "5"}], "]"}], ",", 
                    "\"\<. Note that if the MaxStepSize is too large horizons \
may have not been detected. If in doubt, please check decreased MaxStepSize \
and ensure convergence.\>\""}], "]"}]}], "\n", "\t\t\t\t\t", "]"}], ";", "\n",
                  "\t\t\t\t\t", 
                 RowBox[{"Throw", "[", 
                  RowBox[{"Null", ",", "\"\<StopIntegration\>\""}], "]"}]}]}],
                "\n", "\t\t\t\t", "}"}]}]}], "\n", "\t\t\t", "}"}]}], ",", 
          "\n", "\t\t\t", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"{", "opts", "}"}], ",", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"optName_", ",", "optVal_"}], "]"}], "/;", 
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Options", "[", "NDSolve", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "optName"}], 
                "]"}]}]}], "]"}], "]"}]}]}], 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"MaxStepSize", "\[Rule]", "1*^-2"}], ",", " ", 
           RowBox[{"MaxSteps", "\[Rule]", "1000000"}]}], "*)"}], "\n", "\t\t",
          "]"}], "]"}]}], 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{",", "\n", "\t\t", "None"}], "\n", "\t", "]"}], "*)"}], ";", 
      "\n", "\t", 
      RowBox[{"Return", "@", "return"}], ";"}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.811243220511651*^9, 3.811243238803875*^9}, {
   3.811243612321782*^9, 3.81124362582587*^9}, {3.811246542859982*^9, 
   3.811246551206018*^9}, {3.811246599790957*^9, 3.8112466034144287`*^9}, {
   3.8112468384679813`*^9, 3.8112468403403397`*^9}, 3.811246879800641*^9, {
   3.811248940494213*^9, 3.8112489538641853`*^9}, {3.8113217846696253`*^9, 
   3.8113217993263702`*^9}, {3.8113218802259293`*^9, 3.811321883708218*^9}, {
   3.8113220595470533`*^9, 3.8113220798220778`*^9}, {3.811322134061405*^9, 
   3.8113221387276783`*^9}, {3.812016566015325*^9, 3.812016569510213*^9}, {
   3.8120182249439793`*^9, 3.812018225064212*^9}, 3.812019218549193*^9, {
   3.818912244220147*^9, 3.818912375712989*^9}, {3.8194394438689127`*^9, 
   3.819439460407794*^9}, {3.819439565835413*^9, 3.8194395683738956`*^9}, {
   3.8194396288706703`*^9, 3.819439664892231*^9}, 3.819439855488998*^9, {
   3.8194399019355383`*^9, 3.819439904946129*^9}, {3.81943999254438*^9, 
   3.819439997792186*^9}, {3.81944029934295*^9, 3.8194402994392757`*^9}, {
   3.819440369119047*^9, 3.819440400777129*^9}, 3.819440440105249*^9, {
   3.819440513822402*^9, 3.819440553787685*^9}, {3.819440668568556*^9, 
   3.8194406991125813`*^9}, {3.819440744739683*^9, 3.8194407748757143`*^9}, {
   3.819440890023161*^9, 3.819440900453109*^9}, {3.819441019270093*^9, 
   3.8194410276065493`*^9}, 3.819441174020059*^9, {3.819441386209837*^9, 
   3.819441425954102*^9}, {3.819476976109548*^9, 3.819476976186627*^9}, {
   3.819633554605693*^9, 3.819633655604856*^9}, {3.8196465089810038`*^9, 
   3.819646683246389*^9}, {3.819646773146585*^9, 3.819646783176256*^9}, {
   3.819646847580925*^9, 3.819647075620536*^9}, 3.81965033812006*^9, 
   3.819650685694874*^9, {3.8196508342602043`*^9, 3.8196508502942133`*^9}, {
   3.8196509031245213`*^9, 3.8196509157753973`*^9}, {3.8196509681530037`*^9, 
   3.819650972872119*^9}, {3.819651009090054*^9, 3.819651025551753*^9}, {
   3.8196510733866777`*^9, 3.819651075037464*^9}, {3.81965206534407*^9, 
   3.819652069300321*^9}, {3.819695805194529*^9, 3.81969580744942*^9}, {
   3.847531105980032*^9, 3.847531122400882*^9}, 3.847531750788938*^9, {
   3.84753209941779*^9, 3.8475321021066647`*^9}, {3.853414577047349*^9, 
   3.853414578251245*^9}, 3.853414616762488*^9, 
   3.8534151980790987`*^9},ExpressionUUID->"1cdb77bb-ebb3-452f-bcd0-\
0e0681beb89d"]
}, Closed]],

Cell[CellGroupData[{

Cell["PlotSingleTrajectory (*could be removed from public part*)", \
"Subsection",
 CellChangeTimes->{
  3.811242211289876*^9, {3.872295967443762*^9, 3.872295967794956*^9}, {
   3.907304746468689*^9, 
   3.907304750085648*^9}},ExpressionUUID->"95513782-c6f1-4db8-b0f2-\
61badf0735fc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"TrajectoryQ", "[", "___", "]"}], " ", ":=", " ", "False"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TrajectoryQ", "[", 
     RowBox[{"{", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"InterpolatingFunction", "[", "___", "]"}], "[", "\[Lambda]",
          "]"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"InterpolatingFunction", "[", "___", "]"}], "[", "\[Lambda]",
          "]"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"InterpolatingFunction", "[", "___", "]"}], "[", "\[Lambda]",
          "]"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"InterpolatingFunction", "[", "___", "]"}], "[", "\[Lambda]",
          "]"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "1", "]"}], "[", "\[Lambda]", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"InterpolatingFunction", "[", "___", "]"}], "[", "\[Lambda]",
          "]"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "2", "]"}], "[", "\[Lambda]", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"InterpolatingFunction", "[", "___", "]"}], "[", "\[Lambda]",
          "]"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "3", "]"}], "[", "\[Lambda]", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"InterpolatingFunction", "[", "___", "]"}], "[", "\[Lambda]",
          "]"}]}], ",", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{
         RowBox[{"k", "[", "4", "]"}], "[", "\[Lambda]", "]"}], "\[Rule]", 
        RowBox[{
         RowBox[{"InterpolatingFunction", "[", "___", "]"}], "[", "\[Lambda]",
          "]"}]}]}], "\[IndentingNewLine]", "}"}], "]"}], " ", ":=", " ", 
    "True"}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "PlotSingleTrajectory", "]"}], " ", ":=", " ", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"Options", "[", "ParametricPlot3D", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"PlotHorizon", "\[Rule]", "False"}], "}"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotSingleTrajectory", "[", 
     RowBox[{
      RowBox[{"sol_", "?", "TrajectoryQ"}], ",", " ", "paramRules_List", ",", 
      " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
       "plot", ",", "\n", "\t\t", "plotRangeVal", ",", "\n", "\t\t", 
        "horizonCondition", ",", "\n", "\t\t", "xCartesian", ",", 
        "yCartesian", ",", "zCartesian"}], "\n", "\t", "}"}], ",", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
       "determine", " ", "a", " ", "useful", " ", "plot", " ", "range", " ", 
        "unless", " ", "user", " ", "has", " ", "passed", " ", "their", " ", 
        "own"}], "*)"}], "\n", "\t", 
      RowBox[{
       RowBox[{"If", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "PlotRange", "]"}], "===", 
          "Automatic"}], "\n", "\t\t", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<plot range obtained by doubling the radial distance at which \
angular coordinate \[Theta] changes most rapidly: use PlotRange option to set \
own plot range.\>\"", "]"}], ";", "\n", "\t\t", 
          RowBox[{"plotRangeVal", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], "/.", 
             "sol"}], "/.", 
            RowBox[{"Last", "[", 
             RowBox[{"Check", "[", 
              RowBox[{
               RowBox[{"NMaximize", "[", 
                RowBox[{
                 RowBox[{"Evaluate", "[", 
                  RowBox[{"D", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], "/.",
                     "sol"}], ",", "\[Lambda]"}], "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Lambda]", ",", 
                   RowBox[{
                    RowBox[{"Head", "[", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "2"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{
                    RowBox[{"Head", "[", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "2"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], 
                  "}"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"None", ",", 
                 RowBox[{"{", 
                  RowBox[{"\[Lambda]", "->", 
                   RowBox[{
                    RowBox[{"Head", "[", 
                    RowBox[{"sol", "[", 
                    RowBox[{"[", 
                    RowBox[{"3", ",", "2"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], 
                  "}"}]}], "}"}]}], "]"}], "]"}]}]}], ";", "\n", "\t\t", 
          RowBox[{"plotRangeVal", " ", "=", " ", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "}"}], 
             "plotRangeVal"}], "]"}]}], ";"}], "\n", "\t\t", ",", "\n", 
         "\t\t", 
         RowBox[{
          RowBox[{"plotRangeVal", " ", "=", " ", 
           RowBox[{"OptionValue", "[", "PlotRange", "]"}]}], ";"}]}], "\n", 
        "\t", "]"}], ";", "\n", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
        "create", " ", "main", " ", "plot", " ", "of", " ", "trajectory"}], 
        "*)"}], "\n", "\t", 
       RowBox[{"plot", " ", "=", " ", 
        RowBox[{"ParametricPlot3D", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"ConvertBoyerLindquistToCartesian", "[", 
               RowBox[{"{", 
                RowBox[{"$r", ",", "$\[Theta]", ",", "$\[Phi]"}], "}"}], 
               "]"}], "//.", 
              RowBox[{"Switch", "[", "\n", "\t\t\t\t", 
               RowBox[{
               "WhichCoords", ",", "\n", "\t\t\t\t", "BoyerLindquist", ",", 
                " ", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"$t", "\[Rule]", 
                   RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                  ",", 
                  RowBox[{"$r", "\[Rule]", 
                   RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                  ",", 
                  RowBox[{"$\[Theta]", "\[Rule]", 
                   RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                  ",", 
                  RowBox[{"$\[Phi]", "\[Rule]", 
                   RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                  "}"}], ",", "\n", "\t\t\t\t", "Kerr", ",", " ", 
                RowBox[{"Join", "[", 
                 RowBox[{
                  RowBox[{"GetBoyerLindquistToKerrCoordsRule", "[", "]"}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"$v", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Chi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                    "}"}]}], "]"}], ",", "\n", "\t\t\t\t", "_", ",", 
                RowBox[{
                 RowBox[{
                 "Print", "[", 
                  "\"\<Suitable coordinates not yet set. Please use either \
SetBoyerLindquistCoords[] or SetKerrCoords[] to set the coordinates. Other \
coordinates are not yet supported.\>\"", "]"}], ";", 
                 RowBox[{"Break", "[", "]"}], ";"}]}], "\n", "\t\t\t", 
               "]"}]}], "/.", "paramRules"}], "/.", "sol"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]", ",", "0", ",", 
            RowBox[{
             RowBox[{"Head", "[", 
              RowBox[{"sol", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", 
                 RowBox[{"-", "1"}]}], "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1", ",", 
               RowBox[{"-", "1"}]}], "]"}], "]"}]}], "}"}], ",", "\n", "\t\t",
           "opts", ",", "\n", "\t\t", 
          RowBox[{"PlotRange", "\[Rule]", "plotRangeVal"}], ",", "\n", "\t\t", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Red"}], "}"}]}], ",", " ", 
          RowBox[{"PlotPoints", "\[Rule]", "5000"}], ",", "\n", "\t\t", 
          RowBox[{"AxesLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<x\>\"", ",", " ", "\"\<y\>\"", ",", " ", "\"\<z\>\""}], 
            "}"}]}], ",", " ", 
          RowBox[{"LabelStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "16", ",", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], 
            "}"}]}], ",", " ", 
          RowBox[{"BoxStyle", "\[Rule]", 
           RowBox[{"Directive", "[", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "Thick"}], "}"}], "]"}]}]}], "\n", "\t", 
         "]"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"(*", 
        RowBox[{
        "plot", " ", "horizon", " ", "if", " ", "user", " ", "wants", " ", 
         "to"}], "*)"}], "\n", "\t", 
       RowBox[{"Switch", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"OptionValue", "[", "PlotHorizon", "]"}], "\n", "\t\t", ",", 
         "\n", "\t\t", "False", "\n", "\t\t", ",", "\n", "\t\t", 
         RowBox[{"None", ";"}], "\n", "\t\t", ",", "\n", "\t\t", 
         "_Graphics3D", "\n", "\t\t", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"plot", " ", "=", " ", 
           RowBox[{"Show", "[", "\n", "\t\t\t", 
            RowBox[{"plot", ",", " ", "\n", "\t\t\t", 
             RowBox[{"OptionValue", "[", "PlotHorizon", "]"}]}], "\n", "\t\t",
             "]"}]}], ";"}], "\n", "\t\t", ",", "\n", "\t\t", "True", "\n", 
         "\t\t", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{
          "PrintTemporary", "[", 
           "\"\<PlotHorizon: horizon is determined numerically using 500 \
points at random angles to approximate a surface solving \
1/\!\(\*SubscriptBox[\(g\), \(tt\)]\)==0 (might not be the generic horizon). \
You can change the number of points via PlotHorizon->numberOfPoints.\>\"", 
           "]"}], ";", "\n", "\t\t", 
          RowBox[{
          "PrintTemporary", "[", 
           "\"\<Alternatively, you can pass the horizon as a Graphics3D \
object, or predetermine the horizon via \
sol=NumericalHorizonSurfacePlot3D[paramRules_List, numberOfPoints_] and pass \
the result via PlotHorizon->sol.\>\"", "]"}], ";", "\n", "\t\t", 
          RowBox[{"plot", " ", "=", " ", 
           RowBox[{"Show", "[", "\n", "\t\t\t", 
            RowBox[{"plot", ",", " ", "\n", "\t\t\t", 
             RowBox[{"LBeyondGR`Private`NumericalHorizonSurfacePlot3D", "[", 
              RowBox[{"paramRules", ",", " ", "500"}], "]"}]}], "\n", "\t\t", 
            "]"}]}], ";"}], "\n", "\t\t", ",", "\n", "\t\t", "_Integer", "\n",
          "\t\t", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"PrintTemporary", "[", 
           RowBox[{
           "\"\<PlotHorizon: horizon is determined numerically using \>\"", "<>", 
            RowBox[{"ToString", "@", 
             RowBox[{"OptionValue", "[", "PlotHorizon", "]"}]}], "<>", 
            "\"\< points at random angles to approximate a surface solving 1/\
\!\(\*SubscriptBox[\(g\), \(tt\)]\)==0 (might not be the generic \
horizon).\>\""}], "]"}], ";", "\n", "\t\t", 
          RowBox[{
          "PrintTemporary", "[", 
           "\"\<Alternatively, you can pass the horizon as a Graphics3D \
object, or predetermine the horizon via \
sol=NumericalHorizonSurfacePlot3D[paramRules_List, numberOfPoints_] and pass \
the result via PlotHorizon->sol.\>\"", "]"}], ";", "\n", "\t\t", 
          RowBox[{"plot", " ", "=", " ", 
           RowBox[{"Show", "[", "\n", "\t\t\t", 
            RowBox[{"plot", ",", " ", "\n", "\t\t\t", 
             RowBox[{"LBeyondGR`Private`NumericalHorizonSurfacePlot3D", "[", 
              RowBox[{"paramRules", ",", " ", 
               RowBox[{"OptionValue", "[", "PlotHorizon", "]"}]}], "]"}]}], 
            "\n", "\t\t", "]"}]}], ";"}], "\n", "\t\t", ",", "\n", "\t\t", 
         "___", "\n", "\t\t", ",", "\n", "\t\t", 
         RowBox[{
         "Print", "[", 
          "\"\<PlotHorizon: no proper option value given. Please use True, \
False, an integer number of numerical horizon plot points, or a Graphics3D \
object\>\"", "]"}]}], "\n", "\t", "]"}], ";", "\n", "\n", "\t", 
       RowBox[{"Return", "@", "plot"}], ";"}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PlotSingleTrajectory", "[", 
     RowBox[{"sol_", ",", " ", "paramRules_List", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\n", "\t", 
      RowBox[{
      "Print", "[", 
       "\"\<Looks like you input value for 'sol' is not a trajectory as \
generated by GetSingleLightRay[].\nPlease use the latter to generate a \
trajectory before attempting to plot.\>\"", "]"}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{"NumericalHorizonSurfacePlot3D", "[", 
   RowBox[{"paramRules_List", ",", " ", "numberOfPoints_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"guess", "  ", "=", " ", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"$\[Theta]", "\[Rule]", 
           RowBox[{"\[Pi]", "/", "2"}]}], ",", 
          RowBox[{"$\[Phi]", "\[Rule]", "\[Pi]"}], ",", 
          RowBox[{"$r", "\[Rule]", 
           RowBox[{"Max", "[", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", "0.01", "}"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"$r", "/.", "#"}], ")"}], "&"}], "/@", 
               RowBox[{"Quiet", "@", 
                RowBox[{"NSolve", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"GetMetric", "[", 
                    RowBox[{"1", ",", "1"}], "]"}]}], "==", "0"}], ")"}], "/.",
                     "paramRules"}], "/.", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$\[Theta]", "->", 
                    RowBox[{"\[Pi]", "/", "2"}]}], ",", 
                    RowBox[{"$\[Phi]", "\[Rule]", 
                    RowBox[{"\[Pi]", "/", "2"}]}]}], "}"}]}], ",", "$r", ",", 
                  "Reals"}], "]"}]}]}]}], "]"}], "]"}]}]}], "}"}], "//", 
        "N"}]}], ",", "\n", "\t\t", "discreteHorizonData", ",", "\n", "\t\t", 
      "return", ",", "\n", "\t\t", 
      RowBox[{"outermostGuess", " ", "=", " ", "100"}], ",", "\n", "\t\t", 
      RowBox[{"r", "=", "$r"}], ",", " ", 
      RowBox[{"\[Theta]", "=", "$\[Theta]"}], ",", " ", 
      RowBox[{"\[Phi]", "=", "$\[Phi]"}], ",", " ", "aaa"}], "\n", "\t", 
     "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"Print", "@", "guess"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"DynamicModule", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", "\n", "\t\t\t", 
        RowBox[{
         RowBox[{"counter", "=", "0"}], ",", "\n", "\t\t\t", 
         RowBox[{"starttime", " ", "=", " ", 
          RowBox[{"AbsoluteTime", "[", "]"}]}]}], "\n", "\t\t", "}"}], ",", 
       "\n", "\t", "\n", "\t\t", 
       RowBox[{
        RowBox[{
        "PrintTemporary", "[", 
         "\"\<determining plot points for numerical horizon ... \>\"", "]"}], 
        ";", "\n", "\t\t", 
        RowBox[{"PrintTemporary", "[", 
         RowBox[{
         "\"\<estimated remaining time for evaluation: \>\"", ",", " ", 
          RowBox[{"Dynamic", "[", 
           RowBox[{"DateDifference", "[", 
            RowBox[{
             RowBox[{"DateList", "[", "starttime", "]"}], ",", 
             RowBox[{"DateList", "[", 
              RowBox[{"starttime", "+", 
               RowBox[{"(", 
                RowBox[{
                 FractionBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"AbsoluteTime", "[", "]"}], " ", "-", " ", 
                    "starttime"}], ")"}], "counter"], "*", 
                 RowBox[{"(", 
                  RowBox[{"numberOfPoints", " ", "-", " ", "counter"}], 
                  ")"}]}], ")"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Day\>\"", ",", "\"\<Hour\>\"", ",", "\"\<Minute\>\"", ",", 
               "\"\<Second\>\""}], "}"}]}], "]"}], "]"}]}], "]"}], ";", "\n", 
        "\n", "\t\t", 
        RowBox[{"discreteHorizonData", " ", "=", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"Join", "[", 
            RowBox[{"#", ",", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"counter", "=", 
               RowBox[{"counter", "+", "1"}]}], ";", "\n", "\t\t\t\t", 
              RowBox[{"FindRoot", "[", "\n", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{"Evaluate", "[", 
                 RowBox[{
                  RowBox[{"Simplify", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"1", "/", 
                    RowBox[{"GetMetric", "[", 
                    RowBox[{"1", ",", "1"}], "]"}]}], "/.", "paramRules"}], "/.", 
                    RowBox[{"$r", "\[Rule]", "aaa"}]}], "]"}], "/.", "#"}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"aaa", ",", 
                  RowBox[{"guess", "[", 
                   RowBox[{"[", 
                    RowBox[{"3", ",", "2"}], "]"}], "]"}], ",", 
                  "outermostGuess"}], "}"}]}], "\n", "\t\t\t\t", "]"}]}]}], 
            "\n", "\t\t\t", "]"}], "&"}], "/@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Theta]", "\[Rule]", 
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"0", ",", "\[Pi]"}], "}"}], "]"}]}], ",", " ", 
              RowBox[{"\[Phi]", "\[Rule]", 
               RowBox[{"RandomReal", "[", 
                RowBox[{"{", 
                 RowBox[{"0", ",", 
                  RowBox[{"2", "\[Pi]"}]}], "}"}], "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"count", ",", "numberOfPoints"}], "}"}]}], "]"}]}]}], 
        ";"}]}], "\n", "\t", "]"}], ";", "\n", "\n", "\t", 
     RowBox[{"discreteHorizonData", " ", "=", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"aaa", "*", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"aaa", "*", 
             RowBox[{"Sin", "[", "\[Theta]", "]"}], 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
            RowBox[{"aaa", "*", 
             RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], "}"}], "/.", "#"}], 
         ")"}], "&"}], "/@", "discreteHorizonData"}]}], ";", "\n", "\t", "\n",
      "\t", 
     RowBox[{"return", " ", "=", " ", 
      RowBox[{"ListSurfacePlot3D", "[", 
       RowBox[{"discreteHorizonData", ",", " ", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"Directive", "[", "Black", "]"}]}]}], "]"}]}], ";", "\n", 
     "\t", 
     RowBox[{"Return", "@", "return"}], ";"}]}], "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.759744101264596*^9, 3.759744109021751*^9}, {
   3.759744267094967*^9, 3.7597444262509193`*^9}, 3.759744659655658*^9, {
   3.759744695719781*^9, 3.7597447088531*^9}, {3.759744940009554*^9, 
   3.7597449460724287`*^9}, 3.759745059552495*^9, {3.759745106987706*^9, 
   3.759745140195506*^9}, {3.759745186716322*^9, 3.759745209837511*^9}, {
   3.759745259977487*^9, 3.75974526374895*^9}, {3.759745353968231*^9, 
   3.759745451043634*^9}, {3.759745500655208*^9, 3.759745508262939*^9}, 
   3.75974576034006*^9, {3.7597458127936993`*^9, 3.759745862382462*^9}, {
   3.75974590375031*^9, 3.759745903987946*^9}, {3.759745954644106*^9, 
   3.759745955721263*^9}, {3.760427320520371*^9, 3.760427385040226*^9}, {
   3.760427446509407*^9, 3.760427454295616*^9}, {3.760427484706399*^9, 
   3.760427741852337*^9}, {3.760427780674172*^9, 3.7604278190229073`*^9}, {
   3.760427974643867*^9, 3.760428106270808*^9}, {3.760428142107361*^9, 
   3.760428292624468*^9}, {3.760428338834928*^9, 3.760428400040382*^9}, {
   3.7604285769446697`*^9, 3.760428613041987*^9}, {3.760439023499901*^9, 
   3.760439250508668*^9}, {3.760439327749177*^9, 3.760439383323697*^9}, {
   3.7604398334699697`*^9, 3.760439839568098*^9}, {3.760440234261757*^9, 
   3.760440480178734*^9}, {3.7604420364493303`*^9, 3.7604421006523046`*^9}, {
   3.779288391660858*^9, 3.779288473498417*^9}, {3.7792885317737627`*^9, 
   3.779288605192141*^9}, {3.779288642744487*^9, 3.779288644548414*^9}, {
   3.779288961050674*^9, 3.779288961409335*^9}, {3.7792895884896097`*^9, 
   3.779289591240315*^9}, 3.779290475533759*^9, {3.779290554904663*^9, 
   3.779290555074301*^9}, {3.779290849758795*^9, 3.779290849986067*^9}, 
   3.779368731106758*^9, {3.7793687680277576`*^9, 3.779368848792696*^9}, {
   3.779369153728345*^9, 3.779369273868162*^9}, {3.7793694292730083`*^9, 
   3.779369436047365*^9}, 3.7793695091847258`*^9, {3.779369623846203*^9, 
   3.7793696514069366`*^9}, {3.779369683086999*^9, 3.7793697839270277`*^9}, {
   3.779369843652112*^9, 3.779370075903488*^9}, {3.7793701202688227`*^9, 
   3.779370154021222*^9}, {3.779370274606264*^9, 3.7793702834078007`*^9}, 
   3.77937034359875*^9, {3.779370429784585*^9, 3.779370475793282*^9}, {
   3.779370535702813*^9, 3.7793705931568832`*^9}, {3.77937077419071*^9, 
   3.7793707807527943`*^9}, {3.7793712775418787`*^9, 3.7793712796008463`*^9}, 
   3.7793731168286543`*^9, {3.779374694399295*^9, 3.7793748231457577`*^9}, {
   3.779375058855494*^9, 3.7793750643924503`*^9}, {3.779375396372168*^9, 
   3.779375460313096*^9}, {3.7793755007536*^9, 3.779375681485063*^9}, 
   3.779375736901847*^9, {3.779375789657154*^9, 3.779375830359783*^9}, 
   3.7793758802834253`*^9, {3.779375915764032*^9, 3.779375983192946*^9}, {
   3.779376035700231*^9, 3.7793760546020737`*^9}, {3.7793760956648912`*^9, 
   3.7793761314977293`*^9}, {3.7793761985183477`*^9, 3.779376199254426*^9}, {
   3.779376250817072*^9, 3.779376252574012*^9}, {3.7793762979043617`*^9, 
   3.779376304954384*^9}, {3.779376354447267*^9, 3.779376354604063*^9}, {
   3.779376386978204*^9, 3.779376393170664*^9}, 3.7794390438114843`*^9, {
   3.779439181057022*^9, 3.779439194500341*^9}, {3.779439681504156*^9, 
   3.7794397283444023`*^9}, {3.7795151246950207`*^9, 3.779515133345016*^9}, {
   3.77953281141479*^9, 3.779533059677617*^9}, {3.779533252033264*^9, 
   3.779533344783854*^9}, {3.7795334220441103`*^9, 3.7795334527273083`*^9}, {
   3.779533500607532*^9, 3.779533505822057*^9}, 3.7795335597367573`*^9, {
   3.779533596190959*^9, 3.779533638279377*^9}, 3.779533693908189*^9, {
   3.779533762303644*^9, 3.779533826879662*^9}, {3.7795338840252867`*^9, 
   3.7795338862878933`*^9}, {3.77953404240477*^9, 3.779534057080441*^9}, {
   3.779534098776208*^9, 3.779534123111322*^9}, {3.7795343712671137`*^9, 
   3.779534375919653*^9}, {3.779534476247015*^9, 3.779534511389699*^9}, {
   3.779534735790213*^9, 3.7795347489331303`*^9}, {3.779534822395434*^9, 
   3.7795350096979647`*^9}, {3.7795350438090477`*^9, 3.779535420744944*^9}, {
   3.779535512073263*^9, 3.779535595928171*^9}, {3.779535676843813*^9, 
   3.779535679920232*^9}, {3.779535751759555*^9, 3.779535757724416*^9}, {
   3.7795358442783737`*^9, 3.7795358754153214`*^9}, {3.779535968871601*^9, 
   3.779536123608189*^9}, {3.7795362846686163`*^9, 3.7795364645397663`*^9}, {
   3.779536594792487*^9, 3.779536643326157*^9}, 3.779536683386372*^9, {
   3.779536721204906*^9, 3.779536721903181*^9}, {3.77953683126691*^9, 
   3.779536842740855*^9}, {3.779536886077523*^9, 3.779536892611083*^9}, {
   3.789452627519835*^9, 3.789452634089108*^9}, {3.7894527623754387`*^9, 
   3.789452780114943*^9}, 3.789452841989017*^9, {3.78945293179173*^9, 
   3.7894529384781313`*^9}, {3.804571629136142*^9, 3.8045716557397623`*^9}, {
   3.804571799943461*^9, 3.804571818896736*^9}, {3.804571974413169*^9, 
   3.804572114126556*^9}, {3.8045721597833357`*^9, 3.804572166047477*^9}, {
   3.8045772586987963`*^9, 3.804577329524228*^9}, 3.8112486650308847`*^9, {
   3.811248835409995*^9, 3.811248867288196*^9}, {3.8112490013083887`*^9, 
   3.811249191931329*^9}, {3.8112493611088247`*^9, 3.8112493660439577`*^9}, {
   3.811249528425476*^9, 3.811249530751042*^9}, 3.8112512409037237`*^9, {
   3.81125397603469*^9, 3.81125400758972*^9}, 3.811254052945273*^9, {
   3.8113253665382*^9, 3.811325367418247*^9}, {3.8113254806274977`*^9, 
   3.811325511618719*^9}, {3.811325609533092*^9, 3.811325618935156*^9}, {
   3.819713095452237*^9, 3.819713099071018*^9}, {3.8197140537515707`*^9, 
   3.819714072417954*^9}, {3.8197193471569767`*^9, 3.819719347740264*^9}, {
   3.8722956025707827`*^9, 
   3.872295602574835*^9}},ExpressionUUID->"15fb3f9b-9e2c-49d1-a4a9-\
7b0bdb1033ec"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
CheckConstantsOfMotionAlongRay (*could be removed from public part*)\
\>", "Subsection",
 CellChangeTimes->{{3.811242188038979*^9, 3.811242196394052*^9}, {
  3.872295975464349*^9, 3.872295976127118*^9}, {3.907304753061574*^9, 
  3.907304757708918*^9}},ExpressionUUID->"5d8cd046-dc96-4043-ae62-\
5ed8ef726352"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CheckConstantsOfMotionAlongRay", "[", 
   RowBox[{"ray_", ",", "paramRules_", ",", "angMomVar_"}], "]"}], " ", ":=", 
  " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"\[Lambda]Min", "=", " ", 
       RowBox[{
        RowBox[{"Head", "[", 
         RowBox[{"ray", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1", ",", "1"}], "]"}], "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"\[Lambda]Max", "=", " ", 
       RowBox[{
        RowBox[{"Head", "[", 
         RowBox[{"ray", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]}], ",", "\n", "\t\t", 
      RowBox[{"energy", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Simplify", "[", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"GetMetric", "[", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", 
                  RowBox[{"-", "j"}]}], "]"}], 
                RowBox[{
                 RowBox[{"k", "[", "j", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "/.", 
            "paramRules"}], ",", "\n", "\t\t\t\t", 
           RowBox[{"Trig", "\[Rule]", "False"}]}], "\n", "\t\t\t", "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"$t", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$r", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$\[Theta]", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$\[Phi]", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
          "}"}]}], "/.", "ray"}]}], ",", "\n", "\t\t", 
      RowBox[{"angularMomentum", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Simplify", "[", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"GetMetric", "[", 
                RowBox[{
                 RowBox[{"-", "4"}], ",", 
                 RowBox[{"-", "j"}]}], "]"}], 
               RowBox[{
                RowBox[{"k", "[", "j", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
              
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
            "paramRules"}], ",", "\n", "\t\t\t\t", 
           RowBox[{"Trig", "\[Rule]", "False"}]}], "\n", "\t\t\t", "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"$t", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$r", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$\[Theta]", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$\[Phi]", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
          "}"}]}], "/.", "ray"}]}], ",", "\n", "\t\t", 
      RowBox[{"carterConst", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Simplify", "[", "\n", "\t\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"(", "\n", "\t\t\t\t\t", 
             RowBox[{
              RowBox[{"+", " ", 
               RowBox[{
                RowBox[{"Sum", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"GetMetric", "[", 
                    RowBox[{
                    RowBox[{"-", "3"}], ",", 
                    RowBox[{"-", "j"}]}], "]"}], 
                   RowBox[{
                    RowBox[{"k", "[", "j", "]"}], "[", "\[Lambda]", "]"}]}], 
                  ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "^", 
                "2"}]}], "\n", "\t\t\t\t\t", "+", " ", 
              RowBox[{
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{
                  RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], 
                 "]"}], "^", "2"}], 
               RowBox[{"(", "\n", "\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", " ", 
                   RowBox[{"angMomVar", "^", "2"}]}], "*", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"GetMetric", "[", 
                    RowBox[{
                    RowBox[{"-", "1"}], ",", 
                    RowBox[{"-", "j"}]}], "]"}], 
                    RowBox[{
                    RowBox[{"k", "[", "j", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "^", 
                    "2"}], ")"}]}], "\n", "\t\t\t\t\t\t", "+", " ", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Sum", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"GetMetric", "[", 
                    RowBox[{
                    RowBox[{"-", "4"}], ",", 
                    RowBox[{"-", "j"}]}], "]"}], 
                    RowBox[{
                    RowBox[{"k", "[", "j", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "^", 
                    "2"}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], 
                    "]"}], "^", "2"}], ")"}]}]}], "\n", "\t\t\t\t\t\t", 
                ")"}]}]}], "\n", "\t\t\t\t", ")"}], "/.", "paramRules"}], ",",
            "\n", "\t\t\t\t", 
           RowBox[{"Trig", "\[Rule]", "False"}]}], "\n", "\t\t\t", "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"$t", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$r", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$\[Theta]", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
           RowBox[{"$\[Phi]", "\[Rule]", 
            RowBox[{
             RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
          "}"}]}], "/.", "ray"}]}], ",", "\n", "\t\t", "relativeErrorEnergy", 
      ",", " ", "relativeErrorAngularMomentum", ",", " ", 
      "relativeErrorCarterConstant"}], "\n", "\t", "}"}], ",", "\n", "\t", 
    RowBox[{
     RowBox[{"relativeErrorEnergy", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"energy", "/.", 
           RowBox[{"\[Lambda]", "\[Rule]", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]Min", ",", "\[Lambda]Max"}], "}"}], "]"}]}]}],
           ")"}], " ", "\[Equal]", " ", "0"}], ",", " ", "0", ",", " ", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"energy", "/.", 
            RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Min"}]}], ")"}], " ", 
          "-", " ", 
          RowBox[{"(", "energy", ")"}]}], 
         RowBox[{"(", 
          RowBox[{"energy", "/.", 
           RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Min"}]}], ")"}]]}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"relativeErrorAngularMomentum", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"angularMomentum", "/.", 
           RowBox[{"\[Lambda]", "\[Rule]", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]Min", ",", "\[Lambda]Max"}], "}"}], "]"}]}]}],
           ")"}], " ", "\[Equal]", " ", "0"}], ",", " ", "0", ",", " ", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"angularMomentum", "/.", 
            RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Min"}]}], ")"}], " ", 
          "-", " ", 
          RowBox[{"(", "angularMomentum", ")"}]}], 
         RowBox[{"(", 
          RowBox[{"angularMomentum", "/.", 
           RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Min"}]}], ")"}]]}], 
       "]"}]}], ";", "\n", "\t", 
     RowBox[{"relativeErrorCarterConstant", " ", "=", " ", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"carterConst", "/.", 
           RowBox[{"\[Lambda]", "\[Rule]", 
            RowBox[{"RandomReal", "[", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]Min", ",", "\[Lambda]Max"}], "}"}], "]"}]}]}],
           ")"}], " ", "\[Equal]", " ", "0"}], ",", " ", "0", ",", " ", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"carterConst", "/.", 
            RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Min"}]}], ")"}], " ", 
          "-", " ", 
          RowBox[{"(", "carterConst", ")"}]}], 
         RowBox[{"(", 
          RowBox[{"carterConst", "/.", 
           RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Min"}]}], ")"}]]}], 
       "]"}]}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"relativeErrorEnergy", " ", "===", " ", "0"}], ",", "\n", 
       "\t\t", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<energy seems to vanish identically\>\"", "]"}], 
        ";"}], "\n", "\t\t", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Print", "@", 
         RowBox[{"LogPlot", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Abs", "[", "energy", "]"}], ",", 
              RowBox[{"Abs", "[", "relativeErrorEnergy", "]"}]}], "}"}], 
            "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"{", 
            RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}], 
            "}"}], ",", " ", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\n", "\t\t\t", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", "Red"}], "}"}]}], "}"}]}], ",", " ", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<energy\>\""}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<affine parameter \[Lambda]\>\"", ",", 
              "\"\<energy [relative error]\>\""}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "16"}], "}"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Black"}], "}"}], "}"}]}]}], "\n", "\t\t",
           "]"}]}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"relativeErrorAngularMomentum", " ", "===", " ", "0"}], ",", 
       "\n", "\t\t", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<angular momentum seems to vanish identically\>\"", 
         "]"}], ";"}], "\n", "\t\t", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Print", "@", 
         RowBox[{"LogPlot", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Abs", "[", "angularMomentum", "]"}], ",", 
              RowBox[{"Abs", "[", "relativeErrorAngularMomentum", "]"}]}], 
             "}"}], "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"{", 
            RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}], 
            "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\n", "\t\t\t", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", "Red"}], "}"}]}], "}"}]}], ",", " ", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<angular momentum\>\""}], ",", 
           
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<affine parameter \[Lambda]\>\"", ",", " ", 
              "\"\<momentum [relative error]\>\""}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "16"}], "}"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Black"}], "}"}], "}"}]}]}], "\n", "\t\t",
           "]"}]}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"relativeErrorCarterConstant", " ", "===", " ", "0"}], ",", 
       "\n", "\t\t", 
       RowBox[{
        RowBox[{
        "Print", "[", "\"\<Carter constant seems to vanish identically\>\"", 
         "]"}], ";"}], "\n", "\t\t", ",", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Print", "@", 
         RowBox[{"LogPlot", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Evaluate", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Abs", "[", "carterConst", "]"}], ",", 
              RowBox[{"Abs", "[", "relativeErrorCarterConstant", "]"}]}], 
             "}"}], "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"{", 
            RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}], 
            "}"}], ",", " ", 
           RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", "\n", "\t\t\t", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Thick", ",", "Red"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"Dashed", ",", "Red"}], "}"}]}], "}"}]}], ",", " ", 
           RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "350"}], ",", 
           "\[IndentingNewLine]", "\t\t\t", 
           RowBox[{"Frame", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotLabel", "\[Rule]", "\"\<Carter constant\>\""}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<affine parameter \[Lambda]\>\"", ",", 
              "\"\<Carter [relative error]\>\""}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Black", ",", "16"}], "}"}]}], ",", 
           RowBox[{"FrameStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"Thick", ",", "Black"}], "}"}], "}"}]}]}], "\n", "\t\t",
           "]"}]}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\n", "\t", 
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<maximalErrors\>\"", ",", " ", 
         RowBox[{"NMaxValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Abs", "[", "relativeErrorEnergy", "]"}], ",", 
             RowBox[{
             "\[Lambda]Min", "<", "\[Lambda]", "<", "\[Lambda]Max"}]}], "}"}],
            ",", "\[Lambda]"}], "]"}], ",", " ", 
         RowBox[{"NMaxValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Abs", "[", "relativeErrorAngularMomentum", "]"}], ",", 
             RowBox[{
             "\[Lambda]Min", "<", "\[Lambda]", "<", "\[Lambda]Max"}]}], "}"}],
            ",", "\[Lambda]"}], "]"}], ",", " ", 
         RowBox[{"NMaxValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Abs", "[", "relativeErrorCarterConstant", "]"}], ",", 
             RowBox[{
             "\[Lambda]Min", "<", "\[Lambda]", "<", "\[Lambda]Max"}]}], "}"}],
            ",", "\[Lambda]"}], "]"}]}], "}"}], ",", "\n", "\t\t", 
       RowBox[{"{", 
        RowBox[{"\"\<finalTimeErrors\>\"", ",", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"relativeErrorEnergy", "/.", 
           RowBox[{"{", 
            RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Max"}], "}"}]}], "]"}], 
         ",", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"relativeErrorAngularMomentum", "/.", 
           RowBox[{"{", 
            RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Max"}], "}"}]}], "]"}], 
         ",", " ", 
         RowBox[{"Abs", "[", 
          RowBox[{"relativeErrorCarterConstant", "/.", 
           RowBox[{"{", 
            RowBox[{"\[Lambda]", "\[Rule]", "\[Lambda]Max"}], "}"}]}], 
          "]"}]}], "}"}]}], "\n", "\t", "}"}]}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->CompressedData["
1:eJwdzltIkwEAxfGvRBQHNuZA0y5uC0MTaz5UzGgpReCl3NpDjlKZFwY1L8VE
i9Qi1tSQDIU9GGF+2c1EWIsaCOrspQZRMCeEIQUTURPNhUWNvv/3cPi9nANH
Y2s0120XBGG/FDQsea0vzq8UPr6vr8KbA28vYVpT4Com/oy0osWs78Q7nzZc
mH4wdg9dc9G2UUm1WOHG8tD8E3z3vPUpGtvFN9ieusuPjpzgNP69fjuMJzzm
BczpsUWwWju1gse8a/EvJc2WkmQcOd0va/3cpsI5T8pe7NA6s1FlUuXjw5as
IoxfNp7FwQ8fLRjZobso74Rw5hg/xToN6hu2DqChoDYXe0ydR/Fw/o0CrDz3
qAZdv/bZ0Teyx4ldju5rqJy0ulFdXyWb/cXp80oq/v2WnTiZF0CHQQzibLlN
+0oy60+SEb8vBItQaY/VYsfwmsMneWbblVvY0HiqDwdXW/pxc1X/AGePmGTH
88bm8bKr96vcLx5aRyGk28AfCfYYpmWkJ7+WHIq7ewgDyveyFxb9hTipUJTi
Um9cDZZNPKtHXVl3M85odE7cGm1yoyfzWxeOpxQPY8Zui4iV0WY/ehOrZ/D4
ztIQqt3RMP4HD5lBRQ==
  
  "],ExpressionUUID->"b5995626-7a0f-4f00-bfd5-1c9be582e1e1"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s NDSolve routine to obtain the shadow boundary (*private \
only*)"
}], "Section",
 CellChangeTimes->{{3.7792874843306723`*^9, 3.779287497368887*^9}, {
  3.872935372825592*^9, 3.872935379758932*^9}, {3.907305075205347*^9, 
  3.9073050922857447`*^9}},ExpressionUUID->"3fc8a556-343e-4e44-8461-\
cacd458c459e"],

Cell[CellGroupData[{

Cell["interval bisection to determine shadow boundary", "Subsection",
 CellChangeTimes->{{3.779377625391596*^9, 3.779377646844839*^9}, {
   3.8722960420960007`*^9, 3.8722960518038273`*^9}, 3.872296114485195*^9, {
   3.907304727875121*^9, 
   3.907304728668721*^9}},ExpressionUUID->"efca2671-e0b9-40bb-9632-\
0f2ce7a0e30e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "BoundaryBisectionInternal", "]"}], " ", ":=", 
    " ", 
    RowBox[{"Options", "[", "BoundaryBisection", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BoundaryBisectionInternal", "::", "HorizonCondition"}], "=", 
    "\"\<Trajectory fell into user-defined horizon.\>\""}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BoundaryBisectionInternal", "[", 
    RowBox[{"odes_", ",", " ", "inits_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]_", ",", "\[Lambda]Min_", ",", "\[Lambda]Max_"}], 
      "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"xScreen_", ",", " ", "yScreen_"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xInnerScreen_", ",", "yInnerScreen_"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"xOuterScreen_", ",", "yOuterScreen_"}], "}"}]}], "}"}], ",", 
     " ", "paramRules_", ",", " ", "precisionAim_", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{"sol", ",", "\n", "\t\t", 
       RowBox[{"stepNumber", " ", "=", " ", "0"}]}], "\n", "\t", "}"}], ",", 
     "\n", "\t", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Print", "[", 
        RowBox[{"OptionValue", "[", "WorkingPrecision", "]"}], "]"}], ";"}], 
      "*)"}], "\n", "\t", "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}], ",", " ", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{"PrintTemporary", "[", 
          RowBox[{
           RowBox[{"\"\<current bisection: x \[Element] [\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "@", "xInnerScreen"}], "]"}], "<>", "\"\<,\>\"", "<>", 
            RowBox[{"ToString", "[", 
             RowBox[{"N", "@", "xOuterScreen"}], "]"}], "<>", 
            "\"\<] and y \[Element] [\>\""}], ",", " ", 
           RowBox[{"N", "@", "yInnerScreen"}], ",", " ", "\"\<, \>\"", ",", 
           " ", 
           RowBox[{"N", "@", "yOuterScreen"}], ",", " ", "\"\<].\>\""}], 
          "]"}], ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], "^", "2"}], 
          " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], "^", 
           "2"}]}], " ", ">", " ", 
         RowBox[{"precisionAim", "^", "2"}]}], "\n", "\t\t", ",", "\n", 
        "\t\t", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Print", "@", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"TrueQ", "[", 
              RowBox[{"!", 
               RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], "]"}],
              ",", "\"\<proceed without horizon condition\>\"", ",", " ", 
             "\"\<apply horizon condition\>\"", ",", " ", "\"\<other\>\""}], 
            "]"}]}], ";"}], "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"sol", " ", "=", " ", 
          RowBox[{"Check", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Catch", "[", 
             RowBox[{"NDSolve", "[", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"Join", "[", "\n", "\t\t\t\t\t", 
                RowBox[{"odes", ",", "\n", "\t\t\t\t\t", 
                 RowBox[{"inits", "/.", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"xScreen", " ", "\[Rule]", " ", 
                    RowBox[{"xInnerScreen", " ", "+", " ", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], 
                    "2"]}]}], ",", " ", 
                    RowBox[{"yScreen", " ", "\[Rule]", " ", 
                    RowBox[{"yInnerScreen", " ", "+", " ", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], 
                    "2"]}]}]}], "}"}]}]}], "\n", "\t\t\t\t", "]"}], ",", "\n",
                "\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"k", "[", "1", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"k", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"k", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"k", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}], 
                "}"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"Method", " ", "\[Rule]", " ", 
                RowBox[{"If", "[", "\n", "\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"TrueQ", "[", 
                   RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], 
                   "]"}], ",", "\n", "\t\t\t\t\t", "Automatic", ",", "\n", 
                  "\t\t\t\t\t", 
                  RowBox[{"{", "\n", "\t\t\t\t\t\t", 
                   RowBox[{
                   "\"\<EventLocator\>\"", ",", " ", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"\"\<Event\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}], 
                    ")"}], "/.", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"paramRules", ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$v", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Chi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "}"}]}], ")"}], "\n", "\t\t\t\t\t\t", "}"}]}], ",", " ", 
                    "\n", "\t\t\t\t\t\t", 
                    RowBox[{"\"\<EventAction\>\"", " ", "\[RuleDelayed]", " ", 
                    RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}],
                     ",", 
                    RowBox[{"PrintTemporary", "[", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    "\"\<trajectory fell into user-defined horizon: at \
\[Lambda]=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"\[Lambda]", ",", "5"}], "]"}], "]"}], "<>", 
                    "\"\< the user-defined HorizonCondition has been \
numerically detected.\>\""}], ",", "\n", "\t\t\t\t\t\t\t\t", 
                    "\"\<Note that this essentially detects the observers \
image of the user-defined surface 'HorizonCondition'.\>\""}], "\n", 
                    "\t\t\t\t\t\t\t", "]"}]}], "]"}], ";", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    "BoundaryBisectionInternal", "::", "HorizonCondition"}], 
                    "]"}], ";", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"Throw", "[", 
                    RowBox[{"Null", ",", "\"\<StopIntegration\>\""}], "]"}]}],
                     ")"}], "\n", "\t\t\t\t\t\t", "}"}]}]}], "\n", 
                   "\t\t\t\t\t", "}"}]}], "\n", "\t\t\t\t", "]"}]}], ",", 
               "\n", "\t\t\t\t", 
               RowBox[{"Sequence", "@@", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Cases", "[", 
                  RowBox[{
                   RowBox[{"{", "opts", "}"}], ",", 
                   RowBox[{
                    RowBox[{"Rule", "[", 
                    RowBox[{"optName_", ",", "optVal_"}], "]"}], "/;", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Options", "[", "NDSolve", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "optName"}],
                     "]"}]}]}], "]"}], "]"}]}], ",", " ", 
               RowBox[{"MaxSteps", "\[Rule]", 
                RowBox[{"OptionValue", "[", "MaxSteps", "]"}]}]}], "\n", 
              "\t\t\t", "]"}], "]"}], ",", "\n", "\t\t\t", "Null"}], "\n", 
           "\t\t", "]"}]}], ";", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"PrintTemporary", "@", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"sol", "===", "Null"}], "||", 
               RowBox[{
                RowBox[{"Head", "@", "sol"}], "===", "String"}]}], ",", 
              "\"\<fell into\>\"", ",", "\"\<passed \[Infinity]\>\""}], 
             "]"}]}], ";"}], "*)"}], "\n", "\t\t", 
         RowBox[{"If", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"sol", "===", "Null"}], "||", 
            RowBox[{
             RowBox[{"Head", "@", "sol"}], "===", "String"}]}], ",", "\n", 
           "\t\t\t", 
           RowBox[{"BoundaryBisectionInternal", "[", 
            RowBox[{"odes", ",", " ", "inits", ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}],
               "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"xScreen", ",", " ", "yScreen"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"xInnerScreen", " ", "+", " ", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], 
                   "2"]}], ",", 
                 RowBox[{"yInnerScreen", " ", "+", " ", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], 
                   "2"]}]}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"xOuterScreen", ",", "yOuterScreen"}], "}"}]}], "}"}],
              ",", " ", "paramRules", ",", " ", "precisionAim", ",", " ", 
             "opts", ",", " ", 
             RowBox[{"PrintTemporaryOption", "\[Rule]", 
              RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}]}]}], 
            "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"BoundaryBisectionInternal", "[", 
            RowBox[{"odes", ",", " ", "inits", ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}],
               "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"xScreen", ",", " ", "yScreen"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"xInnerScreen", ",", "yInnerScreen"}], "}"}], ",", 
               " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"xInnerScreen", " ", "+", " ", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], 
                   "2"]}], ",", 
                 RowBox[{"yInnerScreen", " ", "+", " ", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], 
                   "2"]}]}], "}"}]}], "}"}], ",", " ", "paramRules", ",", " ",
              "precisionAim", ",", " ", "opts", ",", " ", 
             RowBox[{"PrintTemporaryOption", "\[Rule]", 
              RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}]}]}], 
            "]"}]}], "\n", "\t\t", "]"}]}], "\n", "\t\t", ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"N", "[", 
          RowBox[{"{", 
           RowBox[{"xOuterScreen", 
            RowBox[{"(*", 
             RowBox[{"xInnerScreen", " ", "+", " ", 
              FractionBox[
               RowBox[{"(", 
                RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], "2"]}], 
             "*)"}], ",", " ", "yOuterScreen"}], 
           RowBox[{"(*", 
            RowBox[{"yInnerScreen", " ", "+", " ", 
             FractionBox[
              RowBox[{"(", 
               RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], "2"]}], 
            "*)"}], "}"}], "]"}], "]"}], ",", "\n", "\t\t", "None"}], "\n", 
       "\t", "]"}]}]}], "\n", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{
  3.907304822779231*^9},ExpressionUUID->"02ba55a3-752e-45fa-bc5b-\
5f19dbc162e5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "BoundaryBisection", "]"}], " ", ":=", " ", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PrintTemporaryOption", "\[Rule]", "True"}], ",", " ", 
        RowBox[{"HorizonCondition", "\[Rule]", "False"}]}], "}"}], ",", 
      RowBox[{"Options", "[", "NDSolve", "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BoundaryBisection", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rCam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Theta]Cam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Phi]Cam_", "?", "RationalQ"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xInnerScreen_", "?", "RationalQ"}], ",", 
          RowBox[{"yInnerScreen_", "?", "RationalQ"}]}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"xOuterScreen_", "?", "RationalQ"}], ",", 
          RowBox[{"yOuterScreen_", "?", "RationalQ"}]}], "}"}]}], "}"}], ",", 
      " ", "paramRules_", ",", " ", "precisionAim_", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
       "inits", ",", " ", "xScreen", ",", " ", "yScreen", ",", "odes", ",", 
        "\n", "\t\t", 
        RowBox[{"\[Lambda]Max", "=", " ", 
         RowBox[{"3", "rCam"}]}], ",", "\n", "\t\t", "result", ",", " ", 
        "return"}], "\n", "\t", "}"}], ",", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"Switch", "[", "\n", "\t\t", 
        RowBox[{"(*", "condition", "*)"}], "\n", "\t\t", 
        RowBox[{"WhichCoords", ",", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"option", " ", "1"}], "*)"}], "\n", "\t\t", 
         "BoyerLindquist", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"odes", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"GetNullGeodesic1stOrderODE", "[", 
              RowBox[{"x", ",", "k", ",", "\[Lambda]"}], "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"$t", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$r", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$\[Theta]", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$\[Phi]", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
              "}"}]}], "/.", 
            RowBox[{"Rationalize", "[", 
             RowBox[{"paramRules", ",", 
              RowBox[{"10", "^", 
               RowBox[{"-", "100"}]}]}], "]"}]}]}], ";", "\n", "\t\t", 
          RowBox[{"inits", " ", "=", " ", 
           RowBox[{
            RowBox[{"GetBoyerLindquistInitialValues", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", " ", "k", ",", " ", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"xScreen", ",", "yScreen"}], "}"}], ",", "0"}], "]"}], 
            "/.", 
            RowBox[{"Rationalize", "[", 
             RowBox[{"paramRules", ",", 
              RowBox[{"10", "^", 
               RowBox[{"-", "100"}]}]}], "]"}]}]}], ";"}], "\n", "\t\t", ",", 
         "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"option", " ", "2"}], "*)"}], "\n", "\t\t", "Kerr", ",", 
         "\n", "\t\t", 
         RowBox[{
          RowBox[{"odes", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"GetNullGeodesic1stOrderODE", "[", 
              RowBox[{"x", ",", "k", ",", "\[Lambda]"}], "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"$v", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$r", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$\[Theta]", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
               RowBox[{"$\[Chi]", "\[Rule]", 
                RowBox[{
                 RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
              "}"}]}], "/.", 
            RowBox[{"Rationalize", "[", 
             RowBox[{"paramRules", ",", 
              RowBox[{"10", "^", 
               RowBox[{"-", "100"}]}]}], "]"}]}]}], ";", "\n", "\t\t", 
          RowBox[{"inits", " ", "=", " ", 
           RowBox[{
            RowBox[{"GetKerrInitialValues", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"x", ",", " ", "k", ",", " ", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], 
              ",", 
              RowBox[{"{", 
               RowBox[{"xScreen", ",", "yScreen"}], "}"}], ",", "$spin"}], 
             "]"}], "/.", 
            RowBox[{"Rationalize", "[", 
             RowBox[{"paramRules", ",", 
              RowBox[{"10", "^", 
               RowBox[{"-", "100"}]}]}], "]"}]}]}], ";"}], "\n", "\t\t", ",", 
         "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"default", " ", "other"}], "*)"}], "\n", "\t\t", "_", ",", 
         "\n", "\t\t", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Suitable coordinates not yet set. Please use either \
SetBoyerLindquistCoords[] or SetKerrCoords[] to set the coordinates. Other \
coordinates are not yet supported.\>\"", "]"}], ";", "\n", "\t\t", 
          RowBox[{"Return", "[", "Null", "]"}]}]}], "\t\t", "\n", "\t", "]"}],
        ";", "\n", "\t", "\n", "\t", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}], ",", " ", 
         
         RowBox[{"PrintTemporary", "[", 
          RowBox[{"\"\<boundary bisection in progress ... using \>\"", ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"TrueQ", "[", 
              RowBox[{"!", 
               RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], "]"}],
              ",", "\"\<any NDSolve error as indication for a ray falling \
into the horizon\>\"", ",", " ", 
             "\"\<NDSolve errors and/or the user specified HorizonCondition \
as indication for a ray falling into the horizon\>\""}], "]"}]}], "]"}]}], 
        "]"}], ";", "\n", "\t", 
       RowBox[{"result", " ", "=", " ", 
        RowBox[{"BoundaryBisectionInternal", "[", 
         RowBox[{"odes", ",", " ", "inits", ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]", ",", "0", ",", "\[Lambda]Max"}], "}"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"xScreen", ",", " ", "yScreen"}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"xInnerScreen", ",", "yInnerScreen"}], "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"xOuterScreen", ",", "yOuterScreen"}], "}"}]}], "}"}], 
          ",", " ", "paramRules", ",", " ", "precisionAim", ",", " ", "opts", 
          ",", " ", 
          RowBox[{"PrintTemporaryOption", "\[Rule]", 
           RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}]}]}], 
         "]"}]}], ";", "\n", "\n", "\t", 
       RowBox[{"If", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"Or", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"xOuterScreen", " ", "-", " ", 
                RowBox[{"result", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}], " ", 
             "+", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"yOuterScreen", " ", "-", " ", 
                RowBox[{"result", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}]}], " ", 
            "<", " ", 
            RowBox[{"2", "*", 
             RowBox[{"precisionAim", "^", "2"}]}]}], ",", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"xInnerScreen", " ", "-", " ", 
                RowBox[{"result", "[", 
                 RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "^", "2"}], " ", 
             "+", " ", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"yInnerScreen", " ", "-", " ", 
                RowBox[{"result", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ")"}], "^", "2"}]}], " ", 
            "<", " ", 
            RowBox[{"2", "*", 
             RowBox[{"precisionAim", "^", "2"}]}]}]}], "\n", "\t\t", "]"}], 
         "\n", "\t\t", ",", "\n", "\t\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}], ",", 
            " ", 
            RowBox[{
            "Print", "[", 
             "\"\<probably no shadow boundary between the two specified \
points.\>\"", "]"}]}], "]"}], ";", "\n", "\t\t", 
          RowBox[{"return", " ", "=", " ", "None"}], ";"}], "\n", "\t\t", ",",
          "\n", "\t\t", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}], ",", 
            " ", 
            RowBox[{
            "Print", "[", 
             "\"\<shadow boundary was found within the specified \
interval.\>\"", "]"}]}], "]"}], ";", "\n", "\t\t", 
          RowBox[{"return", " ", "=", " ", "result"}], ";"}]}], "\n", "\t", 
        "]"}], ";", "\n", "\n", "\t", 
       RowBox[{"Return", "@", "return"}], ";"}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"BoundaryBisection", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rCam_", ",", "\[Theta]Cam_", ",", "\[Phi]Cam_"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xInnerScreen_", ",", "yInnerScreen_"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"xOuterScreen_", ",", "yOuterScreen_"}], "}"}]}], "}"}], ",", 
     " ", "paramRules_", ",", " ", "precisionAim_", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<Input values of {rCam_,\[Theta]Cam_,\[Phi]Cam_} and/or \
{{xInnerScreen_,yInnerScreen_}, {xOuterScreen_,yOuterScreen_}} not recognized \
as infinite precision numbers. \nPlease use rational input only as this \
improves the employed numerical methods. \nYou can use \
Rationalize[input_,precision_]] where precision is the desired precision, \
e.g., 10^-100, to rationalize your numerical input.\>\"", "\n", "\t", "]"}], 
      ";"}]}], "\n", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.762264478284326*^9, 3.7622645714294643`*^9}, {
   3.762264612440357*^9, 3.7622651564800453`*^9}, {3.762265234737225*^9, 
   3.762265235289755*^9}, 3.762265520753099*^9, {3.76226585858959*^9, 
   3.762265890070489*^9}, 3.7622659896436768`*^9, 3.762266027774556*^9, {
   3.762266133411278*^9, 3.762266158358369*^9}, {3.762266219307097*^9, 
   3.762266241947832*^9}, {3.762266285783313*^9, 3.7622663105660133`*^9}, {
   3.7622663420730247`*^9, 3.7622663666122227`*^9}, {3.762266641634967*^9, 
   3.7622667118982477`*^9}, {3.7622668275055437`*^9, 3.762266843507139*^9}, {
   3.762266948582898*^9, 3.762266970946217*^9}, {3.762267255991432*^9, 
   3.762267310033244*^9}, {3.762267551755147*^9, 3.7622675602694397`*^9}, {
   3.762601730426545*^9, 3.7626017305508127`*^9}, {3.762601818729526*^9, 
   3.762601819935824*^9}, {3.762607783443364*^9, 3.762607783586253*^9}, 
   3.762626576930924*^9, {3.762631228489312*^9, 3.7626312921166687`*^9}, {
   3.762631362841811*^9, 3.7626313825025663`*^9}, 3.7626314143477163`*^9, {
   3.762631452239636*^9, 3.762631515984799*^9}, {3.762631548370284*^9, 
   3.7626315486185207`*^9}, {3.762631589013564*^9, 3.762631667102582*^9}, {
   3.762631705381699*^9, 3.762631707653545*^9}, {3.7626317484147053`*^9, 
   3.7626317770839157`*^9}, {3.76263180921074*^9, 3.762631812280842*^9}, {
   3.762631864925859*^9, 3.7626318683159447`*^9}, {3.7626321019931602`*^9, 
   3.762632150880775*^9}, {3.7626322277727213`*^9, 3.762632282340322*^9}, {
   3.762632320760777*^9, 3.762632328006611*^9}, {3.7626323621442347`*^9, 
   3.7626323649966373`*^9}, {3.7626626606881037`*^9, 
   3.7626626660951366`*^9}, {3.762662820455427*^9, 3.7626628217840557`*^9}, {
   3.7626628585118103`*^9, 3.76266293609128*^9}, {3.7626662097880993`*^9, 
   3.76266622145157*^9}, {3.762666255751625*^9, 3.762666273207389*^9}, 
   3.762666315849453*^9, {3.7626665104923687`*^9, 3.762666510890818*^9}, 
   3.762666687640984*^9, {3.7626667184264*^9, 3.762666798285746*^9}, 
   3.7626669772830877`*^9, {3.762667028180292*^9, 3.762667091105297*^9}, {
   3.762667137751093*^9, 3.762667157733101*^9}, {3.762667210370604*^9, 
   3.7626672115349627`*^9}, {3.762667344796444*^9, 3.762667351993372*^9}, {
   3.7626673879988194`*^9, 3.762667411638344*^9}, {3.762667609906641*^9, 
   3.7626676736117*^9}, {3.762667806236433*^9, 3.762667865148437*^9}, {
   3.762667920580346*^9, 3.762667949185178*^9}, {3.762667995205318*^9, 
   3.762667996578601*^9}, {3.762668108702504*^9, 3.76266811748343*^9}, {
   3.762668156180419*^9, 3.762668164880004*^9}, {3.762668199079962*^9, 
   3.7626682073609324`*^9}, {3.762668258961289*^9, 3.7626682827669*^9}, {
   3.762668318509782*^9, 3.762668324142873*^9}, {3.7626683630175257`*^9, 
   3.7626683756710033`*^9}, {3.762668419826619*^9, 3.762668428764001*^9}, {
   3.7626684669837217`*^9, 3.7626684671559668`*^9}, {3.7626685338515873`*^9, 
   3.762668538128339*^9}, {3.7626685999268217`*^9, 3.762668666486958*^9}, {
   3.7626687208852*^9, 3.762668739382001*^9}, {3.762668784626787*^9, 
   3.7626687900489807`*^9}, {3.762668919183055*^9, 3.76266892733505*^9}, {
   3.762668985239419*^9, 3.7626689937210283`*^9}, {3.762669075326058*^9, 
   3.762669078106495*^9}, {3.762669274803514*^9, 3.762669301498617*^9}, {
   3.779377665649514*^9, 3.779377669305029*^9}, {3.779377710603936*^9, 
   3.7793777430197573`*^9}, {3.779415826456152*^9, 3.7794158291165133`*^9}, {
   3.77941589579589*^9, 3.779415986210146*^9}, {3.7794160276783543`*^9, 
   3.779416028942786*^9}, {3.77941613137753*^9, 3.779416178655292*^9}, {
   3.7794162858054953`*^9, 3.7794163592960863`*^9}, {3.779416425903408*^9, 
   3.7794164373693533`*^9}, {3.7794164775689697`*^9, 3.779416487438374*^9}, 
   3.779416743302903*^9, 3.779416819751218*^9, {3.77941687136585*^9, 
   3.779416904845587*^9}, {3.77942104180756*^9, 3.779421042553977*^9}, {
   3.7794211447587833`*^9, 3.779421188717379*^9}, {3.77942122075749*^9, 
   3.77942122928485*^9}, {3.779421276805831*^9, 3.7794213074989223`*^9}, {
   3.7794213525788794`*^9, 3.7794214323260517`*^9}, {3.779421463216646*^9, 
   3.7794218937876053`*^9}, {3.779421958027547*^9, 3.779421965076682*^9}, {
   3.7794220285243807`*^9, 3.779422049489955*^9}, {3.7794222770060177`*^9, 
   3.7794223108167963`*^9}, {3.7794223482199917`*^9, 
   3.7794224099442587`*^9}, {3.779422463090363*^9, 3.77942249685259*^9}, {
   3.7794228748665237`*^9, 3.779422918921805*^9}, {3.779423042789453*^9, 
   3.779423057468137*^9}, {3.7794231306498947`*^9, 3.779423143715757*^9}, {
   3.779423184475849*^9, 3.779423294862706*^9}, {3.7794233425572147`*^9, 
   3.7794233569152327`*^9}, {3.779423422881489*^9, 3.779423489159829*^9}, {
   3.7794236427842817`*^9, 3.779423664872575*^9}, {3.779423707556151*^9, 
   3.779423710073676*^9}, {3.7794304472369127`*^9, 3.77943060735343*^9}, {
   3.779430695910595*^9, 3.779430741149501*^9}, {3.7794308240338917`*^9, 
   3.7794308376082983`*^9}, {3.779430920616456*^9, 3.779430922538332*^9}, {
   3.779434003630227*^9, 3.7794343616141453`*^9}, {3.7794344740801687`*^9, 
   3.779434477177952*^9}, {3.779434534755209*^9, 3.779434567713806*^9}, {
   3.7794346029876623`*^9, 3.779434665926079*^9}, {3.779434813975806*^9, 
   3.779434831120783*^9}, {3.779439047290502*^9, 3.779439048414557*^9}, {
   3.80457231759693*^9, 3.804572334727085*^9}, {3.8045723709137907`*^9, 
   3.8045724326502666`*^9}, {3.8158091161755247`*^9, 3.815809125528517*^9}, {
   3.815809163091724*^9, 3.8158092094125137`*^9}, 3.8158092472666273`*^9, {
   3.815809277845408*^9, 3.815809291679175*^9}, {3.8158094355637627`*^9, 
   3.8158094413483143`*^9}, {3.81580968070788*^9, 3.815809692863934*^9}, {
   3.8158099785188503`*^9, 3.81580998098843*^9}, {3.8176224248932343`*^9, 
   3.817622444236833*^9}, {3.8176226058599777`*^9, 3.8176227570313473`*^9}, {
   3.81762313081721*^9, 3.817623137571168*^9}, {3.8176231757899*^9, 
   3.817623206624297*^9}, {3.817623245391831*^9, 3.817623412811398*^9}, {
   3.817623781104396*^9, 3.817623786475671*^9}, {3.817623925906025*^9, 
   3.817623956263599*^9}, 3.817623997519437*^9, {3.8176240627065496`*^9, 
   3.817624082236129*^9}, {3.8176242316568737`*^9, 3.817624310481474*^9}, {
   3.817624430737088*^9, 3.817624431441848*^9}, {3.817624486948318*^9, 
   3.8176245276893063`*^9}, {3.817624593849927*^9, 3.817624647671858*^9}, {
   3.8176247424160833`*^9, 3.8176247574114237`*^9}, {3.817624815903224*^9, 
   3.8176248331016617`*^9}, {3.817624888202545*^9, 3.817624893938861*^9}, {
   3.817624988351741*^9, 3.817624992988699*^9}, {3.81762509689284*^9, 
   3.817625141115861*^9}, {3.817625177646285*^9, 3.817625206177925*^9}, {
   3.8176254059599733`*^9, 3.817625410951496*^9}, {3.817625650229691*^9, 
   3.817625652479659*^9}, {3.8176257604881973`*^9, 3.817625760746031*^9}, {
   3.81762580565847*^9, 3.81762580590163*^9}, {3.81762603638479*^9, 
   3.817626096906609*^9}, 3.817626131107461*^9, 3.8176293878110657`*^9, {
   3.817629530457847*^9, 3.817629620107368*^9}, {3.817629820254776*^9, 
   3.817629829603567*^9}, {3.8176308197297*^9, 3.817630828086237*^9}, {
   3.817631174895032*^9, 3.817631175551565*^9}, {3.817631448719946*^9, 
   3.817631452165091*^9}, {3.819433813430503*^9, 3.819433814257022*^9}, {
   3.819435152308457*^9, 3.8194352772032537`*^9}, 3.819435338731509*^9, {
   3.8194353850056477`*^9, 3.8194353893191137`*^9}, {3.819435671107695*^9, 
   3.819435683863482*^9}, 3.819435847064063*^9, {3.819436248012967*^9, 
   3.819436264165213*^9}, {3.819436305986123*^9, 3.819436324319208*^9}, {
   3.819436523776743*^9, 3.819436533630352*^9}, {3.8194366077395077`*^9, 
   3.819436620284267*^9}, {3.8194366976785517`*^9, 3.819436698949939*^9}, {
   3.8194367355193453`*^9, 3.8194367648404703`*^9}, {3.819436831315743*^9, 
   3.819436860555125*^9}, {3.8194369340104923`*^9, 3.8194369342948523`*^9}, {
   3.819437003279662*^9, 3.8194370054177837`*^9}, {3.8194370600272923`*^9, 
   3.819437060760879*^9}, {3.8194371376185226`*^9, 3.81943713896012*^9}, {
   3.819437223494967*^9, 3.819437226495181*^9}, {3.8194372634471483`*^9, 
   3.819437267543151*^9}, {3.8194374060385447`*^9, 3.8194374135085506`*^9}, 
   3.819437490269925*^9, {3.823071125909843*^9, 3.823071171747271*^9}, {
   3.823071221389441*^9, 3.8230712472648287`*^9}, {3.823071553580442*^9, 
   3.8230715920815477`*^9}, {3.8230716545978537`*^9, 3.823071661917639*^9}, {
   3.8230876606597853`*^9, 3.8230876692325068`*^9}, {3.823087938116742*^9, 
   3.823087956102886*^9}, {3.823090077643589*^9, 3.823090104931314*^9}, 
   3.823090149080985*^9, {3.860581983482092*^9, 3.8605819880270863`*^9}, {
   3.861324302651536*^9, 3.861324318688785*^9}, 3.861326276487417*^9, {
   3.863674205448387*^9, 3.863674209087281*^9}, 3.864191766373541*^9, 
   3.864191998362399*^9, {3.907304818512987*^9, 
   3.9073048191478367`*^9}},ExpressionUUID->"d7abafc7-c197-4eae-afff-\
bfe55954ea86"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "GetParametricShadowBoundary", "]"}], " ", ":=", 
    " ", 
    RowBox[{"DeleteDuplicates", "@", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"HorizonCondition", "\[Rule]", "False"}], "}"}], ",", 
       RowBox[{"Options", "[", "BoundaryBisection", "]"}]}], "]"}]}]}], ";"}],
   "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GetParametricShadowBoundary", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"rCam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Theta]Cam_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Phi]Cam_", "?", "RationalQ"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xCenter_", "?", "RationalQ"}], ",", 
        RowBox[{"yCenter_", "?", "RationalQ"}]}], "}"}], ",", " ", 
      RowBox[{"radialSweepDistance_", "?", "RationalQ"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[Psi]min_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Psi]max_", "?", "RationalQ"}], ",", 
        RowBox[{"\[Psi]stepSize_", "?", "RationalQ"}]}], "}"}], ",", " ", 
      "paramRules_", ",", " ", "precisionAim_", ",", " ", 
      RowBox[{"opts", ":", 
       RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"\[Psi]table", " ", "=", " ", 
         RowBox[{"Table", "[", 
          RowBox[{"\[Psi]Val", ",", 
           RowBox[{"{", 
            RowBox[{
            "\[Psi]Val", ",", "\[Psi]min", ",", "\[Psi]max", ",", 
             "\[Psi]stepSize"}], "}"}]}], "]"}]}], ",", "\n", "\t\t", 
        "return"}], "\n", "\t", "}"}], ",", "\n", "\t", "\n", "\t", 
      RowBox[{
       RowBox[{"DynamicModule", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{"{", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"counter", "=", "0"}], ",", "\n", "\t\t\t", 
           RowBox[{"starttime", " ", "=", " ", 
            RowBox[{"AbsoluteTime", "[", "]"}]}], ",", "\n", "\t\t\t", 
           "printValue1"}], "\n", "\t\t", "}"}], ",", "\n", "\t", "\n", 
         "\t\t", 
         RowBox[{
          RowBox[{"PrintTemporary", "[", 
           RowBox[{
           "\"\<boundary bisection in progress ... for image angle \
\[Psi]=\>\"", ",", " ", 
            RowBox[{"Dynamic", "[", 
             RowBox[{"N", "@", "printValue1"}], "]"}]}], "]"}], ";", "\n", 
          "\t\t", 
          RowBox[{"PrintTemporary", "[", 
           RowBox[{
           "\"\<estimated remaining time for evaluation: \>\"", ",", " ", 
            RowBox[{"Dynamic", "[", 
             RowBox[{"DateDifference", "[", 
              RowBox[{
               RowBox[{"DateList", "[", "starttime", "]"}], ",", 
               RowBox[{"DateList", "[", 
                RowBox[{"starttime", "+", 
                 RowBox[{"(", 
                  RowBox[{
                   FractionBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"AbsoluteTime", "[", "]"}], " ", "-", " ", 
                    "starttime"}], ")"}], "counter"], "*", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Length", "@", "\[Psi]table"}], " ", "-", " ", 
                    "counter"}], ")"}]}], ")"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "\"\<Day\>\"", ",", "\"\<Hour\>\"", ",", "\"\<Minute\>\"", 
                 ",", "\"\<Second\>\""}], "}"}]}], "]"}], "]"}]}], "]"}], ";",
           "\n", "\n", "\t\t", 
          RowBox[{"return", " ", "=", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"{", "\n", "\t\t\t", 
              RowBox[{
               RowBox[{
                RowBox[{"printValue1", "=", "#"}], ";", "\n", "\t\t\t", 
                RowBox[{"counter", " ", "=", " ", 
                 RowBox[{"counter", " ", "+", " ", "1"}]}], ";", "\n", 
                "\t\t\t", "#"}], ",", "\n", "\t\t\t", 
               RowBox[{"BoundaryBisection", "[", "\n", "\t\t\t\t", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], 
                  "}"}], ",", "\n", "\t\t\t\t", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"xCenter", ",", "yCenter"}], "}"}], ",", " ", 
                   RowBox[{"Rationalize", "[", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"xCenter", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Cos", "[", "#", "]"}], "*", 
                    "radialSweepDistance"}]}], ",", " ", 
                    RowBox[{"yCenter", " ", "+", " ", 
                    RowBox[{
                    RowBox[{"Sin", "[", "#", "]"}], "*", 
                    "radialSweepDistance"}]}]}], "}"}], ",", "100"}], "]"}], 
                    ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "}"}], ",", " ", "\n", 
                 "\t\t\t\t", "paramRules", ",", " ", "\n", "\t\t\t\t", 
                 "precisionAim", ",", "\n", "\t\t\t\t", 
                 RowBox[{"PrintTemporaryOption", "\[Rule]", "False"}], ",", 
                 "\n", "\t\t\t\t", "opts"}], "\n", "\t\t\t", "]"}]}], "\n", 
              "\t\t", "}"}], "&"}], "/@", "\[Psi]table"}]}], ";"}]}], "\n", 
        "\t", "]"}], ";", "\n", "\n", "\t", 
       RowBox[{"return", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "-", "xCenter"}], 
                  ")"}], "^", "2"}], " ", "+", "  ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", "yCenter"}], 
                  ")"}], "^", "2"}]}], "]"}]}], "}"}], ",", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], "}"}], "&"}], "/@", 
         "return"}]}], ";", "\n", "\t", "\n", "\t", 
       RowBox[{"Return", "@", "return"}], ";"}]}], "\n", "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GetParametricShadowBoundary", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"rCam_", ",", "\[Theta]Cam_", ",", "\[Phi]Cam_"}], "}"}], ",", 
     " ", 
     RowBox[{"{", 
      RowBox[{"xCenter_", ",", "yCenter_"}], "}"}], ",", " ", 
     "radialSweepDistance_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Psi]min_", ",", "\[Psi]max_", ",", "\[Psi]stepSize_"}], 
      "}"}], ",", " ", "paramRules_", ",", " ", "precisionAim_", ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\n", "\t", 
     RowBox[{
      RowBox[{
      "Print", "[", 
       "\"\<Input values of {rCam_,\[Theta]Cam_,\[Phi]Cam_}, \
radialSweepDistance, {xCenter_,yCenter_}, and/or \
{\[Psi]min_,\[Psi]max_,\[Psi]stepSize_} not recognized as infinite precision \
numbers. \nPlease use rational input only as this improves the employed \
numerical methods. \nYou can use Rationalize[input_,precision_]] where \
precision is the desired precision, e.g., 10^-100, to rationalize your \
numerical input.\>\"", "\n", "\t", "]"}], ";"}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.779428661874032*^9, 3.779428752099593*^9}, {
   3.779428886685162*^9, 3.779429091601529*^9}, {3.779429135631493*^9, 
   3.779429234186401*^9}, {3.7794292711394663`*^9, 3.7794294540305433`*^9}, {
   3.77942961509375*^9, 3.779429633060935*^9}, {3.779429671647929*^9, 
   3.779429672669039*^9}, {3.779429942328917*^9, 3.779430057165277*^9}, {
   3.7794301393312693`*^9, 3.779430207512785*^9}, {3.7794302911469707`*^9, 
   3.779430292030859*^9}, {3.779430966548071*^9, 3.779430977122168*^9}, {
   3.779431096328026*^9, 3.7794311604731703`*^9}, {3.779431205091792*^9, 
   3.779431398062357*^9}, {3.779431459521824*^9, 3.7794315658295193`*^9}, {
   3.779431618087348*^9, 3.779431765799613*^9}, 3.77943179662923*^9, {
   3.779431909884495*^9, 3.7794319157532043`*^9}, {3.779432660794362*^9, 
   3.779432744910604*^9}, {3.7794390539164867`*^9, 3.779439079489696*^9}, {
   3.804572546549924*^9, 3.804572658048655*^9}, {3.804576650213037*^9, 
   3.804576680601592*^9}, {3.804576774577001*^9, 3.804576816093568*^9}, {
   3.804576852871743*^9, 3.8045769029079447`*^9}, {3.804577052824107*^9, 
   3.8045770582866373`*^9}, {3.804577155555228*^9, 3.8045771564203253`*^9}, {
   3.8176298781582623`*^9, 3.817629925191259*^9}, 3.8176299596525803`*^9, 
   3.8176312507122583`*^9, 3.819438030083851*^9, {3.823089753813869*^9, 
   3.823089787265168*^9}},ExpressionUUID->"2bfd0531-7d83-4123-8d1d-\
f82c9951c3f8"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s NDSolve routine to obtain free-floating lensing-band \
bisection"
}], "Section",
 CellChangeTimes->{{3.7792874843306723`*^9, 3.779287497368887*^9}, {
  3.872935372825592*^9, 3.872935379758932*^9}, {3.907305075205347*^9, 
  3.907305126875246*^9}},ExpressionUUID->"04916804-8ef0-4000-b4b5-\
448139ffac6a"],

Cell[CellGroupData[{

Cell["\<\
free floating bisection of lensing bands (for potentially non-star-compact \
boundaries)\
\>", "Subsection",
 CellChangeTimes->{{3.818844167883945*^9, 3.8188441835303288`*^9}, {
  3.8605391873936768`*^9, 3.8605391942366962`*^9}, {3.8654721343388433`*^9, 
  3.865472160665155*^9}, {3.8722960713071737`*^9, 
  3.872296072883987*^9}},ExpressionUUID->"2dc1edaf-850a-4e36-a82e-\
8c3453c2680f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "GetLensingBand", "]"}], " ", ":=", " ", 
    RowBox[{"Join", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Options", "[", "NDSolve", "]"}], ",", "\n", "\t", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"PrintTemporaryOption", "\[Rule]", "False"}], ",", "\n", 
        "\t\t", 
        RowBox[{"HorizonCondition", "\[Rule]", "False"}], ",", "\n", "\t\t", 
        RowBox[{
        "UseShadowBoundaryForEntryPoint", " ", "\[Rule]", " ", "True"}], ",", 
        "\n", "\t\t", 
        RowBox[{"ShowProgressPlot", " ", "\[Rule]", " ", "True"}], ",", "\n", 
        "\t\t", 
        RowBox[{"PlotRange", " ", "\[Rule]", " ", "MultipleOfEntryPoint"}], 
        ",", "\n", "\t\t", 
        RowBox[{"InitialBisectionPrecision", "\[Rule]", 
         SuperscriptBox["10", 
          RowBox[{"-", "3"}]]}], ",", "\n", "\t\t", 
        RowBox[{"MaxBisectionPrecision", "\[Rule]", 
         SuperscriptBox["10", 
          RowBox[{"-", "1"}]]}], ",", "\n", "\t\t", 
        RowBox[{"MaxNumberOfSteps", " ", "\[Rule]", " ", "\[Infinity]"}], ",",
         "\n", "\t\t", 
        RowBox[{"OutOfBoundsValue", " ", "\[Rule]", " ", "False"}], ",", "\n",
         "\t\t", 
        RowBox[{"WhichLensingBand", " ", "\[Rule]", " ", "inner"}], ",", "\n",
         "\t\t", 
        RowBox[{"WhichLensingBandNumber", " ", "\[Rule]", " ", "1"}]}], "\n", 
       "\t", "}"}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GetLensingBand", "[", "\n", "\t\t", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"rCam_", "?", "RationalQ"}], ",", 
       RowBox[{"\[Theta]Cam_", "?", "RationalQ"}], ",", 
       RowBox[{"\[Phi]Cam_", "?", "RationalQ"}]}], "}"}], ",", " ", "\n", 
     "\t\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xCenterGuess_", "?", "RationalQ"}], ",", 
         RowBox[{"yCenterGuess_", "?", "RationalQ"}]}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"xOuterGuess_", "?", "RationalQ"}], ",", 
         RowBox[{"yOuterGuess_", "?", "RationalQ"}]}], "}"}]}], "}"}], ",", 
     " ", "\n", "\t\t", "paramRules_", ",", "\n", "\t\t", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
      "inits", ",", " ", "xScreen", ",", " ", "yScreen", ",", " ", "odes", 
       ",", "\n", "\t\t", 
       RowBox[{"\[Lambda]Max", "=", " ", 
        RowBox[{"3", "rCam"}]}], ",", "\n", "\t\t", "shadowBoundary", ",", 
       " ", "\n", "\t\t", 
       RowBox[{"boundaryPoints", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", "\n", "\t\t", "initUnit", ",", " ", 
       "initNormal", ",", "\n", "\t\t", "innerGuess", ",", " ", "outerGuess", 
       ",", "\n", "\t\t", "precisionAim", ",", " ", "ringNumber", ",", " ", 
       "initialStepSize", ",", " ", "minStepSize", ",", "\n", "\t\t", 
       RowBox[{"decreasePrecisionFactor", " ", "=", " ", "1.1"}]}], "\n", 
      "\t", "}"}], "\n", "\t", ",", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "check", " ", "option", " ", "value", " ", "for", " ", "precision", " ",
        "aim"}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"precisionAim", " ", "=", " ", 
       RowBox[{"If", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"NumberQ", "[", 
           RowBox[{"OptionValue", "[", "InitialBisectionPrecision", "]"}], 
           "]"}], "&&", 
          RowBox[{
           RowBox[{"OptionValue", "[", "InitialBisectionPrecision", "]"}], 
           ">", "0"}]}], ",", "\n", "\t\t", 
         RowBox[{"OptionValue", "[", "InitialBisectionPrecision", "]"}], ",", 
         "\n", "\t\t", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Option value for InitialBisectionPrecision must be a positive \
number.\>\"", "]"}], ";", "\n", "\t\t", 
          RowBox[{"Return", "[", "]"}], ";"}]}], "\n", "\t", "]"}]}], ";", 
      "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
       "fix", " ", "the", " ", "minStepSize", " ", "to", " ", "the", " ", 
        "precision", " ", "aim"}], "*)"}], "\n", "\t", 
      RowBox[{"minStepSize", " ", "=", " ", 
       RowBox[{"4", "*", "precisionAim"}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"ringNumber", " ", "=", " ", 
       RowBox[{"If", "[", "\n", "\t\t", 
        RowBox[{
         RowBox[{
          RowBox[{"IntegerQ", "[", 
           RowBox[{"OptionValue", "[", "WhichLensingBandNumber", "]"}], "]"}],
           "&&", 
          RowBox[{
           RowBox[{"OptionValue", "[", "WhichLensingBandNumber", "]"}], 
           "\[GreaterEqual]", "0"}]}], ",", "\n", "\t\t", 
         RowBox[{"OptionValue", "[", "WhichLensingBandNumber", "]"}], ",", 
         "\n", "\t\t", 
         RowBox[{
          RowBox[{
          "Print", "[", 
           "\"\<Option value for WhichLensingBandNumber must be an integer \
and \[GreaterEqual]0.\>\"", "]"}], ";", "\n", "\t\t", 
          RowBox[{"Return", "[", "]"}], ";"}]}], "\n", "\t", "]"}]}], ";", 
      "\n", "\t", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"prepare", " ", "the", " ", "ode", " ", "system"}], "*)"}], 
      "\n", "\t", 
      RowBox[{"Switch", "[", "\n", "\t\t", 
       RowBox[{"(*", "condition", "*)"}], "\n", "\t\t", 
       RowBox[{"WhichCoords", ",", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{"option", " ", "1"}], "*)"}], "\n", "\t\t", "BoyerLindquist",
         ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"odes", " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"GetNullGeodesic1stOrderODE", "[", 
             RowBox[{"x", ",", "k", ",", "\[Lambda]"}], "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"$t", "\[Rule]", 
               RowBox[{
                RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
              
              RowBox[{"$r", "\[Rule]", 
               RowBox[{
                RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
              
              RowBox[{"$\[Theta]", "\[Rule]", 
               RowBox[{
                RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
              
              RowBox[{"$\[Phi]", "\[Rule]", 
               RowBox[{
                RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
             "}"}]}], "/.", 
           RowBox[{"Rationalize", "[", 
            RowBox[{"paramRules", ",", 
             RowBox[{"precisionAim", "*", 
              SuperscriptBox["10", 
               RowBox[{"-", "100"}]]}]}], "]"}]}]}], ";", "\n", "\t\t", 
         RowBox[{"inits", " ", "=", " ", 
          RowBox[{
           RowBox[{"GetBoyerLindquistInitialValues", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", " ", "k", ",", " ", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"xScreen", ",", "yScreen"}], "}"}], ",", "0"}], "]"}], "/.", 
           RowBox[{"Rationalize", "[", 
            RowBox[{"paramRules", ",", 
             RowBox[{"precisionAim", "*", 
              SuperscriptBox["10", 
               RowBox[{"-", "100"}]]}]}], "]"}]}]}], ";"}], "\n", "\t\t", ",",
         "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{"option", " ", "2"}], "*)"}], "\n", "\t\t", "Kerr", ",", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{"odes", " ", "=", " ", 
          RowBox[{
           RowBox[{
            RowBox[{"GetNullGeodesic1stOrderODE", "[", 
             RowBox[{"x", ",", "k", ",", "\[Lambda]"}], "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"$v", "\[Rule]", 
               RowBox[{
                RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
              
              RowBox[{"$r", "\[Rule]", 
               RowBox[{
                RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
              
              RowBox[{"$\[Theta]", "\[Rule]", 
               RowBox[{
                RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], ",", 
              
              RowBox[{"$\[Chi]", "\[Rule]", 
               RowBox[{
                RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}], 
             "}"}]}], "/.", 
           RowBox[{"Rationalize", "[", 
            RowBox[{"paramRules", ",", 
             RowBox[{"precisionAim", "*", 
              SuperscriptBox["10", 
               RowBox[{"-", "100"}]]}]}], "]"}]}]}], ";", "\n", "\t\t", 
         RowBox[{"inits", " ", "=", " ", 
          RowBox[{
           RowBox[{"GetKerrInitialValues", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"x", ",", " ", "k", ",", " ", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"rCam", ",", "\[Theta]Cam", ",", "\[Phi]Cam"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"xScreen", ",", "yScreen"}], "}"}], ",", "$spin"}], 
            "]"}], "/.", 
           RowBox[{"Rationalize", "[", 
            RowBox[{"paramRules", ",", 
             RowBox[{"precisionAim", "*", 
              SuperscriptBox["10", 
               RowBox[{"-", "100"}]]}]}], "]"}]}]}], ";"}], "\n", "\t\t", ",",
         "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{"default", " ", "other"}], "*)"}], "\n", "\t\t", "_", ",", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<Suitable coordinates not yet set. Please use either \
SetBoyerLindquistCoords[] or SetKerrCoords[] to set the coordinates. Other \
coordinates are not yet supported.\>\"", "]"}], ";", "\n", "\t\t", 
         RowBox[{"Return", "[", "Null", "]"}]}]}], "\t\t", "\n", "\t", "]"}], 
      ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
       "check", " ", "whether", " ", "and", " ", "if", " ", "so", " ", "use", 
        " ", "shadow", " ", "boundary", " ", "to", " ", "determine", " ", 
        "entry", " ", "point"}], "*)"}], "\n", "\t", 
      RowBox[{"If", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"OptionValue", "[", "UseShadowBoundaryForEntryPoint", "]"}], 
        "\n", "\t\t", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"shadowBoundary", " ", "=", " ", 
          RowBox[{"Quiet", "@", 
           RowBox[{"BoundaryBisectionInternal", "[", "\n", "\t\t\t", 
            RowBox[{"odes", ",", " ", "inits", ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]", ",", "0", ",", "\[Lambda]Max"}], "}"}], 
             ",", " ", 
             RowBox[{"{", 
              RowBox[{"xScreen", ",", " ", "yScreen"}], "}"}], ",", " ", "\n",
              "\t\t\t", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"xCenterGuess", ",", "yCenterGuess"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"xOuterGuess", ",", "yOuterGuess"}], "}"}]}], "}"}], 
             ",", " ", "\n", "\t\t\t", "paramRules", ",", " ", 
             RowBox[{"precisionAim", "*", 
              SuperscriptBox["10", 
               RowBox[{"-", "1"}]]}], ",", "\n", "\t\t\t", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"Evaluate", "[", 
               RowBox[{"Cases", "[", 
                RowBox[{
                 RowBox[{"{", "opts", "}"}], ",", 
                 RowBox[{
                  RowBox[{"Rule", "[", 
                   RowBox[{"optName_", ",", "optVal_"}], "]"}], "/;", 
                  RowBox[{"MemberQ", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    "Options", "[", "BoundaryBisectionInternal", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "optName"}],
                    "]"}]}]}], "]"}], "]"}]}]}], "\n", "\t\t", "]"}]}]}], 
         ";"}]}], "\n", "\t", "]"}], ";", "\n", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"find", " ", "first", " ", "inner", " ", "lensing"}], "-", 
        RowBox[{"band", " ", "point"}]}], "*)"}], "\n", "\t", 
      RowBox[{"AppendTo", "[", "\n", "\t\t", 
       RowBox[{"boundaryPoints", ",", " ", "\n", "\t\t", 
        RowBox[{"LensingBandBisectionInternal", "[", "\n", "\t\t\t", 
         RowBox[{"odes", ",", " ", "inits", ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]", ",", "0", ",", "\[Lambda]Max"}], "}"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"xScreen", ",", " ", "yScreen"}], "}"}], ",", "\n", 
          "\t\t\t", 
          RowBox[{"Switch", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"OptionValue", "[", "WhichLensingBand", "]"}], "\n", 
            "\t\t\t\t", ",", "\n", "\t\t\t\t", "inner", "\n", "\t\t\t\t", ",",
             "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"PrintTemporary", "[", "\"\<Using ...\>\"", "]"}], ";", 
             "\n", "\t\t\t\t", 
             RowBox[{"Rationalize", "[", "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"{", "\n", "\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{
                  RowBox[{"PrintTemporary", "[", "\n", "\t\t\t\t\t\t\t", 
                   RowBox[{
                   "\"\<\\t... (i) user-specified \>\"", ",", " ", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"N", "@", 
                    RowBox[{"{", 
                    RowBox[{"xCenterGuess", ",", "yCenterGuess"}], "}"}]}], 
                    ",", "\n", "\t\t\t\t\t\t\t", 
                    "\"\< as inner guess, and ...\>\""}], "\n", 
                   "\t\t\t\t\t\t", "]"}], ";", "\n", "\t\t\t\t\t\t", 
                  RowBox[{"{", 
                   RowBox[{"xCenterGuess", ",", "yCenterGuess"}], "}"}]}], 
                 "\n", "\t\t\t\t\t\t", ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"If", "[", "\n", "\t\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{
                   "OptionValue", "[", "UseShadowBoundaryForEntryPoint", 
                    "]"}], "\n", "\t\t\t\t\t\t\t", ",", "\n", 
                   "\t\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"PrintTemporary", "[", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "\"\<\\t... (ii) shadow boundary at \>\"", ",", " ", "\n",
                     "\t\t\t\t\t\t\t\t", 
                    RowBox[{"N", "@", "shadowBoundary"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t", "\"\< as outer guess ...\>\""}], "\n",
                     "\t\t\t\t\t\t\t", "]"}], ";", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    "PrintTemporary", "[", 
                    "\"\<... to determine entry point for inner lensing band.\
\>\"", "]"}], ";", "\n", "\t\t\t\t\t\t\t", "shadowBoundary"}], "\n", 
                   "\t\t\t\t\t\t\t", ",", "\n", "\t\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"PrintTemporary", "[", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "\"\<\\t... (ii) user-specified \>\"", ",", " ", "\n", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{"N", "@", 
                    RowBox[{"{", 
                    RowBox[{"xOuterGuess", ",", "yOuterGuess"}], "}"}]}], ",",
                     "\n", "\t\t\t\t\t\t\t\t", 
                    "\"\< as outer guess ...\>\""}], "\n", "\t\t\t\t\t\t\t", 
                    "]"}], ";", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    "PrintTemporary", "[", 
                    "\"\<... to determine entry point for inner lensing band.\
\>\"", "]"}], ";", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{"xOuterGuess", ",", "yOuterGuess"}], "}"}]}]}], 
                  "\n", "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", "}"}], 
               ",", " ", "\n", "\t\t\t\t\t", 
               RowBox[{"precisionAim", "*", 
                SuperscriptBox["10", 
                 RowBox[{"-", "100"}]]}]}], "\n", "\t\t\t\t", "]"}]}], "\n", 
            "\t\t\t\t", ",", "\n", "\t\t\t\t", "outer", "\n", "\t\t\t\t", ",",
             "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"PrintTemporary", "[", "\"\<Using ...\>\"", "]"}], ";", 
             "\n", "\t\t\t\t", 
             RowBox[{"Rationalize", "[", "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"{", "\n", "\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{
                  RowBox[{"PrintTemporary", "[", "\n", "\t\t\t\t\t\t\t", 
                   RowBox[{
                   "\"\<\\t... (i) user-specified \>\"", ",", " ", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"N", "@", 
                    RowBox[{"{", 
                    RowBox[{"xOuterGuess", ",", "yOuterGuess"}], "}"}]}], ",",
                     "\n", "\t\t\t\t\t\t\t", 
                    "\"\< as outer guess and ...\>\""}], "\n", "\t\t\t\t\t\t",
                    "]"}], ";", "\n", "\t\t\t\t\t\t", 
                  RowBox[{"{", 
                   RowBox[{"xOuterGuess", ",", "yOuterGuess"}], "}"}]}], "\n",
                  "\t\t\t\t\t\t", ",", " ", "\n", "\t\t\t\t\t\t", 
                 RowBox[{"If", "[", "\n", "\t\t\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{
                   "OptionValue", "[", "UseShadowBoundaryForEntryPoint", 
                    "]"}], "\n", "\t\t\t\t\t\t\t", ",", "\n", 
                   "\t\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"PrintTemporary", "[", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "\"\<\\t... (ii) shadow boundary at \>\"", ",", " ", "\n",
                     "\t\t\t\t\t\t\t\t", 
                    RowBox[{"N", "@", "shadowBoundary"}], ",", "\n", 
                    "\t\t\t\t\t\t\t\t", "\"\< as inner guess ...\>\""}], "\n",
                     "\t\t\t\t\t\t\t", "]"}], ";", "\n", "\t\t\t\t\t\t\t", 
                    "shadowBoundary"}], "\n", "\t\t\t\t\t\t\t", ",", "\n", 
                   "\t\t\t\t\t\t\t", 
                   RowBox[{
                    RowBox[{"PrintTemporary", "[", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    "\"\<\\t... (ii) user-specified \>\"", ",", " ", "\n", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{"N", "@", 
                    RowBox[{"{", 
                    RowBox[{"xCenterGuess", ",", "yCenterGuess"}], "}"}]}], 
                    ",", "\n", "\t\t\t\t\t\t\t\t", 
                    "\"\< as inner guess ...\>\""}], "\n", "\t\t\t\t\t\t\t", 
                    "]"}], ";", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    "PrintTemporary", "[", 
                    "\"\<... to determine entry point for outer lensing band.\
\>\"", "]"}], ";", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{"xCenterGuess", ",", "yCenterGuess"}], "}"}]}]}], 
                  "\n", "\t\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t\t", "}"}], 
               ",", " ", "\n", "\t\t\t\t\t", 
               RowBox[{"precisionAim", "*", 
                SuperscriptBox["10", 
                 RowBox[{"-", "100"}]]}]}], "\n", "\t\t\t\t", "]"}]}], "\n", 
            "\t\t\t\t", ",", "\n", "\t\t\t\t", "___", "\n", "\t\t\t\t", ",", 
            "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{
             "Print", "[", 
              "\"\<Option WhichLensingBand must either be 'inner' or 'outer'.\
\>\"", "]"}], ";", "\n", "\t\t\t\t", 
             RowBox[{"Break", "[", "]"}], ";"}]}], "\n", "\t\t\t", "]"}], 
          "\n", "\t\t\t", ",", " ", "\n", "\t\t\t", "paramRules", ",", " ", 
          "ringNumber", ",", " ", "precisionAim", ",", " ", "\n", "\t\t\t", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"{", "opts", "}"}], ",", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"optName_", ",", "optVal_"}], "]"}], "/;", 
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "Options", "[", "LensingBandBisectionInternal", "]"}], "[", 
                  
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "optName"}], 
                "]"}]}]}], "]"}], "]"}]}]}], "\n", "\t\t", "]"}]}], "\n", 
       "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"PrintTemporary", "[", 
       RowBox[{"\"\<Entry point determined at \>\"", ",", 
        RowBox[{"boundaryPoints", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}], ",", "\"\<.\>\""}], "]"}], ";", 
      "\n", "\t", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
       "move", " ", "forward", " ", "outer", " ", "point", " ", "by", " ", 
        "minStepSize", " ", "along", " ", "normal", " ", "to", " ", "vector", 
        " ", "between", " ", "centerGuess", " ", "and", " ", "the", " ", 
        "first", " ", "boundary", " ", "point"}], "*)"}], "\n", "\t", 
      RowBox[{"initUnit", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"boundaryPoints", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}], " ", "-", " ", 
         RowBox[{"{", 
          RowBox[{"xCenterGuess", ",", "yCenterGuess"}], "}"}]}], ")"}]}], 
      ";", "\n", "\t", 
      RowBox[{"initNormal", " ", "=", " ", 
       RowBox[{
        RowBox[{"Reverse", "[", "initUnit", "]"}], "*", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "1"}], ",", "1"}], "}"}]}]}], ";", "\n", "\t", 
      RowBox[{"initUnit", " ", "=", " ", 
       RowBox[{"initUnit", "*", 
        FractionBox["minStepSize", 
         RowBox[{"Norm", "[", "initUnit", "]"}]]}]}], ";", "\n", "\t", 
      RowBox[{"initNormal", " ", "=", " ", 
       RowBox[{"initNormal", "*", 
        FractionBox["minStepSize", 
         RowBox[{"Norm", "[", "initNormal", "]"}]]}]}], ";", "\n", "\t", "\n",
       "\t", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"find", " ", "a", " ", "second", " ", "lensing"}], "-", 
        RowBox[{"band", " ", "point"}]}], "*)"}], "\n", "\t", 
      RowBox[{"AppendTo", "[", "\n", "\t\t", 
       RowBox[{"boundaryPoints", ",", " ", "\n", "\t\t", 
        RowBox[{"LensingBandBisectionInternal", "[", "\n", "\t\t\t", 
         RowBox[{"odes", ",", " ", "inits", ",", " ", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]", ",", "0", ",", "\[Lambda]Max"}], "}"}], ",", 
          " ", 
          RowBox[{"{", 
           RowBox[{"xScreen", ",", " ", "yScreen"}], "}"}], ",", " ", "\n", 
          "\t\t\t", 
          RowBox[{"Switch", "[", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"OptionValue", "[", "WhichLensingBand", "]"}], "\n", 
            "\t\t\t\t", ",", "\n", "\t\t\t\t", "inner", "\n", "\t\t\t\t", ",",
             "\n", "\t\t\t\t", 
            RowBox[{"Rationalize", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"boundaryPoints", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], " ", "-", " ", 
                 "initUnit"}], ",", " ", 
                RowBox[{
                 RowBox[{"boundaryPoints", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], " ", "+", " ", 
                 "initUnit", " ", "+", " ", "initNormal"}]}], "}"}], ",", " ", 
              RowBox[{"10", "^", 
               RowBox[{"-", "100"}]}]}], "]"}], "\n", "\t\t\t\t", ",", "\n", 
            "\t\t\t\t", "outer", "\n", "\t\t\t\t", ",", "\n", "\t\t\t\t", 
            RowBox[{"Rationalize", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"boundaryPoints", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], " ", "+", " ", 
                 "initUnit", " ", "+", " ", "initNormal"}], ",", " ", 
                RowBox[{
                 RowBox[{"boundaryPoints", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], " ", "-", " ", 
                 "initUnit"}]}], "}"}], ",", " ", 
              RowBox[{"10", "^", 
               RowBox[{"-", "100"}]}]}], "]"}]}], "\n", "\t\t\t", "]"}], ",", 
          " ", "\n", "\t\t\t", "paramRules", ",", " ", "ringNumber", ",", " ",
           "precisionAim", ",", " ", "\n", "\t\t\t", 
          RowBox[{"Sequence", "@@", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"Cases", "[", 
             RowBox[{
              RowBox[{"{", "opts", "}"}], ",", 
              RowBox[{
               RowBox[{"Rule", "[", 
                RowBox[{"optName_", ",", "optVal_"}], "]"}], "/;", 
               RowBox[{"MemberQ", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "Options", "[", "LensingBandBisectionInternal", "]"}], "[", 
                  
                  RowBox[{"[", 
                   RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "optName"}], 
                "]"}]}]}], "]"}], "]"}]}]}], "\n", "\t\t", "]"}]}], "\n", 
       "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
       "now", " ", "we", " ", "have", " ", "two", " ", "initial", " ", 
        "points", " ", "to", " ", "call", " ", 
        "FreeFloatingBisectionInnerLensingBandInternal"}], "*)"}], "\n", "\t", 
      RowBox[{"Switch", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"OptionValue", "[", "WhichLensingBand", "]"}], "\n", "\t\t", 
        ",", "\n", "\t\t", "inner", "\n", "\t\t", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"innerGuess", " ", "=", " ", 
          RowBox[{
           RowBox[{"boundaryPoints", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], " ", "-", " ", "initUnit"}]}], 
         ";", "\n", "\t\t", 
         RowBox[{"outerGuess", " ", "=", " ", 
          RowBox[{
           RowBox[{"boundaryPoints", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], " ", "+", " ", "initUnit", " ",
            "+", " ", "initNormal"}]}], ";"}], "\n", "\t\t", ",", "\n", 
        "\t\t", "outer", "\n", "\t\t", ",", "\n", "\t\t", 
        RowBox[{
         RowBox[{"innerGuess", " ", "=", " ", 
          RowBox[{
           RowBox[{"boundaryPoints", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], " ", "+", " ", "initUnit", " ",
            "+", " ", "initNormal"}]}], ";", "\n", "\t\t", 
         RowBox[{"outerGuess", " ", "=", " ", 
          RowBox[{
           RowBox[{"boundaryPoints", "[", 
            RowBox[{"[", 
             RowBox[{"-", "1"}], "]"}], "]"}], " ", "-", " ", "initUnit"}]}], 
         ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"DynamicModule", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"stepCounter", " ", "=", " ", "2"}], ",", "\n", "\t\t\t", 
          RowBox[{"plotRange", " ", "=", " ", 
           RowBox[{"If", "[", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"OptionValue", "[", "PlotRange", "]"}], "===", 
              "MultipleOfEntryPoint"}], ",", " ", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}], "*", 
              RowBox[{"Norm", "@", 
               RowBox[{"boundaryPoints", "[", 
                RowBox[{"[", "1", "]"}], "]"}]}], "*", "2"}], ",", "\n", 
             "\t\t\t\t", 
             RowBox[{"OptionValue", "[", "PlotRange", "]"}]}], "\n", "\t\t\t",
             "]"}]}], ",", "\n", "\t\t\t", "plotFrame", ",", " ", "plot"}], 
         "\n", "\t\t", "}"}], "\n", "\t\t", ",", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{
         "if", " ", "desired", " ", "prepare", " ", "progress", " ", "plot"}],
          "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"If", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"OptionValue", "[", "ShowProgressPlot", "]"}], "\n", 
           "\t\t\t", ",", "\n", "\t\t\t", 
           RowBox[{"(*", 
            RowBox[{"set", " ", "the", " ", "plot", " ", "frame"}], "*)"}], 
           "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"plotFrame", " ", "=", " ", 
             RowBox[{"ListPlot", "[", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"{", "}"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"PlotRange", " ", "\[Rule]", " ", "plotRange"}], ",", 
               "\n", "\t\t\t\t", 
               RowBox[{"FrameLabel", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", "\n", 
               "\t\t\t\t", 
               RowBox[{"LabelStyle", "->", 
                RowBox[{"{", 
                 RowBox[{"16", ",", "Black"}], "}"}]}], ",", "\n", "\t\t\t\t", 
               RowBox[{"ImageSize", "\[Rule]", "400"}], ",", 
               RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"GridLines", "\[Rule]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Table", "[", 
                   RowBox[{"ii", ",", 
                    RowBox[{"{", 
                    RowBox[{"ii", ",", 
                    RowBox[{"-", "100"}], ",", "100", ",", "5"}], "}"}]}], 
                   "]"}], ",", 
                  RowBox[{"Table", "[", 
                   RowBox[{"ii", ",", 
                    RowBox[{"{", 
                    RowBox[{"ii", ",", 
                    RowBox[{"-", "100"}], ",", "100", ",", "5"}], "}"}]}], 
                   "]"}]}], "}"}]}], ",", " ", "\n", "\t\t\t\t", 
               RowBox[{"GridLinesStyle", "\[Rule]", 
                RowBox[{"Directive", "[", 
                 RowBox[{"Thin", ",", 
                  RowBox[{"Lighter", "@", 
                   RowBox[{"Lighter", "@", 
                    RowBox[{"Lighter", "@", 
                    RowBox[{"Lighter", "@", "Gray"}]}]}]}]}], "]"}]}], ",", 
               "\n", "\t\t\t\t", 
               RowBox[{"Frame", "->", "True"}], ",", " ", 
               RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
               RowBox[{"FrameStyle", "->", 
                RowBox[{"Directive", "[", "Black", "]"}]}], ",", "\n", 
               "\t\t\t\t", 
               RowBox[{"FrameTicks", "\[Rule]", "Automatic"}]}], "\n", 
              "\t\t\t", "]"}]}], ";", "\n", "\t\t\t", 
            RowBox[{"(*", 
             RowBox[{
             "set", " ", "and", " ", "print", " ", "initial", " ", "version", 
              " ", "of", " ", "the", " ", "plot"}], "*)"}], "\n", "\t\t\t", 
            RowBox[{"plot", " ", "=", " ", 
             RowBox[{"Show", "[", "\n", "\t\t\t\t", 
              RowBox[{"plotFrame", ",", "\n", "\t\t\t\t", 
               RowBox[{"ListPlot", "[", "\n", "\t\t\t\t\t", 
                RowBox[{"boundaryPoints", ",", "\n", "\t\t\t\t\t", 
                 RowBox[{"Joined", "\[Rule]", "True"}], ",", " ", 
                 RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", " ", 
                 RowBox[{"PlotStyle", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"{", "Gray", "}"}], "}"}]}]}], "\n", "\t\t\t\t", 
                "]"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"{", "innerGuess", "}"}], ",", 
                 RowBox[{"PlotStyle", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"{", "Blue", "}"}], "}"}]}]}], "]"}], ",", "\n", 
               "\t\t\t\t", 
               RowBox[{"ListPlot", "[", 
                RowBox[{
                 RowBox[{"{", "outerGuess", "}"}], ",", 
                 RowBox[{"PlotStyle", "\[Rule]", 
                  RowBox[{"{", 
                   RowBox[{"{", "Red", "}"}], "}"}]}]}], "]"}]}], "\n", 
              "\t\t\t", "]"}]}], ";", "\n", "\t\t\t", 
            RowBox[{"PrintTemporary", "[", 
             RowBox[{"Dynamic", "@", "plot"}], "]"}], ";"}]}], "\n", "\t\t", 
          "]"}], ";", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
          "iterate", " ", "until", " ", "stop", " ", "criterion", " ", "is", 
           " ", "met"}], "*)"}], "\n", "\t\t", 
         RowBox[{"While", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Or", "[", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "boundaryPoints"}], "<", "10"}], ",", 
             " ", "\n", "\t\t\t\t", 
             RowBox[{"(*", 
              RowBox[{
              "take", " ", "at", " ", "least", " ", "10", " ", "steps"}], 
              "*)"}], "\n", "\t\t\t\t", 
             RowBox[{"And", "[", "\n", "\t\t\t\t\t", 
              RowBox[{"(*", 
               RowBox[{
               "stop", " ", "when", " ", "the", " ", "new", " ", "boundary", 
                " ", "point", " ", "is", " ", "no", " ", "longer", " ", "a", 
                " ", "number"}], "*)"}], "\n", "\t\t\t\t\t", 
              RowBox[{
               RowBox[{"NumberQ", "@", 
                RowBox[{"Norm", "[", 
                 RowBox[{"boundaryPoints", "[", 
                  RowBox[{"[", 
                   RowBox[{"-", "1"}], "]"}], "]"}], "]"}]}], ",", " ", "\n", 
               "\t\t\t\t\t", 
               RowBox[{"(*", 
                RowBox[{
                "stop", " ", "when", " ", "boundary", " ", "is", " ", 
                 "closed"}], "*)"}], "\n", "\t\t\t\t\t", 
               RowBox[{
                RowBox[{"Norm", "[", 
                 RowBox[{
                  RowBox[{"boundaryPoints", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}], " ", "-", " ", 
                  RowBox[{"boundaryPoints", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], " ", ">", " ", 
                RowBox[{
                 RowBox[{"Norm", "[", 
                  RowBox[{
                   RowBox[{"boundaryPoints", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "2"}], "]"}], "]"}], " ", "-", " ", 
                   RowBox[{"boundaryPoints", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], " ", "+", " ", 
                 "precisionAim"}]}], ",", "\n", "\t\t\t\t\t", 
               RowBox[{"(*", 
                RowBox[{
                "stop", " ", "when", " ", "MaxNumberOfSteps", " ", "is", " ", 
                 "reached"}], "*)"}], "\n", "\t\t\t\t\t", 
               RowBox[{"If", "[", "\n", "\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{
                  RowBox[{"IntegerQ", "@", 
                   RowBox[{"OptionValue", "[", "MaxNumberOfSteps", "]"}]}], "&&", 
                  RowBox[{
                   RowBox[{"OptionValue", "[", "MaxNumberOfSteps", "]"}], ">",
                    "0"}]}], "\n", "\t\t\t\t\t\t", ",", "\n", "\t\t\t\t\t\t", 
                 
                 RowBox[{
                  RowBox[{"Length", "@", "boundaryPoints"}], "<", 
                  RowBox[{"OptionValue", "[", "MaxNumberOfSteps", "]"}]}], 
                 "\n", "\t\t\t\t\t\t", ",", "\n", "\t\t\t\t\t\t", "True"}], 
                "\n", "\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
               RowBox[{"(*", 
                RowBox[{
                "stop", " ", "when", " ", "OutOfBoundsValue", " ", "is", " ", 
                 "reached"}], "*)"}], "\n", "\t\t\t\t\t", 
               RowBox[{"If", "[", "\n", "\t\t\t\t\t\t", 
                RowBox[{
                 RowBox[{"NumberQ", "@", 
                  RowBox[{"OptionValue", "[", "OutOfBoundsValue", "]"}]}], 
                 "\n", "\t\t\t\t\t\t", ",", "\n", "\t\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"Max", "[", 
                   RowBox[{"Abs", "@", 
                    RowBox[{"boundaryPoints", "[", 
                    RowBox[{"[", 
                    RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "<", 
                  RowBox[{"OptionValue", "[", "OutOfBoundsValue", "]"}]}], 
                 "\n", "\t\t\t\t\t\t", ",", "\n", "\t\t\t\t\t\t", "True"}], 
                "\n", "\t\t\t\t\t", "]"}]}], "\n", "\t\t\t\t", "]"}]}], "\n", 
            "\t\t\t", "]"}], "\n", "\t\t\t", ",", "\n", "\t\t\t", 
           RowBox[{"(*", 
            RowBox[{
            "take", " ", "one", " ", "step", " ", "and", " ", "potentially", 
             " ", "upate", " ", "the", " ", "precisionAim"}], "*)"}], "\n", 
           "\t\t\t", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "boundaryPoints", ",", " ", "innerGuess", ",", " ", 
               "outerGuess", ",", " ", "precisionAim"}], "}"}], " ", "=", " ", 
             RowBox[{
             "FreeFloatingBisectionInnerLensingBandStep", "[", "\n", 
              "\t\t\t\t", 
              RowBox[{"odes", ",", " ", "inits", ",", " ", 
               RowBox[{"{", 
                RowBox[{
                "\[Lambda]", ",", " ", "0", ",", " ", "\[Lambda]Max"}], "}"}],
                ",", " ", 
               RowBox[{"{", 
                RowBox[{"xScreen", ",", " ", "yScreen"}], "}"}], ",", " ", 
               "\n", "\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{"innerGuess", ",", " ", "outerGuess"}], "}"}], ",", 
               " ", "\n", "\t\t\t\t", "boundaryPoints", ",", "\n", "\t\t\t\t",
                "paramRules", ",", " ", "ringNumber", ",", " ", 
               "precisionAim", ",", " ", "\n", "\t\t\t\t", "minStepSize", ",",
                "\n", "\t\t\t\t", 
               RowBox[{"Sequence", "@@", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Cases", "[", 
                  RowBox[{
                   RowBox[{"{", "opts", "}"}], ",", 
                   RowBox[{
                    RowBox[{"Rule", "[", 
                    RowBox[{"optName_", ",", "optVal_"}], "]"}], "/;", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "Options", "[", 
                    "FreeFloatingBisectionInnerLensingBandStep", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "optName"}],
                     "]"}]}]}], "]"}], "]"}]}]}], "\n", "\t\t\t", "]"}]}], 
            ";", "\n", "\t\t\t", 
            RowBox[{"(*", 
             RowBox[{
             "relax", " ", "up", " ", "to", " ", "a", " ", "maximum", " ", 
              "precision"}], "*)"}], "\n", "\t\t\t", 
            RowBox[{"If", "[", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"TrueQ", "[", 
               RowBox[{"precisionAim", "<", 
                RowBox[{"OptionValue", "[", "MaxBisectionPrecision", "]"}]}], 
               "]"}], ",", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"precisionAim", " ", "=", " ", 
                RowBox[{"decreasePrecisionFactor", "*", "precisionAim"}]}], 
               ";"}]}], "\n", "\t\t\t", "]"}], ";", "\n", "\t\t\t", 
            RowBox[{"(*", 
             RowBox[{"also", " ", "update", " ", "the", " ", "minStepSize"}], 
             "*)"}], "\n", "\t\t\t", 
            RowBox[{"minStepSize", " ", "=", " ", 
             RowBox[{"4", "*", "precisionAim"}]}], ";", "\n", "\t\t\t", "\n", 
            "\t\t\t", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"if", " ", "desired"}], ",", " ", 
              RowBox[{"update", " ", "plot"}]}], "*)"}], "\n", "\t\t\t", 
            RowBox[{"If", "[", "\n", "\t\t\t\t", 
             RowBox[{
              RowBox[{"OptionValue", "[", "ShowProgressPlot", "]"}], "\n", 
              "\t\t\t\t", ",", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"stepCounter", "++"}], ";", "\n", "\t\t\t\t", 
               RowBox[{"plot", " ", "=", " ", 
                RowBox[{"Show", "[", "\n", "\t\t\t\t\t", 
                 RowBox[{"plotFrame", ",", "\n", "\t\t\t\t\t", 
                  RowBox[{"ListPlot", "[", "\n", "\t\t\t\t\t\t", 
                   RowBox[{"boundaryPoints", ",", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"Joined", "\[Rule]", "True"}], ",", " ", 
                    RowBox[{"PlotRange", "\[Rule]", "Full"}], ",", " ", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "Gray", "}"}], "}"}]}]}], "\n", "\t\t\t\t\t",
                    "]"}], ",", "\n", "\t\t\t\t\t", 
                  RowBox[{"ListPlot", "[", 
                   RowBox[{
                    RowBox[{"{", "innerGuess", "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "Blue", "}"}], "}"}]}]}], "]"}], ",", "\n", 
                  "\t\t\t\t\t", 
                  RowBox[{"ListPlot", "[", 
                   RowBox[{
                    RowBox[{"{", "outerGuess", "}"}], ",", 
                    RowBox[{"PlotStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"{", "Red", "}"}], "}"}]}]}], "]"}], ",", "\n", 
                  "\t\t\t\t\t", 
                  RowBox[{"Epilog", "\[Rule]", 
                   RowBox[{"{", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"Inset", "[", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"\"\<number of steps: \>\"", "<>", 
                    RowBox[{"ToString", "@", "stepCounter"}]}], ",", "Black", 
                    ",", "16"}], "]"}], ",", "0"}], "]"}], ",", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"NumberQ", "@", 
                    RowBox[{"First", "@", 
                    RowBox[{"Flatten", "@", "plotRange"}]}]}], ",", " ", 
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"First", "@", 
                    RowBox[{"Flatten", "@", "plotRange"}]}], "]"}], "*", 
                    "0.9"}], ",", " ", "0"}], "]"}]}], "}"}], ",", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"{", 
                    RowBox[{"Center", ",", "Top"}], "}"}]}], "\n", 
                    "\t\t\t\t\t\t", "]"}], "\n", "\t\t\t\t\t", "}"}]}]}], 
                 "\n", "\t\t\t\t", "]"}]}], ";"}]}], "\n", "\t\t\t", "]"}], 
            ";"}]}], "\n", "\t\t", "]"}], ";"}]}], "\n", "\t\t", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"if", " ", "desired"}], ",", " ", 
         RowBox[{"display", " ", "final", " ", "plot"}]}], "*)"}], "\n", 
       RowBox[{"(*", "\t\t", 
        RowBox[{
         RowBox[{"If", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"OptionValue", "[", "ShowProgressPlot", "]"}], "\n", 
           "\t\t\t", ",", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Print", "[", "plot", "]"}], ";"}]}], "\n", "\t\t", "]"}],
          ";"}], "*)"}], "\n", "\t", "]"}], ";", "\n", "\t", 
      RowBox[{"Return", "@", "boundaryPoints"}], ";"}]}], "\n", "]"}]}], 
  ";"}]}], "Code",
 CellChangeTimes->{{3.8653908481383877`*^9, 3.865390849231776*^9}, {
   3.865390893909433*^9, 3.865390933351982*^9}, {3.865391237123405*^9, 
   3.8653912431999483`*^9}, {3.865391282865911*^9, 3.865391344930822*^9}, {
   3.8653914696931057`*^9, 3.8653915416438723`*^9}, {3.8653916702735653`*^9, 
   3.865391684395475*^9}, {3.865391843856093*^9, 3.8653918741833363`*^9}, {
   3.865391915720146*^9, 3.865391930286489*^9}, {3.865392364967142*^9, 
   3.8653924123269587`*^9}, 3.865392765421792*^9, {3.865393405228039*^9, 
   3.865393446526395*^9}, 3.865393477118905*^9, {3.865395237744429*^9, 
   3.8653952417668047`*^9}, {3.8653953763444767`*^9, 3.865395377764646*^9}, {
   3.8653956877359667`*^9, 3.865395728891706*^9}, {3.865398669481183*^9, 
   3.8653987636699867`*^9}, {3.865407059063758*^9, 3.865407095943079*^9}, {
   3.865463458634884*^9, 3.865463463293003*^9}, {3.865463550258263*^9, 
   3.865463573429884*^9}, {3.8654636074520903`*^9, 3.8654636298322477`*^9}, {
   3.865463685199195*^9, 3.865463719187625*^9}, {3.86546377991215*^9, 
   3.865463887937934*^9}, {3.865463929785658*^9, 3.865464118056045*^9}, {
   3.865464266170775*^9, 3.865464293997217*^9}, {3.8654643360765*^9, 
   3.865464592112463*^9}, {3.8654647513690443`*^9, 3.865464998992506*^9}, {
   3.865465057141058*^9, 3.8654650971453533`*^9}, {3.8654651484474287`*^9, 
   3.865465393870575*^9}, {3.865465476115316*^9, 3.865465530978775*^9}, {
   3.8654656215523233`*^9, 3.8654656285151587`*^9}, {3.865465806967126*^9, 
   3.8654658283514957`*^9}, {3.86546590232071*^9, 3.865465929567738*^9}, {
   3.865465961918518*^9, 3.8654660112458067`*^9}, {3.8654660515056667`*^9, 
   3.8654660758215837`*^9}, 3.8654728896844597`*^9, {3.8654737404912663`*^9, 
   3.8654737887867413`*^9}, {3.865544230968834*^9, 3.8655442606652822`*^9}, {
   3.865544325112123*^9, 3.865544339426614*^9}, {3.8655445114688587`*^9, 
   3.8655445438602657`*^9}, {3.865544623721259*^9, 3.86554468011767*^9}, {
   3.8655447525481033`*^9, 3.8655449136506844`*^9}, {3.8655449478538113`*^9, 
   3.865545015994865*^9}, {3.86554679275054*^9, 3.865546802093925*^9}, {
   3.8655468339950027`*^9, 3.865546920725236*^9}, {3.86554695653651*^9, 
   3.865547006641233*^9}, {3.865547150540462*^9, 3.8655471698553057`*^9}, {
   3.86554724311972*^9, 3.865547372115335*^9}, {3.8655474095916357`*^9, 
   3.865547466619701*^9}, {3.865547650403699*^9, 3.865547662241316*^9}, {
   3.8655477581629868`*^9, 3.8655477659396667`*^9}, {3.865547927152927*^9, 
   3.865547961609722*^9}, {3.8655479969175034`*^9, 3.865547997075589*^9}, {
   3.865548089176836*^9, 3.865548108308321*^9}, 3.86554816386465*^9, {
   3.865548288440119*^9, 3.865548292416663*^9}, {3.86554832838902*^9, 
   3.865548378764639*^9}, {3.86554845479185*^9, 3.8655484596137133`*^9}, {
   3.865548527017839*^9, 3.8655486461544113`*^9}, {3.8655486820595407`*^9, 
   3.865548745893729*^9}, {3.865548785831627*^9, 3.865548836935308*^9}, {
   3.865548877804948*^9, 3.865548892915189*^9}, {3.865550478555731*^9, 
   3.8655505940149927`*^9}, {3.865550723224621*^9, 3.865550921525648*^9}, {
   3.8655512647161417`*^9, 3.865551350381921*^9}, {3.865551477760401*^9, 
   3.8655517460437803`*^9}, {3.865551786004272*^9, 3.865551818910933*^9}, {
   3.865551900629627*^9, 3.865552087575184*^9}, {3.8655521356607018`*^9, 
   3.865552188439333*^9}, {3.865552292109598*^9, 3.8655524713333063`*^9}, {
   3.865552628155846*^9, 3.865552657245105*^9}, {3.865552714051784*^9, 
   3.865552714707636*^9}, {3.8655528763655376`*^9, 3.8655529483977327`*^9}, {
   3.8655530349964*^9, 3.865553122843275*^9}, {3.865553195957423*^9, 
   3.865553197654405*^9}, {3.865553274790123*^9, 3.865553501945446*^9}, {
   3.865553729587791*^9, 3.8655537596510267`*^9}, {3.8655538289368887`*^9, 
   3.865553857212492*^9}, {3.865553988733645*^9, 3.8655539956042747`*^9}, {
   3.865554669674049*^9, 3.865554926922928*^9}, {3.8655550006210737`*^9, 
   3.865555159855138*^9}, {3.865555208614835*^9, 3.865555335893814*^9}, {
   3.865555503342655*^9, 3.865555558870056*^9}, {3.865555606148711*^9, 
   3.865555607690708*^9}, {3.866507934915925*^9, 3.866507974122683*^9}, {
   3.867269941895961*^9, 3.867269944423677*^9}, {3.8672702456434383`*^9, 
   3.867270247990448*^9}, {3.8672714526136093`*^9, 3.867271457570966*^9}, {
   3.867272109366911*^9, 3.8672721121668787`*^9}, {3.867294529474539*^9, 
   3.867294530478853*^9}, {3.8672949276542997`*^9, 3.867294936106347*^9}, {
   3.867295026721755*^9, 3.86729521743463*^9}, {3.86729547127072*^9, 
   3.867295484662088*^9}, {3.867297096931428*^9, 3.867297104840785*^9}, {
   3.867297142435833*^9, 3.8672972423347473`*^9}, {3.867297287861456*^9, 
   3.867297391199087*^9}, {3.867297459052649*^9, 3.867297478436825*^9}, {
   3.875374702069097*^9, 3.875374722072174*^9}, {3.875374817024845*^9, 
   3.875374818795842*^9}, {3.875374912215705*^9, 3.875374917094697*^9}, 
   3.875375153833432*^9, {3.875375251880013*^9, 3.8753752519867783`*^9}, {
   3.875375490671414*^9, 3.8753754908081427`*^9}, {3.875375645134975*^9, 
   3.875375716299397*^9}, {3.8753759426529922`*^9, 3.875375946555781*^9}, {
   3.8753763777519608`*^9, 3.8753763812738743`*^9}, {3.8753781095141706`*^9, 
   3.875378109785205*^9}, {3.875378298107583*^9, 3.875378310157387*^9}, {
   3.8753783548997183`*^9, 3.8753783562248793`*^9}, {3.875378410865533*^9, 
   3.875378436548332*^9}, {3.875378598567235*^9, 3.875378617404655*^9}, {
   3.875378693912773*^9, 3.875378738479608*^9}, {3.8753787755418577`*^9, 
   3.875378849207239*^9}, {3.8753788808558702`*^9, 3.875378899241272*^9}, 
   3.875379059816492*^9, {3.8753791891028967`*^9, 3.875379244438933*^9}, {
   3.875379311568371*^9, 3.875379345749748*^9}, {3.8753794884214163`*^9, 
   3.875379488454987*^9}, {3.875379528926136*^9, 3.87537957204741*^9}, {
   3.875379610873597*^9, 3.8753797372294416`*^9}, {3.875379776886613*^9, 
   3.875379850197522*^9}, 3.8753815847036467`*^9, {3.877537287587904*^9, 
   3.8775372890608177`*^9}, {3.907304586866366*^9, 3.907304617510378*^9}, {
   3.90733396396942*^9, 
   3.90733397141753*^9}},ExpressionUUID->"eae3b64c-4905-4a15-a133-\
7135df9cb26c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
    "Options", "[", "FreeFloatingBisectionInnerLensingBandStep", "]"}], " ", ":=",
     " ", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PrintTemporaryOption", "\[Rule]", "True"}], ",", " ", 
        RowBox[{"HorizonCondition", "\[Rule]", "False"}]}], "}"}], ",", 
      RowBox[{"Options", "[", "NDSolve", "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"FreeFloatingBisectionInnerLensingBandStep", "[", "\n", "\t\t", 
    RowBox[{"odes_", ",", " ", "inits_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]_", ",", "\[Lambda]Min_", ",", "\[Lambda]Max_"}], 
      "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"xScreen_", ",", " ", "yScreen_"}], "}"}], ",", " ", "\n", 
     "\t\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"inner_List", "/;", 
        RowBox[{
         RowBox[{"Length", "@", "inner"}], "==", "2"}]}], ",", " ", 
       RowBox[{"outer_List", "/;", 
        RowBox[{
         RowBox[{"Length", "@", "outer"}], "==", "2"}]}]}], "}"}], ",", " ", 
     "\n", "\t\t", 
     RowBox[{"boundaryPoints_List", "/;", 
      RowBox[{
       RowBox[{"Length", "@", "boundaryPoints"}], ">=", "2"}]}], ",", "\n", 
     "\t\t", "paramRules_", ",", " ", "ringNumber_", ",", " ", 
     "precisionAim_", ",", " ", "minStepSize_", ",", "\n", "\t\t", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "\t", "]"}], " ", ":=", 
   " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{
       RowBox[{"prev", " ", "=", " ", 
        RowBox[{"boundaryPoints", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"prevPrev", " ", "=", " ", 
        RowBox[{"boundaryPoints", "[", 
         RowBox[{"[", 
          RowBox[{"-", "2"}], "]"}], "]"}]}], ",", "\n", "\t\t", "tangent", 
       ",", " ", "innerToOuter", ",", " ", "projection", ",", "\n", "\t\t", 
       RowBox[{"new", "=", "0"}], ",", "\n", "\t\t", 
       RowBox[{"innerNew", "=", "0"}], ",", " ", 
       RowBox[{"outerNew", "=", "0"}], ",", "\n", "\t\t", "boundaryPointsNew",
        ",", "\n", "\t\t", "testPlot1", ",", " ", "testPlot2", ",", "\n", 
       "\t\t", 
       RowBox[{"internalPrecisionAim", " ", "=", " ", "precisionAim"}], ",", 
       "\n", "\t\t", 
       RowBox[{"increasePrecisionFactor", " ", "=", " ", "2"}]}], "\n", "\t", 
      "}"}], "\n", "\t", ",", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "determine", " ", "the", " ", "prev", " ", "vector", " ", "tangent", 
       " ", "to", " ", "the", " ", "boundary"}], "*)"}], "\n", "\t", 
     RowBox[{
      RowBox[{"tangent", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"prev", " ", "-", " ", "prevPrev"}], ")"}], 
        RowBox[{"Sqrt", "[", "2", "]"}]}]}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"ensure", " ", "minimal", " ", "stepsize"}], "*)"}], "\n", 
      "\t", 
      RowBox[{"If", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{"Norm", "[", "tangent", "]"}], "<", "minStepSize"}], ",", 
        " ", "\n", "\t\t", 
        RowBox[{"tangent", " ", "=", " ", 
         RowBox[{"tangent", "*", 
          FractionBox["minStepSize", 
           RowBox[{"Norm", "[", "tangent", "]"}]]}]}]}], "\n", "\t", "]"}], 
      ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", "\n", "\t\t", 
       RowBox[{
        RowBox[{
        "check", " ", "that", " ", "the", " ", "NEW", " ", "boundary", " ", 
         "lies", " ", "between", " ", "the", " ", "points", " ", "moved", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"forward", "\n", "\t\t", "--"}], "--"}], "--"}], 
                   "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], "--"}], 
            "--"}], "--"}], "--"}], "\n", "\t\t", "To", " ", "do", " ", 
         "so"}], ",", " ", 
        RowBox[{
        "we", " ", "make", " ", "sure", " ", "that", " ", "the", " ", 
         "bisection", " ", "does", " ", "not", " ", "converge", " ", "to", 
         " ", "innerNew", " ", "or", " ", "outerNew"}], ",", "\n", "\t\t", 
        RowBox[{
        "since", " ", "this", " ", "signals", " ", "that", " ", "one", " ", 
         "of", " ", "the", " ", "lensing", " ", "band", " ", "edges", " ", 
         "has", " ", "been", " ", 
         RowBox[{"crossed", ".", "\n", "\t\t", 
          RowBox[{"(", 
           RowBox[{
           "Presumably", " ", "the", " ", "one", " ", "that", " ", "is", " ", 
            "NOT", " ", "being", " ", 
            RowBox[{"determined", "."}]}], ")"}]}], "\n", "\t\t", "If", " ", 
         "so"}], ",", " ", 
        RowBox[{
        "decrease", " ", "step", " ", "size", " ", "and", " ", "try", " ", 
         RowBox[{"again", "."}]}]}], "\n", "\t", "*)"}], "\n", "\t", 
      RowBox[{"While", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{"Or", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"Norm", "[", 
            RowBox[{"innerNew", "-", "new"}], "]"}], "\[LessEqual]", 
           RowBox[{"internalPrecisionAim", "*", "increasePrecisionFactor"}]}],
           ",", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"Norm", "[", 
            RowBox[{"outerNew", "-", "new"}], "]"}], "\[LessEqual]", 
           RowBox[{
           "internalPrecisionAim", "*", "increasePrecisionFactor"}]}]}], "\n",
          "\t\t", "]"}], "\n", "\t\t", ",", "\n", "\t\t", "\n", "\t\t", 
        RowBox[{"(*", 
         RowBox[{
         "vector", " ", "pointing", " ", "from", " ", "inner", " ", "to", " ",
           "outer"}], "*)"}], "\n", "\t\t", 
        RowBox[{
         RowBox[{"innerToOuter", " ", "=", " ", 
          RowBox[{"(", 
           RowBox[{"outer", " ", "-", " ", "inner"}], ")"}]}], ";", "\n", 
         "\t\t", 
         RowBox[{"innerToOuter", " ", "=", " ", 
          RowBox[{"innerToOuter", "*", 
           FractionBox[
            RowBox[{"Norm", "[", "tangent", "]"}], 
            RowBox[{"Norm", "[", "innerToOuter", "]"}]]}]}], ";", "\n", 
         "\t\t", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
          "balance", " ", "out", " ", "inner", " ", "and", " ", "outer", " ", 
           "around", " ", "tangent"}], "*)"}], "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{"NOTE", ":", " ", 
            RowBox[{
            "from", " ", "previous", " ", "bisection", " ", "inner"}]}], ",", 
           " ", "prev", ",", " ", 
           RowBox[{
           "and", " ", "outer", " ", "must", " ", "lie", " ", "on", " ", "a", 
            " ", "line"}]}], "*)"}], "\n", "\t\t", 
         RowBox[{"innerNew", " ", "=", " ", 
          RowBox[{"prev", " ", "-", " ", 
           FractionBox["innerToOuter", "2"]}]}], ";", "\n", "\t\t", 
         RowBox[{"outerNew", " ", "=", " ", 
          RowBox[{"prev", " ", "+", " ", 
           FractionBox["innerToOuter", "2"]}]}], ";", "\n", "\t\t", 
         RowBox[{"innerToOuter", " ", "=", " ", 
          RowBox[{"(", 
           RowBox[{"outerNew", " ", "-", " ", "innerNew"}], ")"}]}], ";", 
         "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
          "project", " ", "tangent", " ", "onto", " ", "vector", " ", 
           "pointing", " ", "from", " ", "inner", " ", "to", " ", "outer", 
           " ", "bisection", " ", "point"}], "*)"}], "\n", "\t\t", 
         RowBox[{"projection", " ", "=", " ", 
          RowBox[{"innerToOuter", ".", "tangent"}]}], ";", "\n", "\t", "\n", 
         "\t\t", 
         RowBox[{"(*", 
          RowBox[{
          "ensure", " ", "that", " ", "the", " ", "PROJECTED", " ", 
           "boundary", " ", "lies", " ", "between", " ", "the", " ", "points",
            " ", "moved", " ", "forward"}], "*)"}], "\n", "\t\t", 
         RowBox[{"If", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"innerNew", " ", "-", " ", "prev"}], "]"}], " ", "<", 
            " ", 
            RowBox[{"Norm", "[", "tangent", "]"}]}], ",", "\n", "\t\t\t", 
           RowBox[{"innerNew", " ", "=", " ", 
            RowBox[{"innerNew", " ", "-", " ", "innerToOuter"}]}]}], "\n", 
          "\t\t", "]"}], ";", "\n", "\t\t", 
         RowBox[{"If", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{
            RowBox[{"Norm", "[", 
             RowBox[{"outerNew", " ", "-", " ", "prev"}], "]"}], " ", "<", 
            " ", 
            RowBox[{"Norm", "[", "tangent", "]"}]}], ",", "\n", "\t\t\t", 
           RowBox[{"outerNew", " ", "=", " ", 
            RowBox[{"outerNew", " ", "+", " ", "innerToOuter"}]}]}], "\n", 
          "\t\t", "]"}], ";", "\n", "\t", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{"if", " ", "projection", " ", "is", " ", "positive", " ", 
           RowBox[{"(", "negative", ")"}], " ", "move", " ", "forward", " ", 
           "outer", " ", 
           RowBox[{"(", "inner", ")"}], " ", "bisection", " ", "point"}], 
          "*)"}], "\n", "\t\t", 
         RowBox[{"If", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"projection", " ", ">", " ", "0"}], "\n", "\t\t\t", ",", 
           "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"innerNew", " ", "=", " ", 
             RowBox[{"innerNew", " ", "+", " ", "tangent"}]}], ";", "\n", 
            "\t\t\t", 
            RowBox[{"outerNew", " ", "=", " ", "outerNew"}], ";"}], "\n", 
           "\t\t\t", ",", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"innerNew", " ", "=", " ", "innerNew"}], ";", "\n", 
            "\t\t\t", 
            RowBox[{"outerNew", " ", "=", " ", 
             RowBox[{"outerNew", " ", "+", " ", "tangent"}]}], ";"}]}], "\n", 
          "\t\t", "]"}], ";", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
          "perform", " ", "bisection", " ", "to", " ", "get", " ", "the", " ",
            "next", " ", "point", " ", "on", " ", "the", " ", "boundary"}], 
          "*)"}], "\n", "\t\t", 
         RowBox[{"new", " ", "=", " ", 
          RowBox[{"LensingBandBisectionInternal", "[", "\n", "\t\t\t", 
           RowBox[{"odes", ",", " ", "inits", ",", " ", 
            RowBox[{"{", 
             RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}], 
             "}"}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"xScreen", ",", " ", "yScreen"}], "}"}], ",", " ", "\n", 
            "\t\t\t", 
            RowBox[{"Rationalize", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"innerNew", ",", " ", "outerNew"}], "}"}], ",", 
              RowBox[{"10", "^", 
               RowBox[{"-", "100"}]}]}], "]"}], ",", " ", "\n", "\t\t\t", 
            "paramRules", ",", " ", "ringNumber", ",", " ", 
            "internalPrecisionAim", ",", " ", "\n", "\t\t\t", "opts"}], "\n", 
           "\t\t", "]"}]}], ";", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"(*", 
          RowBox[{
          "half", " ", "the", " ", "tangent", " ", "in", " ", "case", " ", 
           "while", " ", "proceeds"}], "*)"}], "\n", "\t\t", 
         RowBox[{"tangent", " ", "=", " ", 
          RowBox[{"tangent", "/", "increasePrecisionFactor"}]}], ";", "\n", 
         "\t\t", 
         RowBox[{"internalPrecisionAim", " ", "=", " ", 
          RowBox[{
          "internalPrecisionAim", "/", "increasePrecisionFactor"}]}]}]}], 
       "\n", "\t", "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{
       "add", " ", "new", " ", "point", " ", "to", " ", "the", " ", "list", 
        " ", "and", " ", "return"}], "*)"}], "\n", "\t", 
      RowBox[{"boundaryPointsNew", " ", "=", " ", 
       RowBox[{"Append", "[", 
        RowBox[{"boundaryPoints", ",", "new"}], "]"}]}], ";", "\t", "\n", 
      "\t", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"boundaryPointsNew", ",", "innerNew", ",", "outerNew", ",", 
         RowBox[{"internalPrecisionAim", "*", "increasePrecisionFactor"}]}], 
        "}"}], "]"}]}]}], "\n", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.865384810088036*^9, 3.865384824093643*^9}, {
   3.865384883076229*^9, 3.86538489833005*^9}, {3.865384928459826*^9, 
   3.865384939362225*^9}, {3.8653849747242193`*^9, 3.8653850622646093`*^9}, {
   3.865385153681156*^9, 3.8653852897002697`*^9}, {3.865385387284329*^9, 
   3.8653857541617613`*^9}, {3.8653858161864567`*^9, 3.865385820838294*^9}, {
   3.865385857151617*^9, 3.865385993027218*^9}, {3.865387399755273*^9, 
   3.865387630196965*^9}, {3.8653876667428627`*^9, 3.865387689142308*^9}, {
   3.865387726410074*^9, 3.865387928010542*^9}, {3.865387975796863*^9, 
   3.865388040427248*^9}, {3.865388114968864*^9, 3.865388117870772*^9}, 
   3.8653884810641003`*^9, {3.865388575186823*^9, 3.86538865550404*^9}, {
   3.865388718761836*^9, 3.865388789170556*^9}, {3.8653888567281837`*^9, 
   3.865388920875163*^9}, {3.865388961846074*^9, 3.865389171832164*^9}, {
   3.865389707012244*^9, 3.8653897789680243`*^9}, {3.8653898202705803`*^9, 
   3.865389870210855*^9}, {3.865389902106051*^9, 3.8653899190888567`*^9}, {
   3.865389951319483*^9, 3.865390049131415*^9}, {3.8653901086257677`*^9, 
   3.865390128099927*^9}, {3.865390164329686*^9, 3.86539026496084*^9}, {
   3.86539040243778*^9, 3.865390444077895*^9}, {3.865390490788179*^9, 
   3.8653904950504847`*^9}, {3.8653905410446033`*^9, 3.865390601527363*^9}, {
   3.8653908386666613`*^9, 3.865390844722601*^9}, {3.865392154219974*^9, 
   3.8653921900791483`*^9}, {3.865392248236966*^9, 3.865392277382944*^9}, 
   3.865392313923119*^9, {3.865392475406979*^9, 3.8653925085053997`*^9}, {
   3.8653926424640102`*^9, 3.865392677619104*^9}, {3.865392789642445*^9, 
   3.865392793508297*^9}, {3.865392847628841*^9, 3.8653929344745197`*^9}, {
   3.865393003157878*^9, 3.865393027247529*^9}, {3.865393063810433*^9, 
   3.8653930642722483`*^9}, {3.865393104293054*^9, 3.865393134832955*^9}, 
   3.865393241109972*^9, {3.865393852010625*^9, 3.86539393876362*^9}, {
   3.865394107951297*^9, 3.865394112105838*^9}, {3.8653941423059263`*^9, 
   3.865394147130471*^9}, {3.8653942285828114`*^9, 3.865394231544541*^9}, {
   3.865394384458353*^9, 3.865394395209741*^9}, {3.865394451356942*^9, 
   3.865394456601204*^9}, {3.865394547170644*^9, 3.8653945918960123`*^9}, {
   3.86539477359163*^9, 3.865394781220483*^9}, {3.865394942413512*^9, 
   3.865394945907235*^9}, {3.8653949785266647`*^9, 3.865395038116746*^9}, {
   3.865395146947502*^9, 3.8653951713746433`*^9}, 3.865395252139292*^9, {
   3.8653953397851067`*^9, 3.8653953440435677`*^9}, {3.8653956072325068`*^9, 
   3.865395681157878*^9}, {3.865395888044585*^9, 3.865395890395658*^9}, {
   3.865395943624721*^9, 3.865396017320376*^9}, {3.865396148135873*^9, 
   3.865396177157856*^9}, {3.865397053333046*^9, 3.8653970936140547`*^9}, {
   3.8653971653945913`*^9, 3.865397222772538*^9}, {3.865397255708003*^9, 
   3.865397280927801*^9}, {3.865397334437531*^9, 3.86539734197917*^9}, 
   3.865397456850309*^9, {3.865397498223579*^9, 3.865397503721058*^9}, {
   3.865397545277877*^9, 3.865397693393702*^9}, {3.865397828803919*^9, 
   3.8653979798578653`*^9}, {3.8653980675035763`*^9, 3.865398149656863*^9}, {
   3.865398209762458*^9, 3.8653982168790083`*^9}, {3.865398308726556*^9, 
   3.865398359214962*^9}, {3.865398588319953*^9, 3.8653985896514893`*^9}, 
   3.865398626490778*^9, 3.865398772445277*^9, {3.865398987585909*^9, 
   3.8653990278434*^9}, {3.865399061997539*^9, 3.865399077267303*^9}, {
   3.865399120263452*^9, 3.865399125118843*^9}, {3.865399281125228*^9, 
   3.8653993005023413`*^9}, {3.8653993571719227`*^9, 3.865399362398831*^9}, 
   3.865399443138935*^9, {3.865463446775714*^9, 3.865463513195231*^9}, {
   3.8654637593236027`*^9, 3.8654637699022284`*^9}, {3.865464183407876*^9, 
   3.865464185768502*^9}, {3.865464234021665*^9, 3.8654642359421377`*^9}, 
   3.865553999639658*^9, 3.865554556204331*^9, {3.867268525024571*^9, 
   3.867268530745805*^9}, {3.867268640602058*^9, 3.867268646827704*^9}, {
   3.867268682235009*^9, 3.86726868837145*^9}, {3.867268722872965*^9, 
   3.867268798785939*^9}, {3.867268938558612*^9, 3.8672689398752317`*^9}, {
   3.867268997918934*^9, 3.867269145091354*^9}, {3.867269198993826*^9, 
   3.867269232137313*^9}, 3.8672694698912277`*^9, 3.867269546666374*^9, {
   3.867270484423449*^9, 3.867270493309066*^9}, {3.8672706706389923`*^9, 
   3.867270697530479*^9}, {3.867271122546507*^9, 3.867271198480052*^9}, {
   3.867271233900796*^9, 3.867271296705983*^9}, {3.867271574492902*^9, 
   3.867271575230719*^9}, {3.867271690425169*^9, 3.867271726913241*^9}, {
   3.867271822468006*^9, 3.867271832318696*^9}, 3.8672718636945953`*^9, {
   3.8672719413655252`*^9, 3.8672719527354403`*^9}, {3.86727234603773*^9, 
   3.867272354995343*^9}, {3.8672724868182697`*^9, 3.8672725455807133`*^9}, {
   3.867272612837409*^9, 3.867272618643488*^9}, 3.8672728112566547`*^9, {
   3.867272880368372*^9, 3.867272908271347*^9}, 3.867272965448038*^9, {
   3.867273009691649*^9, 3.867273013771266*^9}, {3.867274707710977*^9, 
   3.867274726487948*^9}, {3.867274863365646*^9, 3.8672748747070837`*^9}, {
   3.86727492213468*^9, 3.86727507543346*^9}, {3.867275139289666*^9, 
   3.8672751562559233`*^9}, {3.867275196748786*^9, 3.8672752257330647`*^9}, {
   3.867275353458168*^9, 3.867275371186577*^9}, {3.867290456879466*^9, 
   3.867290535731434*^9}, {3.8672906049370413`*^9, 3.867290647727607*^9}, {
   3.867290688933797*^9, 3.8672906916905127`*^9}, {3.867293205183258*^9, 
   3.8672932208735523`*^9}, {3.867293318393919*^9, 3.867293326153262*^9}, {
   3.8672933705584517`*^9, 3.867293415695683*^9}, 3.8672935837770576`*^9, {
   3.867293635190035*^9, 3.8672937293219137`*^9}, {3.8672939193347282`*^9, 
   3.867293939472752*^9}, {3.867294014469119*^9, 3.867294054464312*^9}, {
   3.8672941040231943`*^9, 3.867294116978565*^9}, {3.867294251387807*^9, 
   3.867294279717751*^9}, {3.867294338958931*^9, 3.867294411786257*^9}, {
   3.867294731248094*^9, 3.867294757423648*^9}, {3.867294815114975*^9, 
   3.8672948219473124`*^9}, {3.8753765001143847`*^9, 3.875376506428976*^9}, {
   3.875376627657276*^9, 3.875376643379252*^9}, {3.8753767405988894`*^9, 
   3.87537676232337*^9}, {3.8753774538000307`*^9, 3.8753775934659977`*^9}, {
   3.875378026493413*^9, 3.875378082989628*^9}, {3.8753784653620367`*^9, 
   3.8753784921355963`*^9}},ExpressionUUID->"1349a99f-2fac-4453-b1ae-\
f1848d5656b9"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "LensingBandBisectionInternal", "]"}], " ", ":=", 
    " ", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PrintTemporaryOption", "\[Rule]", "True"}], ",", " ", 
        RowBox[{"HorizonCondition", "\[Rule]", "False"}]}], "}"}], ",", 
      RowBox[{"Options", "[", "NDSolve", "]"}]}], "]"}]}], ";"}], 
  "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"LensingBandBisectionInternal", "[", 
    RowBox[{"odes_", ",", " ", "inits_", ",", " ", 
     RowBox[{"{", 
      RowBox[{"\[Lambda]_", ",", "\[Lambda]Min_", ",", "\[Lambda]Max_"}], 
      "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"xScreen_", ",", " ", "yScreen_"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"xInnerScreen_", ",", "yInnerScreen_"}], "}"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"xOuterScreen_", ",", "yOuterScreen_"}], "}"}]}], "}"}], ",", 
     " ", "paramRules_", ",", " ", "ringNumber_", ",", " ", "precisionAim_", 
     ",", " ", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{"sol", ",", "\n", "\t\t", "count"}], "\n", "\t", "}"}], ",", 
     "\n", "\t", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}], ",", " ", 
        "\n", "\t\t", 
        RowBox[{
         RowBox[{"PrintTemporary", "[", 
          RowBox[{
          "\"\<current inner lensing-band bisection: x \[Element] [\>\"", ",", 
           RowBox[{"N", "@", "xInnerScreen"}], ",", "\"\<, \>\"", ",", 
           RowBox[{"N", "@", "xOuterScreen"}], ",", 
           "\"\<] and y \[Element] [\>\"", ",", 
           RowBox[{"N", "@", "yInnerScreen"}], ",", "\"\<, \>\"", ",", 
           RowBox[{"N", "@", "yOuterScreen"}], ",", "\"\<].\>\""}], "]"}], 
         ";"}]}], "\n", "\t", "]"}], ";", "\n", "\t", 
      RowBox[{"If", "[", "\n", "\t\t", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], "^", "2"}], 
          " ", "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], "^", 
           "2"}]}], " ", ">", " ", 
         RowBox[{"precisionAim", "^", "2"}]}], "\n", "\t\t", ",", "\n", 
        "\t\t", 
        RowBox[{
         RowBox[{"count", " ", "=", " ", 
          RowBox[{"-", "1"}]}], ";", "\n", "\t\t", 
         RowBox[{"sol", " ", "=", " ", 
          RowBox[{"Check", "[", "\n", "\t\t\t", 
           RowBox[{
            RowBox[{"Catch", "[", 
             RowBox[{"NDSolve", "[", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"Join", "[", "\n", "\t\t\t\t\t", 
                RowBox[{"odes", ",", "\n", "\t\t\t\t\t", 
                 RowBox[{"inits", "/.", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"xScreen", " ", "\[Rule]", " ", 
                    RowBox[{"xInnerScreen", " ", "+", " ", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], 
                    "2"]}]}], ",", " ", 
                    RowBox[{"yScreen", " ", "\[Rule]", " ", 
                    RowBox[{"yInnerScreen", " ", "+", " ", 
                    FractionBox[
                    RowBox[{"(", 
                    RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], 
                    "2"]}]}]}], "}"}]}]}], "\n", "\t\t\t\t", "]"}], ",", "\n",
                "\t\t\t\t", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"k", "[", "1", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"k", "[", "2", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"k", "[", "3", "]"}], "[", "\[Lambda]", "]"}], ",", 
                 
                 RowBox[{
                  RowBox[{"k", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}], 
                "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                "\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}], 
                "}"}], ",", "\n", "\t\t\t\t", 
               RowBox[{"Method", " ", "\[Rule]", " ", 
                RowBox[{"If", "[", "\n", "\t\t\t\t\t", 
                 RowBox[{
                  RowBox[{"TrueQ", "[", 
                   RowBox[{"!", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}]}], 
                   "]"}], "\n", "\t\t\t\t\t", ",", "\n", "\t\t\t\t\t", 
                  RowBox[{"{", "\n", "\t\t\t\t\t\t", 
                   RowBox[{
                   "\"\<EventLocator\>\"", ",", " ", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"\"\<Event\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{" ", "1", ")"}], " ", "check", " ", "for", " ", 
                    "increasing", " ", "piercing", " ", "number"}], "*)"}], 
                    "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", " ", "\[Pi]"}], "]"}], "\[Equal]", "0"}], ")"}], "/.", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"paramRules", ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$v", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$t", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Chi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "}"}]}], ")"}], "\n", "\t\t\t\t\t\t", "}"}]}], ",", " ", 
                    "\n", "\t\t\t\t\t\t", 
                    RowBox[{"\"\<EventAction\>\"", " ", "\[RuleDelayed]", " ", 
                    RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"(", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"count", " ", "=", " ", 
                    RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\n", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}],
                     ",", 
                    RowBox[{"PrintTemporary", "[", 
                    RowBox[{"\"\<lensing-band count increased to \>\"", ",", 
                    RowBox[{"N", "@", "count"}], ",", "\"\< at radius r=\>\"",
                     ",", 
                    RowBox[{"N", "@", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "]"}]}], " ", "]"}], ";"}], "\n", "\t\t\t\t\t\t\t", 
                    ")"}], "\n", "\t\t\t\t\t\t", "}"}]}], ",", "\n", 
                    "\t\t\t\t\t\t", 
                    RowBox[{"\"\<Method\>\"", "\[Rule]", 
                    RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<ExplicitRungeKutta\>\"", ",", 
                    RowBox[{
                    "\"\<Coefficients\>\"", "\[Rule]", 
                    "\"\<EmbeddedExplicitRungeKuttaCoefficients\>\""}], ",", 
                    "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<DifferenceOrder\>\"", "\[Rule]", "5"}], ",", 
                    " ", 
                    RowBox[{"\"\<StiffnessTest\>\"", "\[Rule]", "True"}]}], 
                    "\n", "\t\t\t\t\t\t", "}"}]}]}], "\n", "\t\t\t\t\t", 
                   "}"}], "\n", "\t\t\t\t\t", ",", "\n", "\t\t\t\t\t", 
                  RowBox[{"{", "\n", "\t\t\t\t\t\t", 
                   RowBox[{
                   "\"\<EventLocator\>\"", ",", " ", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"\"\<Event\>\"", " ", "\[Rule]", " ", 
                    RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{" ", "1", ")"}], " ", "check", " ", "for", " ", 
                    "increasing", " ", "piercing", " ", "number"}], "*)"}], 
                    "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", " ", "\[Pi]"}], "]"}], "\[Equal]", "0"}], ")"}], "/.", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"paramRules", ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$v", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$t", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Chi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "}"}]}], ")"}], "\n", "\t\t\t\t\t\t\t", ",", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{" ", "2", ")"}], " ", "check", " ", "for", " ", 
                    "horizon"}], " ", "*)"}], "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"Evaluate", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"OptionValue", "[", "HorizonCondition", "]"}], 
                    ")"}], "/.", 
                    RowBox[{"Rationalize", "[", 
                    RowBox[{"paramRules", ",", 
                    RowBox[{"10", "^", 
                    RowBox[{"-", "100"}]}]}], "]"}]}], "]"}], "/.", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"$v", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$t", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "1", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$r", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Theta]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "3", "]"}], "[", "\[Lambda]", "]"}]}], 
                    ",", 
                    RowBox[{"$\[Chi]", "\[Rule]", 
                    RowBox[{
                    RowBox[{"x", "[", "4", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "}"}]}], ")"}]}], "\n", "\t\t\t\t\t\t", "}"}]}], ",", 
                    " ", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"\"\<EventAction\>\"", " ", "\[RuleDelayed]", " ", 
                    RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"(", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"count", " ", "=", " ", 
                    RowBox[{"count", " ", "+", " ", "1"}]}], ";", "\n", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}],
                     ",", 
                    RowBox[{"PrintTemporary", "[", 
                    RowBox[{"\"\<lensing-band count increased to \>\"", ",", 
                    RowBox[{"N", "@", "count"}], ",", "\"\< at radius r=\>\"",
                     ",", 
                    RowBox[{"N", "@", 
                    RowBox[{
                    RowBox[{"x", "[", "2", "]"}], "[", "\[Lambda]", "]"}]}]}],
                     "]"}]}], " ", "]"}], ";"}], "\n", "\t\t\t\t\t\t\t", 
                    ")"}], "\n", "\t\t\t\t\t\t\t", ",", "\n", 
                    "\t\t\t\t\t\t\t", 
                    RowBox[{"(", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}],
                     ",", 
                    RowBox[{"PrintTemporary", "[", "\n", "\t\t\t\t\t\t\t\t\t", 
                    RowBox[{
                    RowBox[{
                    "\"\<trajectory fell into user-defined horizon: at \
\[Lambda]=\>\"", "<>", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"N", "[", 
                    RowBox[{"\[Lambda]", ",", "5"}], "]"}], "]"}], "<>", 
                    "\"\< the user-defined HorizonCondition has been \
numerically detected.\>\""}], ",", "\n", "\t\t\t\t\t\t\t\t\t", 
                    "\"\<Note that this essentially detects the observers \
image of the user-defined surface 'HorizonCondition'.\>\""}], "\n", 
                    "\t\t\t\t\t\t\t\t", "]"}]}], "]"}], ";", "\n", 
                    "\t\t\t\t\t\t\t\t", 
                    RowBox[{"Message", "[", 
                    RowBox[{
                    "BoundaryBisectionInternal", "::", "HorizonCondition"}], 
                    "]"}], ";", "\n", "\t\t\t\t\t\t\t\t", 
                    RowBox[{"Throw", "[", 
                    RowBox[{"Null", ",", "\"\<StopIntegration\>\""}], "]"}]}],
                     "\n", "\t\t\t\t\t\t\t", ")"}]}], "\n", "\t\t\t\t\t\t", 
                    "}"}]}], ",", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"\"\<Method\>\"", "\[Rule]", 
                    RowBox[{"{", "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<ExplicitRungeKutta\>\"", ",", 
                    RowBox[{
                    "\"\<Coefficients\>\"", "\[Rule]", 
                    "\"\<EmbeddedExplicitRungeKuttaCoefficients\>\""}], ",", 
                    "\n", "\t\t\t\t\t\t\t", 
                    RowBox[{"\"\<DifferenceOrder\>\"", "\[Rule]", "5"}], ",", 
                    " ", 
                    RowBox[{"\"\<StiffnessTest\>\"", "\[Rule]", "False"}]}], 
                    "\n", "\t\t\t\t\t\t", "}"}]}]}], "\n", "\t\t\t\t\t", 
                   "}"}]}], "\n", "\t\t\t\t", "]"}]}], ",", "\n", "\t\t\t\t", 
               
               RowBox[{"Sequence", "@@", 
                RowBox[{"Evaluate", "[", 
                 RowBox[{"Cases", "[", 
                  RowBox[{
                   RowBox[{"{", "opts", "}"}], ",", 
                   RowBox[{
                    RowBox[{"Rule", "[", 
                    RowBox[{"optName_", ",", "optVal_"}], "]"}], "/;", 
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Options", "[", "NDSolve", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", "1"}], "]"}], "]"}], ",", "optName"}],
                     "]"}]}]}], "]"}], "]"}]}], ",", " ", 
               RowBox[{"MaxSteps", "\[Rule]", 
                RowBox[{"OptionValue", "[", "MaxSteps", "]"}]}]}], "\n", 
              "\t\t\t", "]"}], "]"}], ",", "\n", "\t\t\t", "Null"}], "\n", 
           "\t\t", "]"}]}], ";", "\n", "\t\t", "\n", "\t\t", 
         RowBox[{"If", "[", "\n", "\t\t\t", 
          RowBox[{
           RowBox[{"count", "\[GreaterEqual]", "ringNumber"}], ",", "\n", 
           "\t\t\t", 
           RowBox[{"LensingBandBisectionInternal", "[", 
            RowBox[{"odes", ",", " ", "inits", ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}],
               "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"xScreen", ",", " ", "yScreen"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"xInnerScreen", ",", "yInnerScreen"}], "}"}], ",", 
               " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"xInnerScreen", " ", "+", " ", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], 
                   "2"]}], ",", 
                 RowBox[{"yInnerScreen", " ", "+", " ", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], 
                   "2"]}]}], "}"}]}], "}"}], ",", " ", "paramRules", ",", " ",
              "ringNumber", ",", " ", "precisionAim", ",", " ", "opts", ",", 
             " ", 
             RowBox[{"PrintTemporaryOption", "\[Rule]", 
              RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}]}]}], 
            "]"}], ",", "\n", "\t\t\t", 
           RowBox[{"LensingBandBisectionInternal", "[", 
            RowBox[{"odes", ",", " ", "inits", ",", " ", 
             RowBox[{"{", 
              RowBox[{"\[Lambda]", ",", "\[Lambda]Min", ",", "\[Lambda]Max"}],
               "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"xScreen", ",", " ", "yScreen"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"xInnerScreen", " ", "+", " ", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], 
                   "2"]}], ",", 
                 RowBox[{"yInnerScreen", " ", "+", " ", 
                  FractionBox[
                   RowBox[{"(", 
                    RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], 
                   "2"]}]}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"xOuterScreen", ",", "yOuterScreen"}], "}"}]}], "}"}],
              ",", " ", "paramRules", ",", " ", "ringNumber", ",", " ", 
             "precisionAim", ",", " ", "opts", ",", " ", 
             RowBox[{"PrintTemporaryOption", "\[Rule]", 
              RowBox[{"OptionValue", "[", "PrintTemporaryOption", "]"}]}]}], 
            "]"}]}], "\n", "\t\t", "]"}]}], "\n", "\t\t", ",", "\n", "\t\t", 
        RowBox[{"Return", "[", 
         RowBox[{"N", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"xInnerScreen", " ", "+", " ", 
             FractionBox[
              RowBox[{"(", 
               RowBox[{"xOuterScreen", "-", "xInnerScreen"}], ")"}], "2"]}], 
            ",", " ", 
            RowBox[{"yInnerScreen", " ", "+", " ", 
             FractionBox[
              RowBox[{"(", 
               RowBox[{"yOuterScreen", "-", "yInnerScreen"}], ")"}], "2"]}]}],
            "}"}], "]"}], "]"}], "\n", "\t\t", ",", "\n", "\t\t", "None"}], 
       "\n", "\t", "]"}]}]}], "\n", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.865553940790819*^9, 3.865553966740302*^9}, {
   3.865554454089273*^9, 3.865554459993188*^9}, 3.8655545647849627`*^9, {
   3.8666070107365313`*^9, 3.866607017997273*^9}, {3.866607065690037*^9, 
   3.8666070870766277`*^9}, {3.866607169171226*^9, 3.866607181925571*^9}, {
   3.8666073245549507`*^9, 3.866607342848435*^9}, 3.8666074636427183`*^9, {
   3.875109405097685*^9, 3.875109412760097*^9}, 3.875110525531867*^9, {
   3.8751108835834303`*^9, 3.87511090510147*^9}, {3.8751114959402027`*^9, 
   3.8751115151018143`*^9}},ExpressionUUID->"295fba6d-25f1-449a-b74a-\
74a837447838"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["minimization of overlapping lensing band regions", "Section",
 CellChangeTimes->{{3.872941462038952*^9, 3.8729414764971323`*^9}, 
   3.875116461446694*^9},ExpressionUUID->"11047185-c8b7-44fb-b494-\
f86dc82565c1"],

Cell[CellGroupData[{

Cell["setup", "Subsubsection",
 CellChangeTimes->{{3.869746380281108*^9, 3.8697463957130938`*^9}, 
   3.9073343796994963`*^9},ExpressionUUID->"a800c00a-f526-4fa6-a35e-\
b25a268428e6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "GetLBRegion", "]"}], " ", ":=", " ", 
    RowBox[{"{", 
     RowBox[{"NumberOfPolygonPoints", "\[Rule]", "Automatic"}], "}"}]}], 
   ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"GetLBRegion", "[", 
   RowBox[{"lbInner_List", 
    RowBox[{"(*", 
     RowBox[{"/;", 
      RowBox[{
       RowBox[{"Dimensions", "@", "lbInner"}], "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"_", ",", "2"}], "}"}]}]}], "*)"}], ",", " ", "lbOuter_List", 
    
    RowBox[{"(*", 
     RowBox[{"/;", 
      RowBox[{
       RowBox[{"Dimensions", "@", "lbInner"}], "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"_", ",", "2"}], "}"}]}]}], "*)"}], ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"nPolygon", " ", "=", " ", 
       RowBox[{"OptionValue", "[", "NumberOfPolygonPoints", "]"}]}], "\n", 
      "\t\t", ",", "\n", "\t\t", "lineInner", ",", "lineOuter"}], "\n", "\t", 
     "}"}], "\n", "\t", ",", "\n", "\t", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"lineInner", " ", "=", " ", 
       RowBox[{"Line", "[", 
        RowBox[{"lbInner", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{"-", "1"}], ";;", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"NumberQ", "@", "nPolygon"}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"Ceiling", "@", 
                RowBox[{"Abs", "@", 
                 FractionBox[
                  RowBox[{"Length", "@", 
                   RowBox[{"Evaluate", "@", "lbInner"}]}], 
                  RowBox[{"Re", "@", "nPolygon"}]]}]}], ",", 
               FractionBox[
                RowBox[{"Length", "@", 
                 RowBox[{"Evaluate", "@", "lbInner"}]}], "4"]}], "]"}], ",", 
             "1", ",", "1"}], "]"}]}], "]"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"lineOuter", " ", "=", " ", 
       RowBox[{"Line", "[", 
        RowBox[{"lbOuter", "[", 
         RowBox[{"[", 
          RowBox[{"1", ";;", 
           RowBox[{"-", "1"}], ";;", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"NumberQ", "@", "nPolygon"}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"Ceiling", "@", 
                RowBox[{"Abs", "@", 
                 FractionBox[
                  RowBox[{"Length", "@", 
                   RowBox[{"Evaluate", "@", "lbOuter"}]}], 
                  RowBox[{"Re", "@", "nPolygon"}]]}]}], ",", 
               FractionBox[
                RowBox[{"Length", "@", 
                 RowBox[{"Evaluate", "@", "lbOuter"}]}], "4"]}], "]"}], ",", 
             "1", ",", "1"}], "]"}]}], "]"}], "]"}], "]"}]}], ";", "\n", "\t", 
      RowBox[{"Region", "@", 
       RowBox[{"BoundaryDiscretizeGraphics", "@", 
        RowBox[{"FilledCurve", "[", "\n", "\t\t", 
         RowBox[{"{", "\n", "\t\t", 
          RowBox[{
           RowBox[{"{", "lineInner", "}"}], ",", "\n", "\t\t", 
           RowBox[{"{", "lineOuter", "}"}]}], "\n", "\t\t", "}"}], "\n", "\t",
          "]"}]}]}]}], "*)"}], "\n", "\t", 
    RowBox[{"RegionDifference", "[", "\n", "\t\t", 
     RowBox[{
      RowBox[{"BoundaryMeshRegion", "[", "\n", "\t\t\t", 
       RowBox[{"lbOuter", ",", "\n", "\t\t\t", 
        RowBox[{"Line", "[", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"ii", ",", 
             RowBox[{"{", 
              RowBox[{"ii", ",", 
               RowBox[{"Length", "@", "lbOuter"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", "1", "}"}]}], "]"}], "]"}]}], "\n", "\t\t", "]"}], 
      ",", "\n", "\t\t", 
      RowBox[{"BoundaryMeshRegion", "[", "\n", "\t\t\t", 
       RowBox[{"lbInner", ",", "\n", "\t\t\t", 
        RowBox[{"Line", "[", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{"ii", ",", 
             RowBox[{"{", 
              RowBox[{"ii", ",", 
               RowBox[{"Length", "@", "lbInner"}]}], "}"}]}], "]"}], ",", 
           RowBox[{"{", "1", "}"}]}], "]"}], "]"}]}], "\n", "\t\t", "]"}]}], 
     "\n", "\t", "]"}]}], "\n", "]"}]}]}], "Code",
 CellChangeTimes->{{3.8697464400716257`*^9, 3.8697465107427883`*^9}, {
   3.869746562255299*^9, 3.869746891345293*^9}, {3.8697469565231*^9, 
   3.8697469812936983`*^9}, {3.86974705941015*^9, 3.869747063337295*^9}, {
   3.869747094544786*^9, 3.869747098605073*^9}, {3.869747148656067*^9, 
   3.869747183422296*^9}, {3.869747228594473*^9, 3.869747462973383*^9}, {
   3.869747497583446*^9, 3.869747533838457*^9}, {3.8697475803455677`*^9, 
   3.869747609685837*^9}, {3.8697476566130743`*^9, 3.869747667172989*^9}, {
   3.869747711510171*^9, 3.869747716723816*^9}, 3.869747791230649*^9, {
   3.869747860586851*^9, 3.869747987055311*^9}, {3.8697480200538692`*^9, 
   3.869748037704341*^9}, 3.869748084993902*^9, {3.8697482298360767`*^9, 
   3.869748423197957*^9}, {3.86974846085527*^9, 3.8697485283713427`*^9}, {
   3.869748562088337*^9, 3.869748570558487*^9}, {3.8697486041606703`*^9, 
   3.869748624912436*^9}, {3.869748676560672*^9, 3.869748696321712*^9}, {
   3.869748769937488*^9, 3.86974877317922*^9}, {3.869748879419433*^9, 
   3.8697488908614273`*^9}, 3.8697490136811543`*^9, {3.8697490528487253`*^9, 
   3.869749112683239*^9}, {3.869749150258287*^9, 3.8697491739968443`*^9}, {
   3.869749222648188*^9, 3.869749240624765*^9}, {3.8697493158685837`*^9, 
   3.869749350482041*^9}, {3.87538825610065*^9, 3.8753882945303583`*^9}, 
   3.8753884996790743`*^9, {3.875388535300445*^9, 
   3.8753885920723467`*^9}},ExpressionUUID->"0f4a1c72-14d2-4cb2-8926-\
10c571393be0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetRangeOfRegion", "[", 
   RowBox[{"reg_", "?", "RegionQ"}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"mesh", " ", "=", " ", 
       RowBox[{"MeshCoordinates", "@", 
        RowBox[{"BoundaryDiscretizeRegion", "@", "reg"}]}]}], ",", "\n", 
      "\t\t", "xVals", ",", "yVals", ",", "\n", "\t\t", "xMin", ",", "xMax", 
      ",", "yMin", ",", "yMax"}], "\n", "\t", "}"}], "\n", "\t", ",", "\n", 
    "\t", 
    RowBox[{
     RowBox[{"xVals", " ", "=", " ", 
      RowBox[{"mesh", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"yVals", " ", "=", " ", 
      RowBox[{"mesh", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", "\n", "\t", 
     RowBox[{"xMin", " ", "=", " ", 
      RowBox[{"Min", "[", "xVals", "]"}]}], ";", "\n", "\t", 
     RowBox[{"xMax", " ", "=", " ", 
      RowBox[{"Max", "[", "xVals", "]"}]}], ";", "\n", "\t", 
     RowBox[{"yMin", " ", "=", " ", 
      RowBox[{"Min", "[", "yVals", "]"}]}], ";", "\n", "\t", 
     RowBox[{"yMax", " ", "=", " ", 
      RowBox[{"Max", "[", "yVals", "]"}]}], ";", "\n", "\t", "\n", "\t", 
     RowBox[{"Return", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"xMin", ",", "xMax"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"yMin", ",", "yMax"}], "}"}]}], "}"}], "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 CellChangeTimes->{{3.8697534734936943`*^9, 3.8697534785728493`*^9}, {
   3.86975394510279*^9, 3.869753985357828*^9}, {3.869754016514797*^9, 
   3.869754165393319*^9}, {3.869754224326846*^9, 3.8697543094266787`*^9}, {
   3.869754353824275*^9, 3.869754383357703*^9}, 
   3.872941511235384*^9},ExpressionUUID->"32581b70-5438-46aa-9526-\
e05d3dafb4cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ShiftedAndRescaledRegion", "[", 
    RowBox[{
     RowBox[{"region_", "?", "RegionQ"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"x_", "?", "NumberQ"}], ",", 
       RowBox[{"y_", "?", "NumberQ"}], ",", 
       RowBox[{"s_", "?", "NumberQ"}]}], "}"}]}], "]"}], ":=", 
   RowBox[{"TransformedRegion", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"TransformedRegion", "[", "\n", "\t\t", 
      RowBox[{"region", "\n", "\t\t", ",", "\n", "\t\t", 
       RowBox[{"TranslationTransform", "[", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "\n", "\t", "]"}], ",", 
     "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "absoute", " ", "value", " ", "such", " ", "that", " ", "minimization", 
       " ", "cannot", " ", "mirror", " ", "the", " ", "region"}], "*)"}], 
     "\n", "\t", 
     RowBox[{"ScalingTransform", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Abs", "@", "s"}], ",", 
        RowBox[{"Abs", "@", "s"}]}], "}"}], "]"}]}], "\n", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.869228060378002*^9, 3.869228153456168*^9}, {
   3.869228416212153*^9, 3.869228440067114*^9}, 3.8697494987189713`*^9, {
   3.869752991173566*^9, 3.869753018745195*^9}, 
   3.872941517712475*^9},ExpressionUUID->"bee3d5a2-41a7-482b-9e74-\
2400a319251d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AreaOfDifference", "[", 
   RowBox[{
    RowBox[{"regToCover_", "?", "RegionQ"}], ",", " ", 
    RowBox[{"regToRescale_", "?", "RegionQ"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x_", "?", "NumberQ"}], ",", 
      RowBox[{"y_", "?", "NumberQ"}], ",", 
      RowBox[{"s_", "?", "NumberQ"}]}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"regRescaled", " ", "=", " ", 
       RowBox[{"ShiftedAndRescaledRegion", "[", 
        RowBox[{"regToRescale", ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", "y", ",", "s"}], "}"}]}], "]"}]}], ",", "\n", 
      "\t\t", "area"}], "\n", "\t", "}"}], "\n", "\t", ",", "\n", "\t", 
    RowBox[{"(*", 
     RowBox[{
     "determine", " ", "the", " ", "area", " ", "of", " ", "regToCover", " ", 
      "where", " ", "not", " ", "covered", " ", "by", " ", "regRescaled"}], 
     "*)"}], "\n", "\t", 
    RowBox[{
     RowBox[{"area", " ", "=", " ", 
      RowBox[{"Area", "[", 
       RowBox[{"RegionDifference", "[", 
        RowBox[{"regToCover", ",", "regRescaled"}], "]"}], "]"}]}], ";", "\n",
      "\t", 
     RowBox[{"(*", 
      RowBox[{
      "devide", " ", "by", " ", "the", " ", "area", " ", "of", " ", "the", 
       " ", "full", " ", "region", " ", "to", " ", "be", " ", "covered"}], 
      "*)"}], "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"area", " ", "=", " ", 
        RowBox[{"area", " ", "/", " ", 
         RowBox[{"Area", "[", "regToCover", "]"}]}]}], ";"}], "*)"}], "\n", 
     "\t", "\n", "\t", 
     RowBox[{"Return", "@", "area"}], ";"}]}], "\n", "]"}]}]], "Code",
 CellChangeTimes->{{3.869166667601605*^9, 3.869166724370749*^9}, {
   3.8691669211547813`*^9, 3.8691669918218203`*^9}, {3.869227988688496*^9, 
   3.8692280312519608`*^9}, {3.869228168645467*^9, 3.8692284090307407`*^9}, {
   3.869228479983897*^9, 3.869228501866357*^9}, 3.8697495086653957`*^9, {
   3.869752527179637*^9, 3.869752678947029*^9}, {3.8697530465289593`*^9, 
   3.8697530564111967`*^9}, {3.869753177493949*^9, 3.869753178267942*^9}, 
   3.872941589913693*^9, 
   3.8729423166331167`*^9},ExpressionUUID->"f6ca5ff6-bcd4-4d92-8537-\
6561f6ee93e6"]
}, Closed]],

Cell[CellGroupData[{

Cell["determine overlap with some user-defined lensing-band region", \
"Subsubsection",
 CellChangeTimes->{{3.907305151700121*^9, 
  3.907305164657296*^9}},ExpressionUUID->"634a2c87-0b22-46e8-814f-\
fa5d578f9685"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "GetMinimizedOverlap", "]"}], " ", ":=", " ", 
    RowBox[{"Options", "[", "GetLensingBand", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GetMinimizedOverlap", "[", "\n", "\t", 
    RowBox[{"camera_List", ",", "\n", "\t", "params_List", ",", "\n", "\t", 
     RowBox[{"LBexp_", "?", "RegionQ"}], ",", "\n", "\t", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "\n", "]"}], ":=", 
   RowBox[{"Block", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{"(*", 
       RowBox[{
       "random", " ", "initial", " ", "image", " ", "vector", " ", "along", 
        " ", "which", " ", "to", " ", "perform", " ", "the", " ", "first", 
        " ", "bisection"}], "*)"}], "\n", "\t\t", 
      RowBox[{
       RowBox[{"initialBisectionGuess", " ", "=", " ", 
        RowBox[{"Rationalize", "[", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"{", "\n", "\t\t\t\t", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}], ",", " ", "\n", "\t\t\t\t", 
            RowBox[{"(*", 
             RowBox[{"{", 
              RowBox[{"20", ",", "2"}], "}"}], "*)"}], 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"100", "*", "#"}], ")"}], "/", 
                RowBox[{"Norm", "[", "#", "]"}]}], "&"}], "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}], ",", 
                RowBox[{"RandomReal", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", "1"}], ",", "1"}], "}"}], "]"}]}], "}"}]}], 
             "]"}]}], "\n", "\t\t\t", "}"}], ",", "\n", "\t\t\t", 
          RowBox[{"10", "^", 
           RowBox[{"-", "10"}]}]}], "\n", "\t\t", "]"}]}], ",", "\n", "\t\t", 
       
       RowBox[{"(*", 
        RowBox[{
         RowBox[{
         "diameter", " ", "of", " ", "the", " ", "\"\<observed\>\"", " ", 
          "lensed"}], "-", 
         RowBox[{"emission", " ", "region"}]}], "*)"}], "\n", "\t\t", 
       RowBox[{"diameterOfLBexp", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Max", "[", "#", "]"}], "-", 
            RowBox[{"Min", "[", "#", "]"}]}], ")"}], "&"}], "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"MeshCoordinates", "[", "LBexp", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], ")"}]}]}], ",", "\n", 
       "\t\t", "LBinner", ",", " ", "LBouter", ",", " ", "LBregion", ",", 
       "\n", "\t\t", "timing", ",", " ", "minValue", ",", " ", "minRule"}], 
      "\n", "\t", "}"}], "\n", "\t", ",", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{"TODO", ":", " ", 
       RowBox[{"input", " ", "validation"}]}], "*)"}], "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{"TODO", ":", " ", 
       RowBox[{"validate", " ", "theoretical", " ", "consistency", " ", 
        RowBox[{"(", 
         RowBox[{"horizon", ",", " ", 
          RowBox[{"and", " ", "so", " ", "on"}]}], ")"}], " ", "for", " ", 
        "params"}]}], "*)"}], "\n", "\t", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{"GET", " ", "INNER", " ", "LENSING", " ", "BAND"}], "*)"}], 
     "\n", "\t", 
     RowBox[{
      RowBox[{
      "Print", "[", "\"\<inner lensing band bisection in progress ...\>\"", 
       "]"}], ";", "\n", "\t", 
      RowBox[{"timing", " ", "=", " ", 
       RowBox[{"First", "@", 
        RowBox[{"Timing", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"LBinner", " ", "=", " ", 
           RowBox[{"Quiet", "@", 
            RowBox[{"GetLensingBand", "[", "\n", "\t\t\t", 
             RowBox[{
             "camera", ",", "\n", "\t\t\t", "initialBisectionGuess", ",", 
              "\n", "\t\t\t", "params", ",", "\n", "\t\t\t", 
              RowBox[{"WhichLensingBand", "->", "inner"}], ",", "\n", 
              "\t\t\t", 
              RowBox[{"PrintTemporaryOption", "->", "False"}], ",", "\n", 
              "\t\t\t", "opts"}], "\n", "\t\t", "]"}]}]}], ";"}], "\n", "\t", 
         "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<... for \>\"", ",", "timing", ",", "\"\< sec.\>\""}], 
       "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"GET", " ", "OUTER", " ", "LENSING", " ", "BAND"}], "*)"}], 
      "\n", "\t", 
      RowBox[{
      "Print", "[", "\"\<outer lensing band bisection in progress ...\>\"", 
       "]"}], ";", "\n", "\t", 
      RowBox[{"timing", " ", "=", " ", 
       RowBox[{"First", "@", 
        RowBox[{"Timing", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{"LBouter", " ", "=", " ", 
           RowBox[{"Quiet", "@", 
            RowBox[{"GetLensingBand", "[", "\n", "\t\t\t", 
             RowBox[{
             "camera", ",", "\n", "\t\t\t", "initialBisectionGuess", ",", 
              "\n", "\t\t\t", "params", ",", "\n", "\t\t\t", 
              RowBox[{"WhichLensingBand", "->", "outer"}], ",", "\n", 
              "\t\t\t", 
              RowBox[{"PrintTemporaryOption", "->", "False"}], ",", "\n", 
              "\t\t\t", "opts"}], "\n", "\t\t", "]"}]}]}], ";"}], "\n", "\t", 
         "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<... for \>\"", ",", "timing", ",", "\"\< sec.\>\""}], 
       "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"MINIMIZE", " ", "OVERLAPPING", " ", "REGION"}], "*)"}], "\n", 
      "\t", 
      RowBox[{"LBregion", " ", "=", " ", 
       RowBox[{"GetLBRegion", "[", "\n", "\t\t", 
        RowBox[{"LBinner", ",", "\n", "\t\t", "LBouter"}], "\n", "\t", 
        "]"}]}], ";", "\n", "\t", 
      RowBox[{"Print", "[", "\"\<minimization in progress ...\>\"", "]"}], 
      ";", "\n", "\t", 
      RowBox[{"timing", " ", "=", " ", 
       RowBox[{"First", "@", 
        RowBox[{"Timing", "[", "\n", "\t\t", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"minValue", ",", " ", "minRule"}], "}"}], " ", "=", " ", 
           RowBox[{"NMinimize", "[", "\n", "\t\t\t\t", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"AreaOfDifference", "[", 
                 RowBox[{"LBexp", ",", "LBregion", ",", " ", 
                  RowBox[{"{", 
                   RowBox[{"x", ",", "y", ",", "1"}], "}"}]}], "]"}], "/", 
                RowBox[{"Area", "[", "LBexp", "]"}]}], ",", " ", 
               RowBox[{
                RowBox[{
                 RowBox[{"x", "^", "2"}], "+", 
                 RowBox[{"y", "^", "2"}]}], "<=", 
                SuperscriptBox[
                 RowBox[{"(", 
                  FractionBox["diameterOfLBexp", "2"], ")"}], "2"]}]}], "}"}],
              ",", "\n", "\t\t\t\t", 
             RowBox[{"{", 
              RowBox[{"x", ",", "y"}], "}"}], ",", "\n", "\t\t\t\t", 
             RowBox[{"Method", "\[Rule]", "\"\<RandomSearch\>\""}]}], "\n", 
            "\t\t\t", "]"}]}], ";"}], "]"}]}]}], ";", "\n", "\t", 
      RowBox[{"minValue", " ", "=", " ", 
       RowBox[{"1", "-", "minValue"}]}], ";", "\n", "\t", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<... for \>\"", ",", "timing", ",", "\"\< sec.\>\""}], 
       "]"}], ";", "\n", "\t", "\n", "\t", 
      RowBox[{"(*", 
       RowBox[{"TODO", ":", " ", 
        RowBox[{"output", " ", "control"}]}], "*)"}], "\n", "\t", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{"minValue", ",", "minRule", ",", "LBregion"}], "}"}], "]"}], 
      ";"}]}], "\n", "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.8751146662169943`*^9, 3.87511500512376*^9}, {
   3.875115066126721*^9, 3.8751153585307693`*^9}, {3.875115449854062*^9, 
   3.875115527334415*^9}, {3.8751155689367228`*^9, 3.875115648736332*^9}, {
   3.875115714478243*^9, 3.875115770740582*^9}, {3.875115900357605*^9, 
   3.8751160994443083`*^9}, {3.875116210097094*^9, 3.875116210908227*^9}, {
   3.875116312048739*^9, 3.8751163710002823`*^9}, {3.875116416883636*^9, 
   3.875116444596694*^9}, {3.875116498968519*^9, 3.8751166503854713`*^9}, {
   3.8751167570032673`*^9, 3.875116762634947*^9}, {3.875116802939177*^9, 
   3.875116804928175*^9}, 3.875116847467746*^9, {3.875116919770165*^9, 
   3.875116920672846*^9}, 3.875117006518811*^9, {3.8751173151079073`*^9, 
   3.875117321949675*^9}, {3.8751173579488153`*^9, 3.875117361633273*^9}, {
   3.8751174800650387`*^9, 3.8751174883480463`*^9}, {3.875117667263482*^9, 
   3.875117668910344*^9}, {3.875118051711022*^9, 3.8751180551460657`*^9}, {
   3.875118867184616*^9, 3.875118867272204*^9}, {3.87512355995539*^9, 
   3.8751235605348997`*^9}, {3.875124307099614*^9, 3.8751243117195807`*^9}, {
   3.875200863381744*^9, 3.875200897278994*^9}, {3.875201095249261*^9, 
   3.875201104043982*^9}, {3.875205371710453*^9, 3.875205385551208*^9}, {
   3.87535795083811*^9, 3.875357950938682*^9}, {3.875385241520114*^9, 
   3.875385246653378*^9}, {3.875385325811008*^9, 3.875385385653925*^9}, {
   3.8753860789132223`*^9, 3.875386137299183*^9}, {3.8753908508572407`*^9, 
   3.8753908529064503`*^9}, {3.875391017031495*^9, 3.87539101927282*^9}, {
   3.875398320203684*^9, 3.875398337999126*^9}, {3.879397689658676*^9, 
   3.8793976971950903`*^9}, {3.879397785132495*^9, 3.879397787004747*^9}, {
   3.8793978298878517`*^9, 3.8793978498702383`*^9}, {3.879397960994543*^9, 
   3.879397961901692*^9}, 3.882939243629715*^9, {3.8829393000668697`*^9, 
   3.882939304539489*^9}, {3.892806649124296*^9, 3.892806653042201*^9}, {
   3.892806778724531*^9, 3.89280681767524*^9}, 3.892806903491811*^9, 
   3.892806937260894*^9, {3.892807020249078*^9, 3.892807020508494*^9}, 
   3.8928070812146473`*^9, {3.892807152183084*^9, 3.892807162579369*^9}, {
   3.90646529445242*^9, 3.9064653191448917`*^9}, {3.906465404920339*^9, 
   3.906465433689499*^9}, {3.906465702350708*^9, 3.906465702604658*^9}, {
   3.906465780965067*^9, 3.906465786252001*^9}, 3.9064659563444777`*^9, {
   3.906465994648602*^9, 3.906466003904508*^9}, {3.9064660545855303`*^9, 
   3.90646605565027*^9}, {3.906466130645131*^9, 3.9064661316339083`*^9}, {
   3.9064662445080976`*^9, 3.906466251716152*^9}, {3.906466339962058*^9, 
   3.906466342923431*^9}, 3.906466485515108*^9, {3.9064667012300386`*^9, 
   3.9064667013204403`*^9}, {3.906466819855921*^9, 3.906466827214355*^9}, {
   3.9064668889035053`*^9, 3.9064668908749857`*^9}, 3.9064670380082827`*^9, {
   3.906467070869508*^9, 3.906467075492352*^9}, {3.90646724175591*^9, 
   3.906467244535742*^9}, {3.906532927136613*^9, 3.90653292737113*^9}, 
   3.9066177339293222`*^9, 3.906657785579207*^9, {3.906658023267022*^9, 
   3.906658036637957*^9}, 3.906658120101244*^9, 3.907133966093258*^9, {
   3.9071449382170677`*^9, 3.90714496529195*^9}, {3.907145481471249*^9, 
   3.907145481824053*^9}, {3.907146061486257*^9, 3.907146063139818*^9}, 
   3.907150423175846*^9, {3.907226298744911*^9, 3.907226352610423*^9}, {
   3.9072292654021063`*^9, 3.90722926592911*^9}, 3.907304455839901*^9, {
   3.9073340794367857`*^9, 3.90733409714625*^9}, {3.907336488814983*^9, 
   3.9073365576393948`*^9}},ExpressionUUID->"21090d6e-6f0d-44e3-a4c7-\
712494ff7c6d"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["plotting", "Section",
 CellChangeTimes->{{3.872935402251081*^9, 
  3.8729354034715347`*^9}},ExpressionUUID->"2a7d980d-d167-40ab-ab42-\
519c1f6c48bf"],

Cell[CellGroupData[{

Cell["plot frames", "Subsection",
 CellChangeTimes->{{3.869755058049747*^9, 3.8697550643783073`*^9}, {
  3.8729414512541924`*^9, 
  3.8729414558323402`*^9}},ExpressionUUID->"265e6ced-876b-4924-9da9-\
715ab08c1ad4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"texStyle", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"FontFamily", " ", "->", " ", "\"\<Latin Modern Roman\>\""}], 
     ",", " ", 
     RowBox[{"FontSize", " ", "->", " ", "16"}], ",", " ", 
     RowBox[{"FontColor", "->", "Black"}]}], "}"}]}], ";"}]], "Code",
 CellChangeTimes->{{3.860283458119419*^9, 3.860283462585072*^9}, 
   3.865465024207951*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"19a15571-d01a-4fe8-a00f-8f3f33ad3644"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "GetPlotFrameLeft", "]"}], " ", "=", " ", 
    RowBox[{"Option", "[", "ListPlot", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GetPlotFrameLeft", "[", 
    RowBox[{
     RowBox[{"plotRange_List", "/;", 
      RowBox[{
       RowBox[{"Dimensions", "@", "plotRange"}], "===", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{"range", " ", "=", " ", 
       RowBox[{"Max", "@", 
        RowBox[{"Abs", "@", 
         RowBox[{"Flatten", "[", "plotRange", "]"}]}]}]}], "\n", "\t", "}"}], 
     "\n", "\t", ",", "\n", "\t", 
     RowBox[{"ListPlot", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\t\t", "opts", ",", "\n", "\t\t", 
       RowBox[{"BaseStyle", " ", "\[Rule]", " ", "texStyle"}], ",", "\n", 
       "\t\t", 
       RowBox[{"PlotRange", " ", "\[Rule]", " ", "plotRange"}], ",", "\n", 
       "\t\t", 
       RowBox[{"FrameLabel", "\[Rule]", "None"}], 
       RowBox[{"(*", 
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"MaTeX", "[", "\"\<x_\\\\text{im}\\;\\;[M]\>\"", "]"}], ",",
           "\n", "\t\t\t", 
          RowBox[{"MaTeX", "[", "\"\<y_\\\\text{im}\\;\\;[M]\>\"", "]"}]}], 
         "\n", "\t\t", "}"}], "*)"}], ",", "\n", "\t\t", 
       RowBox[{"LabelStyle", "->", 
        RowBox[{"{", 
         RowBox[{"16", ",", "Black"}], "}"}]}], ",", "\n", "\t\t", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"UpTo", "[", "1000", "]"}], ",", 
          RowBox[{"UpTo", "[", "200", "]"}]}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\n", "\t\t", 
       RowBox[{"GridLines", "\[Rule]", 
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"ii", ",", 
            RowBox[{"{", 
             RowBox[{"ii", ",", 
              RowBox[{"-", 
               RowBox[{"Power", "[", 
                RowBox[{"10", ",", 
                 RowBox[{"Ceiling", "@", 
                  RowBox[{"RealExponent", "@", "range"}]}]}], "]"}]}], ",", 
              RowBox[{"Power", "[", 
               RowBox[{"10", ",", 
                RowBox[{"Ceiling", "@", 
                 RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], ",", 
              FractionBox[
               RowBox[{"Power", "[", 
                RowBox[{"10", ",", 
                 RowBox[{"Ceiling", "@", 
                  RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], "10"]}], 
             "}"}]}], "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"Table", "[", 
           RowBox[{"ii", ",", 
            RowBox[{"{", 
             RowBox[{"ii", ",", 
              RowBox[{"-", 
               RowBox[{"Power", "[", 
                RowBox[{"10", ",", 
                 RowBox[{"Ceiling", "@", 
                  RowBox[{"RealExponent", "@", "range"}]}]}], "]"}]}], ",", 
              RowBox[{"Power", "[", 
               RowBox[{"10", ",", 
                RowBox[{"Ceiling", "@", 
                 RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], ",", 
              FractionBox[
               RowBox[{"Power", "[", 
                RowBox[{"10", ",", 
                 RowBox[{"Ceiling", "@", 
                  RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], "10"]}], 
             "}"}]}], "]"}]}], "\n", "\t\t", "}"}]}], ",", " ", "\n", "\t\t", 
       
       RowBox[{"GridLinesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thin", ",", 
          RowBox[{"Lighter", "@", 
           RowBox[{"Lighter", "@", 
            RowBox[{"Lighter", "@", 
             RowBox[{"Lighter", "@", "Gray"}]}]}]}]}], "]"}]}], ",", "\n", 
       "\t\t", 
       RowBox[{"Frame", "->", "True"}], ",", " ", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
       RowBox[{"FrameStyle", "->", 
        RowBox[{"Directive", "[", "Black", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"ii", ",", 
              RowBox[{"{", 
               RowBox[{"ii", ",", 
                RowBox[{"-", 
                 RowBox[{"Power", "[", 
                  RowBox[{"10", ",", 
                   RowBox[{"Ceiling", "@", 
                    RowBox[{"RealExponent", "@", "range"}]}]}], "]"}]}], ",", 
                
                RowBox[{"Power", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"Ceiling", "@", 
                   RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], ",", 
                FractionBox[
                 RowBox[{"Power", "[", 
                  RowBox[{"10", ",", 
                   RowBox[{"Ceiling", "@", 
                    RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], 
                 "10"]}], "}"}]}], "]"}], ",", "None"}], "}"}], ",", "\n", 
          "\t\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"ii", ",", 
              RowBox[{"{", 
               RowBox[{"ii", ",", 
                RowBox[{"-", 
                 RowBox[{"Power", "[", 
                  RowBox[{"10", ",", 
                   RowBox[{"Ceiling", "@", 
                    RowBox[{"RealExponent", "@", "range"}]}]}], "]"}]}], ",", 
                
                RowBox[{"Power", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"Ceiling", "@", 
                   RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], ",", 
                FractionBox[
                 RowBox[{"Power", "[", 
                  RowBox[{"10", ",", 
                   RowBox[{"Ceiling", "@", 
                    RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], 
                 "10"]}], "}"}]}], "]"}], ",", "None"}], "}"}]}], "\n", 
         "\t\t", "}"}]}], ",", " ", "\n", "\t\t", 
       RowBox[{"FrameTicksStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "12"}], "]"}]}]}], "\n", "\t", "]"}]}], "\n", 
    "]"}]}], ";"}]}], "Code",
 CellChangeTimes->{{3.869755066685357*^9, 3.869755190634871*^9}, {
   3.8697553127352333`*^9, 3.869755365548911*^9}, {3.869755416063609*^9, 
   3.869755452490519*^9}, {3.8697555493343897`*^9, 3.869755553783401*^9}, {
   3.8697555895563507`*^9, 3.8697555904135103`*^9}, {3.8697564526539917`*^9, 
   3.869756453140418*^9}, 3.8697565305417423`*^9, 3.8697613356413603`*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"9816375e-bc0b-43c7-9bdd-3c3cb081c66b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "GetPlotFrameRight", "]"}], " ", "=", " ", 
    RowBox[{"Option", "[", "ListPlot", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GetPlotFrameRight", "[", 
    RowBox[{
     RowBox[{"plotRange_List", "/;", 
      RowBox[{
       RowBox[{"Dimensions", "@", "plotRange"}], "===", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{"range", " ", "=", " ", 
       RowBox[{"Max", "@", 
        RowBox[{"Abs", "@", 
         RowBox[{"Flatten", "[", "plotRange", "]"}]}]}]}], "\n", "\t", "}"}], 
     "\n", "\t", ",", "\n", "\t", 
     RowBox[{"ListPlot", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\t\t", "opts", ",", "\n", "\t\t", 
       RowBox[{"BaseStyle", " ", "\[Rule]", " ", "texStyle"}], ",", "\n", 
       "\t\t", 
       RowBox[{"PlotRange", " ", "\[Rule]", " ", "plotRange"}], ",", "\n", 
       "\t\t", 
       RowBox[{"FrameLabel", "\[Rule]", "None"}], ",", "\n", "\t\t", 
       RowBox[{"LabelStyle", "->", 
        RowBox[{"{", 
         RowBox[{"16", ",", "Black"}], "}"}]}], ",", "\n", "\t\t", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"UpTo", "[", "1000", "]"}], ",", 
          RowBox[{"UpTo", "[", "200", "]"}]}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\n", "\t\t", 
       RowBox[{"GridLines", "\[Rule]", 
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"ii", ",", 
            RowBox[{"{", 
             RowBox[{"ii", ",", 
              RowBox[{"-", 
               RowBox[{"Power", "[", 
                RowBox[{"10", ",", 
                 RowBox[{"Ceiling", "@", 
                  RowBox[{"RealExponent", "@", "range"}]}]}], "]"}]}], ",", 
              RowBox[{"Power", "[", 
               RowBox[{"10", ",", 
                RowBox[{"Ceiling", "@", 
                 RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], ",", 
              FractionBox[
               RowBox[{"Power", "[", 
                RowBox[{"10", ",", 
                 RowBox[{"Ceiling", "@", 
                  RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], "10"]}], 
             "}"}]}], "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"Table", "[", 
           RowBox[{"ii", ",", 
            RowBox[{"{", 
             RowBox[{"ii", ",", 
              RowBox[{"-", 
               RowBox[{"Power", "[", 
                RowBox[{"10", ",", 
                 RowBox[{"Ceiling", "@", 
                  RowBox[{"RealExponent", "@", "range"}]}]}], "]"}]}], ",", 
              RowBox[{"Power", "[", 
               RowBox[{"10", ",", 
                RowBox[{"Ceiling", "@", 
                 RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], ",", 
              FractionBox[
               RowBox[{"Power", "[", 
                RowBox[{"10", ",", 
                 RowBox[{"Ceiling", "@", 
                  RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], "10"]}], 
             "}"}]}], "]"}]}], "\n", "\t\t", "}"}]}], ",", " ", "\n", "\t\t", 
       
       RowBox[{"GridLinesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thin", ",", 
          RowBox[{"Lighter", "@", 
           RowBox[{"Lighter", "@", 
            RowBox[{"Lighter", "@", 
             RowBox[{"Lighter", "@", "Gray"}]}]}]}]}], "]"}]}], ",", "\n", 
       "\t\t", 
       RowBox[{"Frame", "->", "True"}], ",", " ", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
       RowBox[{"FrameStyle", "->", 
        RowBox[{"Directive", "[", "Black", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", 
            RowBox[{"Table", "[", 
             RowBox[{"ii", ",", 
              RowBox[{"{", 
               RowBox[{"ii", ",", 
                RowBox[{"-", 
                 RowBox[{"Power", "[", 
                  RowBox[{"10", ",", 
                   RowBox[{"Ceiling", "@", 
                    RowBox[{"RealExponent", "@", "range"}]}]}], "]"}]}], ",", 
                
                RowBox[{"Power", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"Ceiling", "@", 
                   RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], ",", 
                FractionBox[
                 RowBox[{"Power", "[", 
                  RowBox[{"10", ",", 
                   RowBox[{"Ceiling", "@", 
                    RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], 
                 "10"]}], "}"}]}], "]"}]}], "}"}], ",", "\n", "\t\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"ii", ",", 
              RowBox[{"{", 
               RowBox[{"ii", ",", 
                RowBox[{"-", 
                 RowBox[{"Power", "[", 
                  RowBox[{"10", ",", 
                   RowBox[{"Ceiling", "@", 
                    RowBox[{"RealExponent", "@", "range"}]}]}], "]"}]}], ",", 
                
                RowBox[{"Power", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"Ceiling", "@", 
                   RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], ",", 
                FractionBox[
                 RowBox[{"Power", "[", 
                  RowBox[{"10", ",", 
                   RowBox[{"Ceiling", "@", 
                    RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], 
                 "10"]}], "}"}]}], "]"}], ",", "None"}], "}"}]}], "\n", 
         "\t\t", "}"}]}], ",", " ", "\n", "\t\t", 
       RowBox[{"FrameTicksStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "12"}], "]"}]}]}], "\n", "\t", "]"}]}], "\n", 
    "]"}]}], ";"}], "\n"}], "Code",
 CellChangeTimes->{{3.869756470779277*^9, 3.869756480445038*^9}, {
   3.869756513700449*^9, 3.869756516665214*^9}, 3.869761331430903*^9, 
   3.872940706946088*^9},ExpressionUUID->"177e44b0-1253-42a8-b799-\
75954b4bd792"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "GetPlotFrameMiddle", "]"}], " ", "=", " ", 
    RowBox[{"Option", "[", "ListPlot", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"GetPlotFrameMiddle", "[", 
    RowBox[{
     RowBox[{"plotRange_List", "/;", 
      RowBox[{
       RowBox[{"Dimensions", "@", "plotRange"}], "===", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}]}]}], ",", 
     RowBox[{"opts", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", "\n", "\t", 
    RowBox[{
     RowBox[{"{", "\n", "\t\t", 
      RowBox[{"range", " ", "=", " ", 
       RowBox[{"Max", "@", 
        RowBox[{"Abs", "@", 
         RowBox[{"Flatten", "[", "plotRange", "]"}]}]}]}], "\n", "\t", "}"}], 
     "\n", "\t", ",", "\n", "\t", 
     RowBox[{"ListPlot", "[", "\n", "\t\t", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\n", "\t\t", "opts", ",", "\n", "\t\t", 
       RowBox[{"BaseStyle", " ", "\[Rule]", " ", "texStyle"}], ",", "\n", 
       "\t\t", 
       RowBox[{"PlotRange", " ", "\[Rule]", " ", "plotRange"}], ",", "\n", 
       "\t\t", 
       RowBox[{"FrameLabel", "\[Rule]", "None"}], ",", "\n", "\t\t", 
       RowBox[{"LabelStyle", "->", 
        RowBox[{"{", 
         RowBox[{"16", ",", "Black"}], "}"}]}], ",", "\n", "\t\t", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"UpTo", "[", "1000", "]"}], ",", 
          RowBox[{"UpTo", "[", "200", "]"}]}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", "\n", "\t\t", 
       RowBox[{"GridLines", "\[Rule]", 
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{"ii", ",", 
            RowBox[{"{", 
             RowBox[{"ii", ",", 
              RowBox[{"-", 
               RowBox[{"Power", "[", 
                RowBox[{"10", ",", 
                 RowBox[{"Ceiling", "@", 
                  RowBox[{"RealExponent", "@", "range"}]}]}], "]"}]}], ",", 
              RowBox[{"Power", "[", 
               RowBox[{"10", ",", 
                RowBox[{"Ceiling", "@", 
                 RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], ",", 
              FractionBox[
               RowBox[{"Power", "[", 
                RowBox[{"10", ",", 
                 RowBox[{"Ceiling", "@", 
                  RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], "10"]}], 
             "}"}]}], "]"}], ",", "\n", "\t\t\t", 
          RowBox[{"Table", "[", 
           RowBox[{"ii", ",", 
            RowBox[{"{", 
             RowBox[{"ii", ",", 
              RowBox[{"-", 
               RowBox[{"Power", "[", 
                RowBox[{"10", ",", 
                 RowBox[{"Ceiling", "@", 
                  RowBox[{"RealExponent", "@", "range"}]}]}], "]"}]}], ",", 
              RowBox[{"Power", "[", 
               RowBox[{"10", ",", 
                RowBox[{"Ceiling", "@", 
                 RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], ",", 
              FractionBox[
               RowBox[{"Power", "[", 
                RowBox[{"10", ",", 
                 RowBox[{"Ceiling", "@", 
                  RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], "10"]}], 
             "}"}]}], "]"}]}], "\n", "\t\t", "}"}]}], ",", " ", "\n", "\t\t", 
       
       RowBox[{"GridLinesStyle", "\[Rule]", 
        RowBox[{"Directive", "[", 
         RowBox[{"Thin", ",", 
          RowBox[{"Lighter", "@", 
           RowBox[{"Lighter", "@", 
            RowBox[{"Lighter", "@", 
             RowBox[{"Lighter", "@", "Gray"}]}]}]}]}], "]"}]}], ",", "\n", 
       "\t\t", 
       RowBox[{"Frame", "->", "True"}], ",", " ", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
       RowBox[{"FrameStyle", "->", 
        RowBox[{"Directive", "[", "Black", "]"}]}], ",", "\n", "\t\t", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", "\n", "\t\t\t", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"None", ",", "None"}], "}"}], ",", "\n", "\t\t\t", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"ii", ",", 
              RowBox[{"{", 
               RowBox[{"ii", ",", 
                RowBox[{"-", 
                 RowBox[{"Power", "[", 
                  RowBox[{"10", ",", 
                   RowBox[{"Ceiling", "@", 
                    RowBox[{"RealExponent", "@", "range"}]}]}], "]"}]}], ",", 
                
                RowBox[{"Power", "[", 
                 RowBox[{"10", ",", 
                  RowBox[{"Ceiling", "@", 
                   RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], ",", 
                FractionBox[
                 RowBox[{"Power", "[", 
                  RowBox[{"10", ",", 
                   RowBox[{"Ceiling", "@", 
                    RowBox[{"RealExponent", "@", "range"}]}]}], "]"}], 
                 "10"]}], "}"}]}], "]"}], ",", "None"}], "}"}]}], "\n", 
         "\t\t", "}"}]}], ",", " ", "\n", "\t\t", 
       RowBox[{"FrameTicksStyle", "->", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "12"}], "]"}]}]}], "\n", "\t", "]"}]}], "\n", 
    "]"}]}], ";"}], "\n"}], "Code",
 CellChangeTimes->{{3.869756470779277*^9, 3.869756480445038*^9}, {
   3.869756513700449*^9, 3.869756516665214*^9}, {3.869761242133584*^9, 
   3.8697612544471083`*^9}, {3.8697612934181633`*^9, 3.869761317223127*^9}, 
   3.8729406453836107`*^9},ExpressionUUID->"3efa54fe-8c45-4823-a414-\
afbbca442a17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "OverlayLensingBandsByHand", "]"}], " ", ":=", 
    " ", 
    RowBox[{"Join", "[", "\n", "\t", 
     RowBox[{
      RowBox[{"Options", "@", "ListPlot"}], ",", "\n", "\t", 
      RowBox[{"{", "\n", "\t\t", 
       RowBox[{
        RowBox[{"ScaleRange", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0.1", ",", "3"}], "}"}]}], ",", "\n", "\t\t", 
        RowBox[{"InitsXYS", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], ",", "\n", "\t\t", 
        RowBox[{"LB1Color", "\[Rule]", 
         RowBox[{"Opacity", "[", 
          RowBox[{"0.2", ",", 
           RowBox[{"Darker", "@", 
            RowBox[{"RGBColor", "[", "\"\<#0070ff\>\"", "]"}]}]}], "]"}]}], 
        ",", "\n", "\t\t", 
        RowBox[{"LB2Color", "\[Rule]", 
         RowBox[{"Opacity", "[", 
          RowBox[{"0.5", ",", 
           RowBox[{"RGBColor", "[", "\"\<#ff8f00\>\"", "]"}]}], "]"}]}]}], 
       "\n", "\t", "}"}]}], "\n", "]"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{"OverlayLensingBandsByHand", "[", 
   RowBox[{"lb1_", ",", "lb2_", ",", 
    RowBox[{"opts", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", "\n", "\t", 
   RowBox[{
    RowBox[{"{", "\n", "\t\t", 
     RowBox[{
      RowBox[{"scaleMin", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NumberQ", "@", "#"}], ",", "#", ",", "0.1"}], "]"}], 
         "&"}], "@", 
        RowBox[{"First", "[", 
         RowBox[{"OptionValue", "[", "ScaleRange", "]"}], "]"}]}]}], ",", 
      "\n", "\t\t", 
      RowBox[{"scaleMax", " ", "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"NumberQ", "@", "#"}], ",", "#", ",", "3"}], "]"}], "&"}], 
        "@", 
        RowBox[{"Last", "[", 
         RowBox[{"OptionValue", "[", "ScaleRange", "]"}], "]"}]}]}], ",", 
      "\n", "\t\t", "range", ",", "\n", "\t\t", "plotRange", ",", "\n", 
      "\t\t", "plotFrameLeft"}], "\n", "\t", "}"}], "\n", "\t", ",", "\n", 
    "\t", 
    RowBox[{"(*", 
     RowBox[{"determine", " ", "the", " ", "plot", " ", "range"}], "*)"}], 
    "\n", "\t", 
    RowBox[{
     RowBox[{"range", " ", "=", " ", 
      RowBox[{
       RowBox[{"Max", "@", 
        RowBox[{"Abs", "@", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"First", "@", 
            RowBox[{"GetRangeOfRegion", "[", "lb1", "]"}]}], ",", 
           RowBox[{"First", "@", 
            RowBox[{"GetRangeOfRegion", "[", "lb2", "]"}]}]}], "]"}]}]}], "*",
        "scaleMax"}]}], ";", "\n", "\t", 
     RowBox[{"plotRange", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "range"}], ",", "range"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "range"}], ",", "range"}], "}"}]}], "}"}]}], ";", "\n",
      "\t", "\n", "\t", 
     RowBox[{"(*", 
      RowBox[{"generate", " ", "a", " ", "plot", " ", "frame"}], "*)"}], "\n",
      "\t", 
     RowBox[{"plotFrameLeft", " ", "=", " ", 
      RowBox[{"GetPlotFrameLeft", "[", 
       RowBox[{"plotRange", ",", "opts", ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}]}], ";", "\n", "\t", 
     "\n", "\t", 
     RowBox[{"Manipulate", "[", "\n", "\t", 
      RowBox[{
       RowBox[{"Column", "[", 
        RowBox[{"{", "\n", "\t\t", 
         RowBox[{
          RowBox[{"Show", "[", "\n", "\t\t\t", 
           RowBox[{"plotFrameLeft", ",", "\n", "\t\t\t", 
            RowBox[{"Graphics", "[", 
             RowBox[{"{", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"OptionValue", "[", "LB1Color", "]"}], ",", "\n", 
               "\t\t\t\t", 
               RowBox[{"BoundaryDiscretizeRegion", "@", "lb1"}]}], "\n", 
              "\t\t\t", "}"}], "]"}], ",", "\n", "\t\t\t", 
            RowBox[{"Graphics", "[", 
             RowBox[{"{", "\n", "\t\t\t\t", 
              RowBox[{
               RowBox[{"OptionValue", "[", "LB2Color", "]"}], ",", "\n", 
               "\t\t\t\t", 
               RowBox[{"BoundaryDiscretizeRegion", "@", 
                RowBox[{"Region", "@", 
                 RowBox[{"TransformedRegion", "[", "\n", "\t\t\t\t\t", 
                  RowBox[{
                   RowBox[{"TransformedRegion", "[", "\n", "\t\t\t\t\t\t", 
                    RowBox[{
                    "lb2", "\n", "\t\t\t\t\t\t", ",", "\n", "\t\t\t\t\t\t", 
                    RowBox[{"TranslationTransform", "[", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", "y"}], "}"}], "]"}]}], "\n", 
                    "\t\t\t\t\t", "]"}], ",", "\n", "\t\t\t\t\t", 
                   RowBox[{"ScalingTransform", "[", 
                    RowBox[{"{", 
                    RowBox[{"s", ",", "s"}], "}"}], "]"}]}], "\n", "\t\t\t\t",
                   "]"}]}]}]}], "\n", "\t\t\t", "}"}], "]"}]}], "\n", "\t\t", 
           "]"}], ",", "\n", "\t\t", 
          RowBox[{"\"\<displacement x = \>\"", "<>", 
           RowBox[{"ToString", "@", 
            RowBox[{"N", "@", "x"}]}]}], ",", "\n", "\t\t", 
          RowBox[{"\"\<displacement y = \>\"", "<>", 
           RowBox[{"ToString", "@", 
            RowBox[{"N", "@", "y"}]}]}], ",", "\n", "\t\t", 
          RowBox[{"\"\<rescaling s = \>\"", "<>", 
           RowBox[{"ToString", "@", 
            RowBox[{"N", "@", "s"}]}]}]}], "\n", "\t", "}"}], "]"}], ",", 
       "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{
            RowBox[{"OptionValue", "[", "InitsXYS", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<displacement x\>\""}], 
          "}"}], ",", 
         RowBox[{"-", 
          FractionBox["range", "2"]}], ",", 
         FractionBox["range", "2"]}], "}"}], ",", " ", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"y", ",", 
           RowBox[{
            RowBox[{"OptionValue", "[", "InitsXYS", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", "\"\<displacement y\>\""}], 
          "}"}], ",", 
         RowBox[{"-", 
          FractionBox["range", "2"]}], ",", 
         FractionBox["range", "2"]}], "}"}], ",", " ", "\n", "\t", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"s", ",", 
           RowBox[{
            RowBox[{"OptionValue", "[", "InitsXYS", "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], ",", "\"\<rescaling s\>\""}], 
          "}"}], ",", "scaleMin", ",", "scaleMax"}], "}"}], ",", "\n", "\t", 
       RowBox[{"ContentSize", "\[Rule]", 
        RowBox[{"UpTo", "[", "1000", "]"}]}]}], "\n", "]"}]}]}], "\n", 
   "]"}]}]}], "Code",
 CellChangeTimes->{{3.869749829125627*^9, 3.869749926893487*^9}, {
   3.8697500229890337`*^9, 3.869750140292494*^9}, {3.869750244188518*^9, 
   3.869750265624391*^9}, {3.869750311764862*^9, 3.869750633749526*^9}, {
   3.86975066869121*^9, 3.869750702742284*^9}, 3.869751059225441*^9, {
   3.869754529362287*^9, 3.869754535530632*^9}, {3.8697545733769283`*^9, 
   3.869754581226451*^9}, {3.869754663920393*^9, 3.869754744659112*^9}, {
   3.8697549264962254`*^9, 3.869754977403138*^9}, {3.8697556382812357`*^9, 
   3.869755647204904*^9}, {3.8697556851323633`*^9, 3.869755710193163*^9}, {
   3.869755744507556*^9, 3.86975589279731*^9}, {3.86975594031828*^9, 
   3.869756024743204*^9}, {3.8697567544375134`*^9, 3.8697568083605833`*^9}, {
   3.869757019380803*^9, 3.869757028262876*^9}, {3.872943127464034*^9, 
   3.8729431322252493`*^9}, {3.872943217052081*^9, 3.872943280357682*^9}, 
   3.8729433834414387`*^9, {3.9073370446963387`*^9, 3.9073370461713963`*^9}, {
   3.90733715757346*^9, 3.907337157857332*^9}, {3.90733721421038*^9, 
   3.9073372334190197`*^9}, {3.907337267290213*^9, 3.9073372697398357`*^9}, {
   3.907340129044289*^9, 
   3.907340136634748*^9}},ExpressionUUID->"e3c215a1-648b-4911-8402-\
438763878450"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["end private", "Section",
 CellChangeTimes->{{3.760077912659463*^9, 
  3.760077914943944*^9}},ExpressionUUID->"e0bd1514-825f-4242-9ac1-\
89d3843d7dbd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"End", "[", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.760074041242437*^9, 3.760074050882641*^9}, {
  3.779281427941218*^9, 
  3.779281428164085*^9}},ExpressionUUID->"a23912b9-bdc7-4bf3-89e6-\
308e50945364"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["... end package", "Title",
 CellChangeTimes->{{3.760068549615602*^9, 3.760068553890718*^9}, {
  3.760068651788693*^9, 
  3.7600686551322117`*^9}},ExpressionUUID->"ed201445-cfe1-47f8-9b4b-\
84f8aeb87d5a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"EndPackage", "[", "]"}], ";"}]], "Code",
 CellChangeTimes->{{3.760068673402979*^9, 3.7600686741632147`*^9}, {
  3.7600740456300898`*^9, 
  3.760074046264381*^9}},ExpressionUUID->"29cd71e5-3116-4b03-8a39-\
3762496ba6ec"]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowSize->{960, 1025},
WindowMargins->{{Automatic, 0}, {0, Automatic}},
FrontEndVersion->"12.0 for Linux x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 307, 8, 31, "Input",ExpressionUUID->"77075486-5282-43d8-8f4c-2640cde0b011"],
Cell[CellGroupData[{
Cell[889, 32, 322, 5, 99, "Title",ExpressionUUID->"e1de7b50-f3e1-4431-bdde-ec835925983a"],
Cell[1214, 39, 189, 3, 36, "Text",ExpressionUUID->"1825afe7-ff8a-4c59-8c56-35df6d3a33c5"],
Cell[1406, 44, 690, 12, 76, "Code",ExpressionUUID->"2dc640ed-d7ae-41f6-abed-eef75faaee9f"],
Cell[2099, 58, 195, 3, 36, "Text",ExpressionUUID->"163775db-cc2d-4157-b960-0ed7348f1b00"],
Cell[2297, 63, 1212, 19, 142, "Code",ExpressionUUID->"53eaacf0-ecae-4728-aa5d-acc9a7616236"],
Cell[3512, 84, 180, 3, 36, "Text",ExpressionUUID->"772fea83-d35b-4a28-a4e7-1e8b0c8d7141"],
Cell[3695, 89, 837, 19, 98, "Code",ExpressionUUID->"3b18929a-1000-4ce2-81bd-664f89336639"],
Cell[4535, 110, 317, 7, 84, "Text",ExpressionUUID->"cfdf6fc0-078b-4281-b7bb-a791b15af319"],
Cell[4855, 119, 746, 12, 53, "Code",ExpressionUUID->"abdab360-a506-46a2-a8f6-63fb657a1a96"],
Cell[5604, 133, 753, 19, 120, "Code",ExpressionUUID->"b161de56-d291-4fe3-a82b-5815176073d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6394, 157, 201, 3, 99, "Title",ExpressionUUID->"c6a22289-b7c9-4689-995e-ede231415f97"],
Cell[CellGroupData[{
Cell[6620, 164, 172, 3, 68, "Section",ExpressionUUID->"c1e3d575-c49f-4869-be69-c4693156b5b3"],
Cell[6795, 169, 1119, 18, 120, "Code",ExpressionUUID->"64ab91e6-42ae-4efd-8ad8-76724d66eb33"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7951, 192, 226, 4, 68, "Section",ExpressionUUID->"a0814f68-03ca-4cd8-965a-42482b371eb1"],
Cell[CellGroupData[{
Cell[8202, 200, 162, 3, 55, "Subsection",ExpressionUUID->"cdb421d8-fcb4-496e-b599-b822ec6a832e"],
Cell[8367, 205, 5544, 79, 186, "Code",ExpressionUUID->"6ccda2f5-7b1c-4574-adbb-4d9a55f2a636"],
Cell[13914, 286, 5012, 71, 120, "Code",ExpressionUUID->"9beac848-0955-433f-b059-427204a71661"],
Cell[18929, 359, 1350, 26, 230, "Code",ExpressionUUID->"3884822e-3152-48e8-8bac-10248f28093b"],
Cell[20282, 387, 5306, 79, 186, "Code",ExpressionUUID->"8775a527-62c6-46ea-af82-e81b6fc79dbd"],
Cell[25591, 468, 5632, 87, 274, "Code",ExpressionUUID->"021c90e8-f96e-4492-beba-7fe4d047a753"],
Cell[31226, 557, 5370, 76, 142, "Code",ExpressionUUID->"252a32cb-5f63-4498-86fc-533366c532bd"],
Cell[36599, 635, 5181, 74, 120, "Code",ExpressionUUID->"61585167-eae1-4b2d-a815-37c7f2546f09"],
Cell[41783, 711, 1067, 17, 142, "Code",ExpressionUUID->"4cf2b4dc-4ba3-4073-bf7b-6f6259cc0379"],
Cell[42853, 730, 1019, 15, 186, "Code",ExpressionUUID->"9c8ace11-ac90-4983-818d-02f6834b81da"],
Cell[43875, 747, 598, 11, 76, "Code",ExpressionUUID->"f3cb2115-4254-472e-94a9-9bb34c1c19fe"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44510, 763, 173, 3, 55, "Subsection",ExpressionUUID->"19ee947a-2b09-4d5c-9b44-1f42767c374b"],
Cell[44686, 768, 375, 8, 76, "Code",ExpressionUUID->"9eaca5f1-2c6c-474c-805e-a4140a4b540c"],
Cell[45064, 778, 381, 9, 76, "Code",ExpressionUUID->"6e987c31-542c-43f9-86e0-677161ee3fe8"],
Cell[45448, 789, 462, 10, 76, "Code",ExpressionUUID->"841f669b-7ff7-4a29-bae8-6d1f0011bab4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45947, 804, 169, 3, 55, "Subsection",ExpressionUUID->"ab3fd302-16f5-4770-a417-b4aad8420f01"],
Cell[46119, 809, 796, 15, 164, "Code",ExpressionUUID->"d9992614-7fc1-4855-8491-011b5a1aa6f8"],
Cell[46918, 826, 415, 9, 142, "Code",ExpressionUUID->"3ca69170-724e-482d-ae34-bbf416dbb1da"],
Cell[47336, 837, 417, 9, 142, "Code",ExpressionUUID->"bc13955d-1f51-42e9-a499-fc48828a6cfc"],
Cell[47756, 848, 419, 9, 142, "Code",ExpressionUUID->"a882aaa7-a744-45c0-bc42-50033676f387"],
Cell[48178, 859, 576, 11, 164, "Code",ExpressionUUID->"7bf301dd-e45a-48d4-a21c-72e442db4178"],
Cell[48757, 872, 387, 8, 76, "Code",ExpressionUUID->"94fcbbd7-5350-4c1f-86d1-8257643b2160"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49181, 885, 172, 3, 55, "Subsection",ExpressionUUID->"63d46589-bdcd-4bb0-9d83-a1cda9e0d2e6"],
Cell[49356, 890, 452, 9, 142, "Code",ExpressionUUID->"348ae29f-c566-4b9b-9c4b-f864a6915937"],
Cell[49811, 901, 547, 11, 142, "Code",ExpressionUUID->"a6a99b74-be8f-4902-badf-3305d53a59f1"],
Cell[50361, 914, 611, 11, 164, "Code",ExpressionUUID->"5c073cab-e0d0-4d2b-a912-f71b5fc62427"],
Cell[50975, 927, 685, 12, 142, "Code",ExpressionUUID->"a2a044b9-f3fe-4244-8f95-a8ef5fa96277"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[51709, 945, 273, 4, 68, "Section",ExpressionUUID->"d37c321c-f0dd-41cf-8886-f6f9db64970e"],
Cell[51985, 951, 791, 15, 53, "Code",ExpressionUUID->"d6e855bf-84d7-4db6-9a51-14477754c928"],
Cell[52779, 968, 655, 13, 53, "Code",ExpressionUUID->"6ef60240-4c75-45b6-977a-78308a8a7baf"],
Cell[53437, 983, 992, 17, 98, "Code",ExpressionUUID->"a4badff6-af69-4f27-a4cd-12d0ed007cd3"],
Cell[54432, 1002, 298, 6, 76, "Code",ExpressionUUID->"08f85c20-8600-4ca3-bc9e-a96134facaca"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[54779, 1014, 257, 4, 99, "Title",ExpressionUUID->"ff6b5ed0-57ac-41c0-a030-7d212efc8260"],
Cell[55039, 1020, 294, 6, 53, "Code",ExpressionUUID->"a74a3243-0f6e-4f9e-8b36-51137ca15616"],
Cell[CellGroupData[{
Cell[55358, 1030, 161, 3, 68, "Section",ExpressionUUID->"3e020569-6fe7-48c9-a261-cc8daa115535"],
Cell[55522, 1035, 1979, 47, 274, "Code",ExpressionUUID->"6b243751-5f7b-4726-90e4-64e2f2e1b42a"],
Cell[57504, 1084, 548, 16, 76, "Code",ExpressionUUID->"49a836a5-04ef-4f4e-bd62-93b8d14ada35"],
Cell[58055, 1102, 1937, 42, 275, "Code",ExpressionUUID->"39407ce1-3e11-4999-b0ea-dd76b8a643e6"],
Cell[59995, 1146, 397, 12, 71, "Code",ExpressionUUID->"e25d0f03-c641-415f-826c-886a93ecb375"],
Cell[60395, 1160, 1725, 46, 186, "Code",ExpressionUUID->"0c144312-5d5b-42c6-b407-89a86ae89f0d"]
}, Closed]],
Cell[CellGroupData[{
Cell[62157, 1211, 197, 3, 54, "Section",ExpressionUUID->"c8e1da78-752e-4cb3-bbe2-dd2976b2adbe"],
Cell[CellGroupData[{
Cell[62379, 1218, 356, 7, 83, "Subsection",ExpressionUUID->"bfe22adc-2b99-4867-b44c-d99eb5044030"],
Cell[62738, 1227, 1704, 41, 340, "Code",ExpressionUUID->"0f917a6d-978f-432a-abf9-17113ef48566"],
Cell[64445, 1270, 1685, 36, 252, "Code",ExpressionUUID->"05b6410c-8370-4445-b82c-580cdc9c0180"],
Cell[66133, 1308, 1251, 30, 255, "Input",ExpressionUUID->"3e7515a8-c1c5-4231-9e0e-6d0d156aceb5",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[67421, 1343, 175, 3, 39, "Subsection",ExpressionUUID->"7c82d830-f888-42f9-ac89-5e8a83ac1aeb"],
Cell[67599, 1348, 8595, 200, 1374, "Code",ExpressionUUID->"82417c37-f12d-4b31-a916-3f70b3ccfdb4"],
Cell[76197, 1550, 1373, 39, 164, "Code",ExpressionUUID->"36c64e3c-ef00-434d-a8dc-79a38b160006"]
}, Closed]],
Cell[CellGroupData[{
Cell[77607, 1594, 189, 3, 39, "Subsection",ExpressionUUID->"244fa1a1-2ef5-4610-be39-c5a865d0b932"],
Cell[77799, 1599, 3928, 89, 472, "Code",ExpressionUUID->"2520c103-06a8-44b1-9ecc-d6bfcd2fd319"],
Cell[81730, 1690, 1226, 32, 164, "Code",ExpressionUUID->"43ce8f58-3c62-43da-a133-87964d2602ec"],
Cell[82959, 1724, 249, 6, 36, "Text",ExpressionUUID->"fa6632e3-4adf-446e-9a10-a71bf562b544"],
Cell[83211, 1732, 223, 5, 53, "Code",ExpressionUUID->"66a1fab4-0589-433e-8224-afe6023f55cf"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[83483, 1743, 205, 3, 54, "Section",ExpressionUUID->"6f5dbe02-edc8-4e60-ae76-565ac0f1212d"],
Cell[CellGroupData[{
Cell[83713, 1750, 164, 3, 55, "Subsection",ExpressionUUID->"2ce167d8-2950-4019-8022-306183c18170"],
Cell[83880, 1755, 7588, 190, 450, "Code",ExpressionUUID->"c4e880a6-8a54-499b-bfdf-4d43e71ab746"]
}, Closed]],
Cell[CellGroupData[{
Cell[91505, 1950, 235, 4, 39, "Subsection",ExpressionUUID->"c6efdc96-2747-4f69-8a26-1bc1f5c98036"],
Cell[91743, 1956, 1041, 28, 53, "Code",ExpressionUUID->"527f1fc5-7536-4708-988e-0f836b3189fc"],
Cell[92787, 1986, 20100, 480, 1778, "Code",ExpressionUUID->"ac8a9e24-e216-404f-bc49-8130e98f6ba7"]
}, Closed]],
Cell[CellGroupData[{
Cell[112924, 2471, 176, 3, 39, "Subsection",ExpressionUUID->"82ca8588-a091-42b5-813e-6385ea0b3f6f"],
Cell[113103, 2476, 26878, 638, 1884, "Code",ExpressionUUID->"438f4348-4a98-4200-8903-da2323779d72"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[140030, 3120, 347, 9, 93, "Section",ExpressionUUID->"8c068908-f456-4f2b-9e29-09342dbd7a6f"],
Cell[CellGroupData[{
Cell[140402, 3133, 332, 5, 55, "Subsection",ExpressionUUID->"e148aa6f-5514-4ec2-914b-dc3452671ca4"],
Cell[140737, 3140, 9724, 194, 780, "Code",ExpressionUUID->"6ddbb78e-24a6-49c4-8f1f-1b7642c1cf6c"],
Cell[150464, 3336, 13399, 289, 1173, "Code",ExpressionUUID->"d4149ce8-7f84-411d-8be8-232693dd88a6"],
Cell[163866, 3627, 14165, 296, 1151, "Code",ExpressionUUID->"1cdb77bb-ebb3-452f-bcd0-0e0681beb89d"]
}, Closed]],
Cell[CellGroupData[{
Cell[178068, 3928, 284, 6, 39, "Subsection",ExpressionUUID->"95513782-c6f1-4db8-b0f2-61badf0735fc"],
Cell[178355, 3936, 27489, 584, 2803, "Code",ExpressionUUID->"15fb3f9b-9e2c-49d1-a4a9-7b0bdb1033ec"]
}, Closed]],
Cell[CellGroupData[{
Cell[205881, 4525, 319, 6, 39, "Subsection",ExpressionUUID->"5d8cd046-dc96-4043-ae62-5ed8ef726352"],
Cell[206203, 4533, 18935, 453, 1564, "Code",ExpressionUUID->"b5995626-7a0f-4f00-bfd5-1c9be582e1e1"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[225187, 4992, 403, 10, 107, "Section",ExpressionUUID->"3fc8a556-343e-4e44-8461-cacd458c459e"],
Cell[CellGroupData[{
Cell[225615, 5006, 322, 5, 55, "Subsection",ExpressionUUID->"efca2671-e0b9-40bb-9632-0f2ce7a0e30e"],
Cell[225940, 5013, 14509, 326, 1467, "Code",ExpressionUUID->"02ba55a3-752e-45fa-bc5b-5f19dbc162e5"],
Cell[240452, 5341, 20245, 394, 1198, "Code",ExpressionUUID->"d7abafc7-c197-4eae-afff-bfe55954ea86"],
Cell[260700, 5737, 9464, 212, 1043, "Code",ExpressionUUID->"2bfd0531-7d83-4123-8d1d-f82c9951c3f8"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[270213, 5955, 401, 10, 107, "Section",ExpressionUUID->"04916804-8ef0-4000-b4b5-448139ffac6a"],
Cell[CellGroupData[{
Cell[270639, 5969, 398, 8, 55, "Subsection",ExpressionUUID->"2dc1edaf-850a-4e36-a82e-8c3453c2680f"],
Cell[271040, 5979, 50239, 1032, 7472, "Code",ExpressionUUID->"eae3b64c-4905-4a15-a133-7135df9cb26c"],
Cell[321282, 7013, 18705, 366, 2262, "Code",ExpressionUUID->"1349a99f-2fac-4453-b1ae-f1848d5656b9"],
Cell[339990, 7381, 22231, 469, 2117, "Code",ExpressionUUID->"295fba6d-25f1-449a-b74a-74a837447838"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[362270, 7856, 218, 3, 68, "Section",ExpressionUUID->"11047185-c8b7-44fb-b494-f86dc82565c1"],
Cell[CellGroupData[{
Cell[362513, 7863, 183, 3, 46, "Subsubsection",ExpressionUUID->"a800c00a-f526-4fa6-a35e-b25a268428e6"],
Cell[362699, 7868, 5808, 132, 680, "Code",ExpressionUUID->"0f4a1c72-14d2-4cb2-8926-10c571393be0"],
Cell[368510, 8002, 1874, 44, 384, "Code",ExpressionUUID->"32581b70-5438-46aa-9526-e05d3dafb4cf"],
Cell[370387, 8048, 1351, 34, 230, "Code",ExpressionUUID->"bee3d5a2-41a7-482b-9e74-2400a319251d"],
Cell[371741, 8084, 2253, 52, 318, "Code",ExpressionUUID->"f6ca5ff6-bcd4-4d92-8537-6561f6ee93e6"]
}, Closed]],
Cell[CellGroupData[{
Cell[374031, 8141, 213, 4, 38, "Subsubsection",ExpressionUUID->"634a2c87-0b22-46e8-814f-fa5d578f9685"],
Cell[374247, 8147, 11421, 231, 1669, "Code",ExpressionUUID->"21090d6e-6f0d-44e3-a4c7-712494ff7c6d"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[385717, 8384, 155, 3, 68, "Section",ExpressionUUID->"2a7d980d-d167-40ab-ab42-519c1f6c48bf"],
Cell[CellGroupData[{
Cell[385897, 8391, 214, 4, 55, "Subsection",ExpressionUUID->"265e6ced-876b-4924-9da9-715ab08c1ad4"],
Cell[386114, 8397, 483, 11, 53, "Code",ExpressionUUID->"19a15571-d01a-4fe8-a00f-8f3f33ad3644"],
Cell[386600, 8410, 6809, 161, 843, "Code",ExpressionUUID->"9816375e-bc0b-43c7-9bdd-3c3cb081c66b"],
Cell[393412, 8573, 6277, 151, 799, "Code",ExpressionUUID->"177e44b0-1253-42a8-b799-75954b4bd792"],
Cell[399692, 8726, 5527, 132, 779, "Code",ExpressionUUID->"3efa54fe-8c45-4823-a414-afbbca442a17"],
Cell[405222, 8860, 8189, 190, 1320, "Code",ExpressionUUID->"e3c215a1-648b-4911-8402-438763878450"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[413460, 9056, 156, 3, 68, "Section",ExpressionUUID->"e0bd1514-825f-4242-9ac1-89d3843d7dbd"],
Cell[413619, 9061, 243, 6, 53, "Code",ExpressionUUID->"a23912b9-bdc7-4bf3-89e6-308e50945364"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[413911, 9073, 209, 4, 99, "Title",ExpressionUUID->"ed201445-cfe1-47f8-9b4b-84f8aeb87d5a"],
Cell[414123, 9079, 254, 6, 53, "Code",ExpressionUUID->"29cd71e5-3116-4b03-8a39-3762496ba6ec"]
}, Open  ]]
}
]
*)

